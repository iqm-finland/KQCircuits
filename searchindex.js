Search.setIndex({"docnames": ["about", "api/kqcircuits", "api/kqcircuits.chips", "api/kqcircuits.chips.airbridge_crossings", "api/kqcircuits.chips.airbridge_dc_test", "api/kqcircuits.chips.chip", "api/kqcircuits.chips.crossing_twoface", "api/kqcircuits.chips.daisy_woven", "api/kqcircuits.chips.dc_test", "api/kqcircuits.chips.demo", "api/kqcircuits.chips.demo_twoface", "api/kqcircuits.chips.empty", "api/kqcircuits.chips.junction_test", "api/kqcircuits.chips.junction_test2", "api/kqcircuits.chips.launchers", "api/kqcircuits.chips.lithography_test", "api/kqcircuits.chips.lithography_test_twoface", "api/kqcircuits.chips.munch_qubits", "api/kqcircuits.chips.quality_factor", "api/kqcircuits.chips.quality_factor_twoface", "api/kqcircuits.chips.sample_holder_test", "api/kqcircuits.chips.shaping", "api/kqcircuits.chips.simple", "api/kqcircuits.chips.single_xmons", "api/kqcircuits.chips.stripes", "api/kqcircuits.chips.tsv_test", "api/kqcircuits.chips.xmons_direct_coupling", "api/kqcircuits.defaults", "api/kqcircuits.elements", "api/kqcircuits.elements.airbridge_connection", "api/kqcircuits.elements.airbridges", "api/kqcircuits.elements.airbridges.airbridge", "api/kqcircuits.elements.airbridges.airbridge_multi_face", "api/kqcircuits.elements.airbridges.airbridge_rectangular", "api/kqcircuits.elements.capacitive_x_coupler", "api/kqcircuits.elements.chip_frame", "api/kqcircuits.elements.circular_capacitor", "api/kqcircuits.elements.element", "api/kqcircuits.elements.finger_capacitor_square", "api/kqcircuits.elements.finger_capacitor_taper", "api/kqcircuits.elements.flip_chip_connectors", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf", "api/kqcircuits.elements.fluxlines", "api/kqcircuits.elements.fluxlines.fluxline", "api/kqcircuits.elements.fluxlines.fluxline_standard", "api/kqcircuits.elements.fluxlines.fluxline_straight", "api/kqcircuits.elements.hanger_resonator", "api/kqcircuits.elements.launcher", "api/kqcircuits.elements.launcher_dc", "api/kqcircuits.elements.markers", "api/kqcircuits.elements.markers.marker", "api/kqcircuits.elements.markers.marker_standard", "api/kqcircuits.elements.markers.mask_marker_fc", "api/kqcircuits.elements.meander", "api/kqcircuits.elements.quarter_wave_cpw_resonator", "api/kqcircuits.elements.smooth_capacitor", "api/kqcircuits.elements.spiral_capacitor", "api/kqcircuits.elements.spiral_resonator_polygon", "api/kqcircuits.elements.tsvs", "api/kqcircuits.elements.tsvs.tsv", "api/kqcircuits.elements.tsvs.tsv_ellipse", "api/kqcircuits.elements.tsvs.tsv_standard", "api/kqcircuits.elements.waveguide_composite", "api/kqcircuits.elements.waveguide_coplanar", "api/kqcircuits.elements.waveguide_coplanar_curved", "api/kqcircuits.elements.waveguide_coplanar_splitter", "api/kqcircuits.elements.waveguide_coplanar_straight", "api/kqcircuits.elements.waveguide_coplanar_taper", "api/kqcircuits.junctions", "api/kqcircuits.junctions.junction", "api/kqcircuits.junctions.manhattan", "api/kqcircuits.junctions.manhattan_single_junction", "api/kqcircuits.junctions.no_squid", "api/kqcircuits.junctions.sim", "api/kqcircuits.junctions.squid", "api/kqcircuits.junctions.super_inductor", "api/kqcircuits.klayout_view", "api/kqcircuits.layer_cluster", "api/kqcircuits.layer_config", "api/kqcircuits.layer_config.default_layer_config", "api/kqcircuits.layer_config.example_layer_config", "api/kqcircuits.masks", "api/kqcircuits.masks.mask_export", "api/kqcircuits.masks.mask_layout", "api/kqcircuits.masks.mask_set", "api/kqcircuits.masks.multi_face_mask_layout", "api/kqcircuits.pya_resolver", "api/kqcircuits.qubits", "api/kqcircuits.qubits.circular_transmon_single_island", "api/kqcircuits.qubits.concentric_transmon", "api/kqcircuits.qubits.double_pads", "api/kqcircuits.qubits.double_pads_splines", "api/kqcircuits.qubits.qubit", "api/kqcircuits.qubits.swissmon", "api/kqcircuits.run", "api/kqcircuits.simulations", "api/kqcircuits.simulations.airbridges_sim", "api/kqcircuits.simulations.cross_section_simulation", "api/kqcircuits.simulations.empty_simulation", "api/kqcircuits.simulations.epr", "api/kqcircuits.simulations.epr.circular_capacitor", "api/kqcircuits.simulations.epr.circular_transmon_single_island", "api/kqcircuits.simulations.epr.double_pads", "api/kqcircuits.simulations.epr.example", "api/kqcircuits.simulations.epr.gui_config", "api/kqcircuits.simulations.epr.smooth_capacitor", "api/kqcircuits.simulations.epr.spiral_capacitor", "api/kqcircuits.simulations.epr.swissmon", "api/kqcircuits.simulations.epr.util", "api/kqcircuits.simulations.export", "api/kqcircuits.simulations.export.ansys", "api/kqcircuits.simulations.export.ansys.ansys_export", "api/kqcircuits.simulations.export.ansys.ansys_solution", "api/kqcircuits.simulations.export.cross_section", "api/kqcircuits.simulations.export.cross_section.cross_section_export", "api/kqcircuits.simulations.export.cross_section.cut_simulation", "api/kqcircuits.simulations.export.cross_section.epr_correction_export", "api/kqcircuits.simulations.export.elmer", "api/kqcircuits.simulations.export.elmer.elmer_export", "api/kqcircuits.simulations.export.elmer.elmer_solution", "api/kqcircuits.simulations.export.elmer.mesh_size_helpers", "api/kqcircuits.simulations.export.export_and_run", "api/kqcircuits.simulations.export.export_singularity", "api/kqcircuits.simulations.export.remote_export_and_run", "api/kqcircuits.simulations.export.simulation_export", "api/kqcircuits.simulations.export.simulation_validate", "api/kqcircuits.simulations.export.solution", "api/kqcircuits.simulations.export.sonnet", "api/kqcircuits.simulations.export.sonnet.parser", "api/kqcircuits.simulations.export.sonnet.sonnet_export", "api/kqcircuits.simulations.export.util", "api/kqcircuits.simulations.partition_region", "api/kqcircuits.simulations.port", "api/kqcircuits.simulations.post_process", "api/kqcircuits.simulations.simulation", "api/kqcircuits.simulations.single_element_simulation", "api/kqcircuits.simulations.single_xmons_full_chip_sim", "api/kqcircuits.simulations.waveguides_sim", "api/kqcircuits.simulations.xmons_direct_coupling_full_chip_sim", "api/kqcircuits.simulations.xmons_direct_coupling_sim", "api/kqcircuits.test_structures", "api/kqcircuits.test_structures.airbridge_dc", "api/kqcircuits.test_structures.cross_test", "api/kqcircuits.test_structures.junction_test_pads", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple", "api/kqcircuits.test_structures.stripes_test", "api/kqcircuits.test_structures.stripes_test_increasing_width", "api/kqcircuits.test_structures.test_structure", "api/kqcircuits.test_structures.tsv_test_pattern", "api/kqcircuits.util", "api/kqcircuits.util.area", "api/kqcircuits.util.count_instances", "api/kqcircuits.util.coupler_lib", "api/kqcircuits.util.deep_delete", "api/kqcircuits.util.defaults_helper", "api/kqcircuits.util.dependencies", "api/kqcircuits.util.edit_node_plugin", "api/kqcircuits.util.error_on_cell", "api/kqcircuits.util.export_helper", "api/kqcircuits.util.geometry_helper", "api/kqcircuits.util.geometry_json_encoder", "api/kqcircuits.util.groundgrid", "api/kqcircuits.util.gui_helper", "api/kqcircuits.util.import_helper", "api/kqcircuits.util.instance_hierarchy_helpers", "api/kqcircuits.util.label", "api/kqcircuits.util.label_polygons", "api/kqcircuits.util.layout_to_code", "api/kqcircuits.util.library_helper", "api/kqcircuits.util.load_save_layout", "api/kqcircuits.util.log_router", "api/kqcircuits.util.merge", "api/kqcircuits.util.netlist_extraction", "api/kqcircuits.util.netlist_graph", "api/kqcircuits.util.parameters", "api/kqcircuits.util.plugin_startup", "api/kqcircuits.util.refpoints", "api/kqcircuits.util.replace_junctions", "api/kqcircuits.util.symmetric_polygons", "citing", "contributing", "developer/architecture", "developer/coding_style", "developer/containers", "developer/documentation", "developer/index", "developer/setup", "developer/standalone", "developer/testing", "getting_started/first_look", "getting_started/gui_features/gui_elements", "getting_started/gui_features/gui_elements_to_code", "getting_started/gui_features/gui_menu_commands", "getting_started/gui_features/gui_tutorial", "getting_started/gui_features/gui_waveguides", "getting_started/gui_features/index", "getting_started/index", "getting_started/python_workflow/faces", "getting_started/python_workflow/index", "getting_started/python_workflow/layers", "getting_started/python_workflow/python_example", "getting_started/python_workflow/python_start", "getting_started/python_workflow/python_structure", "getting_started/python_workflow/refpoints", "getting_started/salt", "index", "installation/index", "installation/klayout", "installation/known_issues", "support", "trademarks", "user_guide/configuration", "user_guide/file_system_and_utilities", "user_guide/index", "user_guide/macro_workflow", "user_guide/mask_export", "user_guide/simulation/elmer_remote_workflow", "user_guide/simulation/export_and_run", "user_guide/simulation/gmsh_elmer_export", "user_guide/simulation/simulation_features", "user_guide/simulation/simulation_objects", "user_guide/simulation/simulation_scripts", "user_guide/simulations", "user_guide/terminology", "user_guide/usage"], "filenames": ["about.rst", "api/kqcircuits.rst", "api/kqcircuits.chips.rst", "api/kqcircuits.chips.airbridge_crossings.rst", "api/kqcircuits.chips.airbridge_dc_test.rst", "api/kqcircuits.chips.chip.rst", "api/kqcircuits.chips.crossing_twoface.rst", "api/kqcircuits.chips.daisy_woven.rst", "api/kqcircuits.chips.dc_test.rst", "api/kqcircuits.chips.demo.rst", "api/kqcircuits.chips.demo_twoface.rst", "api/kqcircuits.chips.empty.rst", "api/kqcircuits.chips.junction_test.rst", "api/kqcircuits.chips.junction_test2.rst", "api/kqcircuits.chips.launchers.rst", "api/kqcircuits.chips.lithography_test.rst", "api/kqcircuits.chips.lithography_test_twoface.rst", "api/kqcircuits.chips.munch_qubits.rst", "api/kqcircuits.chips.quality_factor.rst", "api/kqcircuits.chips.quality_factor_twoface.rst", "api/kqcircuits.chips.sample_holder_test.rst", "api/kqcircuits.chips.shaping.rst", "api/kqcircuits.chips.simple.rst", "api/kqcircuits.chips.single_xmons.rst", "api/kqcircuits.chips.stripes.rst", "api/kqcircuits.chips.tsv_test.rst", "api/kqcircuits.chips.xmons_direct_coupling.rst", "api/kqcircuits.defaults.rst", "api/kqcircuits.elements.rst", "api/kqcircuits.elements.airbridge_connection.rst", "api/kqcircuits.elements.airbridges.rst", "api/kqcircuits.elements.airbridges.airbridge.rst", "api/kqcircuits.elements.airbridges.airbridge_multi_face.rst", "api/kqcircuits.elements.airbridges.airbridge_rectangular.rst", "api/kqcircuits.elements.capacitive_x_coupler.rst", "api/kqcircuits.elements.chip_frame.rst", "api/kqcircuits.elements.circular_capacitor.rst", "api/kqcircuits.elements.element.rst", "api/kqcircuits.elements.finger_capacitor_square.rst", "api/kqcircuits.elements.finger_capacitor_taper.rst", "api/kqcircuits.elements.flip_chip_connectors.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.rst", "api/kqcircuits.elements.fluxlines.rst", "api/kqcircuits.elements.fluxlines.fluxline.rst", "api/kqcircuits.elements.fluxlines.fluxline_standard.rst", "api/kqcircuits.elements.fluxlines.fluxline_straight.rst", "api/kqcircuits.elements.hanger_resonator.rst", "api/kqcircuits.elements.launcher.rst", "api/kqcircuits.elements.launcher_dc.rst", "api/kqcircuits.elements.markers.rst", "api/kqcircuits.elements.markers.marker.rst", "api/kqcircuits.elements.markers.marker_standard.rst", "api/kqcircuits.elements.markers.mask_marker_fc.rst", "api/kqcircuits.elements.meander.rst", "api/kqcircuits.elements.quarter_wave_cpw_resonator.rst", "api/kqcircuits.elements.smooth_capacitor.rst", "api/kqcircuits.elements.spiral_capacitor.rst", "api/kqcircuits.elements.spiral_resonator_polygon.rst", "api/kqcircuits.elements.tsvs.rst", "api/kqcircuits.elements.tsvs.tsv.rst", "api/kqcircuits.elements.tsvs.tsv_ellipse.rst", "api/kqcircuits.elements.tsvs.tsv_standard.rst", "api/kqcircuits.elements.waveguide_composite.rst", "api/kqcircuits.elements.waveguide_coplanar.rst", "api/kqcircuits.elements.waveguide_coplanar_curved.rst", "api/kqcircuits.elements.waveguide_coplanar_splitter.rst", "api/kqcircuits.elements.waveguide_coplanar_straight.rst", "api/kqcircuits.elements.waveguide_coplanar_taper.rst", "api/kqcircuits.junctions.rst", "api/kqcircuits.junctions.junction.rst", "api/kqcircuits.junctions.manhattan.rst", "api/kqcircuits.junctions.manhattan_single_junction.rst", "api/kqcircuits.junctions.no_squid.rst", "api/kqcircuits.junctions.sim.rst", "api/kqcircuits.junctions.squid.rst", "api/kqcircuits.junctions.super_inductor.rst", "api/kqcircuits.klayout_view.rst", "api/kqcircuits.layer_cluster.rst", "api/kqcircuits.layer_config.rst", "api/kqcircuits.layer_config.default_layer_config.rst", "api/kqcircuits.layer_config.example_layer_config.rst", "api/kqcircuits.masks.rst", "api/kqcircuits.masks.mask_export.rst", "api/kqcircuits.masks.mask_layout.rst", "api/kqcircuits.masks.mask_set.rst", "api/kqcircuits.masks.multi_face_mask_layout.rst", "api/kqcircuits.pya_resolver.rst", "api/kqcircuits.qubits.rst", "api/kqcircuits.qubits.circular_transmon_single_island.rst", "api/kqcircuits.qubits.concentric_transmon.rst", "api/kqcircuits.qubits.double_pads.rst", "api/kqcircuits.qubits.double_pads_splines.rst", "api/kqcircuits.qubits.qubit.rst", "api/kqcircuits.qubits.swissmon.rst", "api/kqcircuits.run.rst", "api/kqcircuits.simulations.rst", "api/kqcircuits.simulations.airbridges_sim.rst", "api/kqcircuits.simulations.cross_section_simulation.rst", "api/kqcircuits.simulations.empty_simulation.rst", "api/kqcircuits.simulations.epr.rst", "api/kqcircuits.simulations.epr.circular_capacitor.rst", "api/kqcircuits.simulations.epr.circular_transmon_single_island.rst", "api/kqcircuits.simulations.epr.double_pads.rst", "api/kqcircuits.simulations.epr.example.rst", "api/kqcircuits.simulations.epr.gui_config.rst", "api/kqcircuits.simulations.epr.smooth_capacitor.rst", "api/kqcircuits.simulations.epr.spiral_capacitor.rst", "api/kqcircuits.simulations.epr.swissmon.rst", "api/kqcircuits.simulations.epr.util.rst", "api/kqcircuits.simulations.export.rst", "api/kqcircuits.simulations.export.ansys.rst", "api/kqcircuits.simulations.export.ansys.ansys_export.rst", "api/kqcircuits.simulations.export.ansys.ansys_solution.rst", "api/kqcircuits.simulations.export.cross_section.rst", "api/kqcircuits.simulations.export.cross_section.cross_section_export.rst", "api/kqcircuits.simulations.export.cross_section.cut_simulation.rst", "api/kqcircuits.simulations.export.cross_section.epr_correction_export.rst", "api/kqcircuits.simulations.export.elmer.rst", "api/kqcircuits.simulations.export.elmer.elmer_export.rst", "api/kqcircuits.simulations.export.elmer.elmer_solution.rst", "api/kqcircuits.simulations.export.elmer.mesh_size_helpers.rst", "api/kqcircuits.simulations.export.export_and_run.rst", "api/kqcircuits.simulations.export.export_singularity.rst", "api/kqcircuits.simulations.export.remote_export_and_run.rst", "api/kqcircuits.simulations.export.simulation_export.rst", "api/kqcircuits.simulations.export.simulation_validate.rst", "api/kqcircuits.simulations.export.solution.rst", "api/kqcircuits.simulations.export.sonnet.rst", "api/kqcircuits.simulations.export.sonnet.parser.rst", "api/kqcircuits.simulations.export.sonnet.sonnet_export.rst", "api/kqcircuits.simulations.export.util.rst", "api/kqcircuits.simulations.partition_region.rst", "api/kqcircuits.simulations.port.rst", "api/kqcircuits.simulations.post_process.rst", "api/kqcircuits.simulations.simulation.rst", "api/kqcircuits.simulations.single_element_simulation.rst", "api/kqcircuits.simulations.single_xmons_full_chip_sim.rst", "api/kqcircuits.simulations.waveguides_sim.rst", "api/kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.rst", "api/kqcircuits.simulations.xmons_direct_coupling_sim.rst", "api/kqcircuits.test_structures.rst", "api/kqcircuits.test_structures.airbridge_dc.rst", "api/kqcircuits.test_structures.cross_test.rst", "api/kqcircuits.test_structures.junction_test_pads.rst", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads.rst", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.rst", "api/kqcircuits.test_structures.stripes_test.rst", "api/kqcircuits.test_structures.stripes_test_increasing_width.rst", "api/kqcircuits.test_structures.test_structure.rst", "api/kqcircuits.test_structures.tsv_test_pattern.rst", "api/kqcircuits.util.rst", "api/kqcircuits.util.area.rst", "api/kqcircuits.util.count_instances.rst", "api/kqcircuits.util.coupler_lib.rst", "api/kqcircuits.util.deep_delete.rst", "api/kqcircuits.util.defaults_helper.rst", "api/kqcircuits.util.dependencies.rst", "api/kqcircuits.util.edit_node_plugin.rst", "api/kqcircuits.util.error_on_cell.rst", "api/kqcircuits.util.export_helper.rst", "api/kqcircuits.util.geometry_helper.rst", "api/kqcircuits.util.geometry_json_encoder.rst", "api/kqcircuits.util.groundgrid.rst", "api/kqcircuits.util.gui_helper.rst", "api/kqcircuits.util.import_helper.rst", "api/kqcircuits.util.instance_hierarchy_helpers.rst", "api/kqcircuits.util.label.rst", "api/kqcircuits.util.label_polygons.rst", "api/kqcircuits.util.layout_to_code.rst", "api/kqcircuits.util.library_helper.rst", "api/kqcircuits.util.load_save_layout.rst", "api/kqcircuits.util.log_router.rst", "api/kqcircuits.util.merge.rst", "api/kqcircuits.util.netlist_extraction.rst", "api/kqcircuits.util.netlist_graph.rst", "api/kqcircuits.util.parameters.rst", "api/kqcircuits.util.plugin_startup.rst", "api/kqcircuits.util.refpoints.rst", "api/kqcircuits.util.replace_junctions.rst", "api/kqcircuits.util.symmetric_polygons.rst", "citing.rst", "contributing.rst", "developer/architecture.rst", "developer/coding_style.rst", "developer/containers.rst", "developer/documentation.rst", "developer/index.rst", "developer/setup.rst", "developer/standalone.rst", "developer/testing.rst", "getting_started/first_look.rst", "getting_started/gui_features/gui_elements.rst", "getting_started/gui_features/gui_elements_to_code.rst", "getting_started/gui_features/gui_menu_commands.rst", "getting_started/gui_features/gui_tutorial.rst", "getting_started/gui_features/gui_waveguides.rst", "getting_started/gui_features/index.rst", "getting_started/index.rst", "getting_started/python_workflow/faces.rst", "getting_started/python_workflow/index.rst", "getting_started/python_workflow/layers.rst", "getting_started/python_workflow/python_example.rst", "getting_started/python_workflow/python_start.rst", "getting_started/python_workflow/python_structure.rst", "getting_started/python_workflow/refpoints.rst", "getting_started/salt.rst", "index.rst", "installation/index.rst", "installation/klayout.rst", "installation/known_issues.rst", "support.rst", "trademarks.rst", "user_guide/configuration.rst", "user_guide/file_system_and_utilities.rst", "user_guide/index.rst", "user_guide/macro_workflow.rst", "user_guide/mask_export.rst", "user_guide/simulation/elmer_remote_workflow.rst", "user_guide/simulation/export_and_run.rst", "user_guide/simulation/gmsh_elmer_export.rst", "user_guide/simulation/simulation_features.rst", "user_guide/simulation/simulation_objects.rst", "user_guide/simulation/simulation_scripts.rst", "user_guide/simulations.rst", "user_guide/terminology.rst", "user_guide/usage.rst"], "titles": ["About", "API documentation", "kqcircuits.chips", "kqcircuits.chips.airbridge_crossings", "kqcircuits.chips.airbridge_dc_test", "kqcircuits.chips.chip", "kqcircuits.chips.crossing_twoface", "kqcircuits.chips.daisy_woven", "kqcircuits.chips.dc_test", "kqcircuits.chips.demo", "kqcircuits.chips.demo_twoface", "kqcircuits.chips.empty", "kqcircuits.chips.junction_test", "kqcircuits.chips.junction_test2", "kqcircuits.chips.launchers", "kqcircuits.chips.lithography_test", "kqcircuits.chips.lithography_test_twoface", "kqcircuits.chips.munch_qubits", "kqcircuits.chips.quality_factor", "kqcircuits.chips.quality_factor_twoface", "kqcircuits.chips.sample_holder_test", "kqcircuits.chips.shaping", "kqcircuits.chips.simple", "kqcircuits.chips.single_xmons", "kqcircuits.chips.stripes", "kqcircuits.chips.tsv_test", "kqcircuits.chips.xmons_direct_coupling", "kqcircuits.defaults", "kqcircuits.elements", "kqcircuits.elements.airbridge_connection", "kqcircuits.elements.airbridges", "kqcircuits.elements.airbridges.airbridge", "kqcircuits.elements.airbridges.airbridge_multi_face", "kqcircuits.elements.airbridges.airbridge_rectangular", "kqcircuits.elements.capacitive_x_coupler", "kqcircuits.elements.chip_frame", "kqcircuits.elements.circular_capacitor", "kqcircuits.elements.element", "kqcircuits.elements.finger_capacitor_square", "kqcircuits.elements.finger_capacitor_taper", "kqcircuits.elements.flip_chip_connectors", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf", "kqcircuits.elements.fluxlines", "kqcircuits.elements.fluxlines.fluxline", "kqcircuits.elements.fluxlines.fluxline_standard", "kqcircuits.elements.fluxlines.fluxline_straight", "kqcircuits.elements.hanger_resonator", "kqcircuits.elements.launcher", "kqcircuits.elements.launcher_dc", "kqcircuits.elements.markers", "kqcircuits.elements.markers.marker", "kqcircuits.elements.markers.marker_standard", "kqcircuits.elements.markers.mask_marker_fc", "kqcircuits.elements.meander", "kqcircuits.elements.quarter_wave_cpw_resonator", "kqcircuits.elements.smooth_capacitor", "kqcircuits.elements.spiral_capacitor", "kqcircuits.elements.spiral_resonator_polygon", "kqcircuits.elements.tsvs", "kqcircuits.elements.tsvs.tsv", "kqcircuits.elements.tsvs.tsv_ellipse", "kqcircuits.elements.tsvs.tsv_standard", "kqcircuits.elements.waveguide_composite", "kqcircuits.elements.waveguide_coplanar", "kqcircuits.elements.waveguide_coplanar_curved", "kqcircuits.elements.waveguide_coplanar_splitter", "kqcircuits.elements.waveguide_coplanar_straight", "kqcircuits.elements.waveguide_coplanar_taper", "kqcircuits.junctions", "kqcircuits.junctions.junction", "kqcircuits.junctions.manhattan", "kqcircuits.junctions.manhattan_single_junction", "kqcircuits.junctions.no_squid", "kqcircuits.junctions.sim", "kqcircuits.junctions.squid", "kqcircuits.junctions.super_inductor", "kqcircuits.klayout_view", "kqcircuits.layer_cluster", "kqcircuits.layer_config", "kqcircuits.layer_config.default_layer_config", "kqcircuits.layer_config.example_layer_config", "kqcircuits.masks", "kqcircuits.masks.mask_export", "kqcircuits.masks.mask_layout", "kqcircuits.masks.mask_set", "kqcircuits.masks.multi_face_mask_layout", "kqcircuits.pya_resolver", "kqcircuits.qubits", "kqcircuits.qubits.circular_transmon_single_island", "kqcircuits.qubits.concentric_transmon", "kqcircuits.qubits.double_pads", "kqcircuits.qubits.double_pads_splines", "kqcircuits.qubits.qubit", "kqcircuits.qubits.swissmon", "kqcircuits.run", "kqcircuits.simulations", "kqcircuits.simulations.airbridges_sim", "kqcircuits.simulations.cross_section_simulation", "kqcircuits.simulations.empty_simulation", "kqcircuits.simulations.epr", "kqcircuits.simulations.epr.circular_capacitor", "kqcircuits.simulations.epr.circular_transmon_single_island", "kqcircuits.simulations.epr.double_pads", "kqcircuits.simulations.epr.example", "kqcircuits.simulations.epr.gui_config", "kqcircuits.simulations.epr.smooth_capacitor", "kqcircuits.simulations.epr.spiral_capacitor", "kqcircuits.simulations.epr.swissmon", "kqcircuits.simulations.epr.util", "kqcircuits.simulations.export", "kqcircuits.simulations.export.ansys", "kqcircuits.simulations.export.ansys.ansys_export", "kqcircuits.simulations.export.ansys.ansys_solution", "kqcircuits.simulations.export.cross_section", "kqcircuits.simulations.export.cross_section.cross_section_export", "kqcircuits.simulations.export.cross_section.cut_simulation", "kqcircuits.simulations.export.cross_section.epr_correction_export", "kqcircuits.simulations.export.elmer", "kqcircuits.simulations.export.elmer.elmer_export", "kqcircuits.simulations.export.elmer.elmer_solution", "kqcircuits.simulations.export.elmer.mesh_size_helpers", "kqcircuits.simulations.export.export_and_run", "kqcircuits.simulations.export.export_singularity", "kqcircuits.simulations.export.remote_export_and_run", "kqcircuits.simulations.export.simulation_export", "kqcircuits.simulations.export.simulation_validate", "kqcircuits.simulations.export.solution", "kqcircuits.simulations.export.sonnet", "kqcircuits.simulations.export.sonnet.parser", "kqcircuits.simulations.export.sonnet.sonnet_export", "kqcircuits.simulations.export.util", "kqcircuits.simulations.partition_region", "kqcircuits.simulations.port", "kqcircuits.simulations.post_process", "kqcircuits.simulations.simulation", "kqcircuits.simulations.single_element_simulation", "kqcircuits.simulations.single_xmons_full_chip_sim", "kqcircuits.simulations.waveguides_sim", "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim", "kqcircuits.simulations.xmons_direct_coupling_sim", "kqcircuits.test_structures", "kqcircuits.test_structures.airbridge_dc", "kqcircuits.test_structures.cross_test", "kqcircuits.test_structures.junction_test_pads", "kqcircuits.test_structures.junction_test_pads.junction_test_pads", "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple", "kqcircuits.test_structures.stripes_test", "kqcircuits.test_structures.stripes_test_increasing_width", "kqcircuits.test_structures.test_structure", "kqcircuits.test_structures.tsv_test_pattern", "kqcircuits.util", "kqcircuits.util.area", "kqcircuits.util.count_instances", "kqcircuits.util.coupler_lib", "kqcircuits.util.deep_delete", "kqcircuits.util.defaults_helper", "kqcircuits.util.dependencies", "kqcircuits.util.edit_node_plugin", "kqcircuits.util.error_on_cell", "kqcircuits.util.export_helper", "kqcircuits.util.geometry_helper", "kqcircuits.util.geometry_json_encoder", "kqcircuits.util.groundgrid", "kqcircuits.util.gui_helper", "kqcircuits.util.import_helper", "kqcircuits.util.instance_hierarchy_helpers", "kqcircuits.util.label", "kqcircuits.util.label_polygons", "kqcircuits.util.layout_to_code", "kqcircuits.util.library_helper", "kqcircuits.util.load_save_layout", "kqcircuits.util.log_router", "kqcircuits.util.merge", "kqcircuits.util.netlist_extraction", "kqcircuits.util.netlist_graph", "kqcircuits.util.parameters", "kqcircuits.util.plugin_startup", "kqcircuits.util.refpoints", "kqcircuits.util.replace_junctions", "kqcircuits.util.symmetric_polygons", "Citing", "Contributing", "Architecture", "Coding Style", "Containers", "Documentation", "Developer Guide", "Developer GUI Setup", "Developer Standalone module Setup", "Testing", "First look around", "Placing Elements", "Converting elements placed in GUI into code", "Useful commands", "Manual workflow tutorial", "Using waveguides", "GUI Features", "Getting started", "Faces", "Python workflow", "KQCircuits Layers", "Detailed examples", "Getting started", "Structure of Element code", "Refpoints", "KQCircuits Salt package", "KQCircuits documentation", "Installation", "Installing KLayout", "Known installation issues", "Support", "Trademarks", "Custom configuration", "General Structure and Miscellaneous Utilities", "User Guide", "Macro and script development", "Mask export", "Elmer remote simulations workflow", "Run and export in one line", "Gmsh/Elmer export", "Simulation features", "Simulation objects", "Export functions", "External simulation tools", "Terminology", "Usage"], "terms": {"kqcircuit": [0, 1, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "develop": [0, 183, 186, 191, 201, 205, 207, 208, 209, 210, 216, 220, 224], "wa": [0, 37, 85, 136, 170, 179, 186, 207, 208, 211, 217, 218, 221, 223, 227], "start": [0, 5, 13, 19, 35, 55, 59, 64, 65, 66, 67, 81, 90, 91, 117, 132, 136, 146, 162, 170, 177, 180, 187, 193, 196, 201, 205, 207, 208, 211, 212, 214, 215, 217, 219, 221, 223], "johann": [0, 182], "heinsoo": [0, 182], "aalto": [0, 70], "univers": 0, "The": [0, 3, 5, 6, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 26, 29, 32, 33, 35, 36, 37, 38, 39, 41, 43, 49, 50, 52, 53, 54, 55, 57, 58, 59, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 81, 83, 84, 85, 86, 87, 89, 90, 91, 94, 95, 97, 98, 99, 100, 110, 113, 114, 117, 118, 120, 121, 122, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 154, 160, 161, 162, 163, 165, 166, 170, 172, 174, 175, 176, 177, 180, 183, 184, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 209, 211, 214, 215, 217, 218, 219, 221, 222, 224, 225, 226, 227], "final": [0, 64, 81, 86, 136, 202, 224], "kqc": [0, 96, 123, 125, 176, 178, 179, 183, 184, 186, 189, 190, 192, 193, 194, 200, 204, 207, 209, 210, 211, 214, 215, 217, 218, 219, 220, 221, 227], "version": [0, 1, 83, 84, 85, 86, 87, 163, 182, 186, 188, 189, 190, 193, 196, 207, 209, 210, 215, 218, 219, 221, 224], "correspond": [0, 17, 19, 26, 37, 64, 81, 85, 87, 90, 91, 121, 133, 136, 141, 162, 166, 168, 170, 175, 184, 186, 191, 192, 193, 196, 203, 204, 205, 206, 215, 217, 223, 225, 226], "v0": [0, 211], "0": [0, 5, 6, 7, 10, 13, 16, 17, 18, 19, 23, 25, 28, 29, 31, 32, 35, 36, 37, 38, 43, 47, 55, 56, 57, 59, 64, 65, 66, 67, 71, 72, 73, 77, 78, 81, 90, 92, 93, 94, 95, 114, 116, 117, 118, 121, 122, 130, 131, 132, 134, 136, 140, 146, 150, 151, 153, 162, 163, 169, 170, 174, 177, 178, 179, 180, 186, 190, 193, 196, 200, 202, 206, 207, 210, 211, 214, 218, 223], "tag": [0, 175, 183, 186, 190, 226], "iqm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "github": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "repositori": [0, 161, 186, 188, 190, 207, 209, 215], "sinc": [0, 165, 190, 194, 206, 211, 223], "ha": [0, 5, 20, 23, 36, 37, 38, 57, 64, 72, 85, 86, 90, 91, 95, 99, 114, 127, 136, 161, 165, 170, 176, 177, 180, 186, 189, 190, 192, 194, 195, 202, 205, 206, 207, 211, 215, 217, 218, 219, 221, 223], "been": [0, 64, 86, 136, 171, 207, 218], "see": [0, 2, 19, 37, 64, 78, 81, 86, 98, 100, 110, 114, 121, 131, 136, 137, 138, 139, 140, 141, 142, 180, 183, 184, 186, 189, 190, 194, 195, 196, 197, 200, 201, 203, 204, 206, 207, 209, 211, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 227], "cite": [0, 208], "section": [0, 13, 25, 29, 32, 37, 38, 59, 64, 92, 99, 114, 116, 117, 121, 134, 136, 137, 146, 151, 175, 179, 184, 189, 190, 194, 195, 196, 197, 198, 199, 201, 203, 205, 206, 207, 214, 218, 220, 223, 225], "other": [0, 2, 5, 13, 28, 34, 37, 38, 64, 65, 66, 72, 73, 78, 79, 81, 92, 94, 117, 121, 125, 127, 131, 136, 146, 155, 162, 173, 179, 180, 181, 182, 183, 184, 186, 190, 191, 192, 194, 197, 198, 200, 202, 203, 205, 206, 208, 211, 214, 215, 217, 218, 221, 223, 224, 226, 227], "author": [0, 182], "http": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "com": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "finland": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "chip": [1, 28, 29, 32, 35, 37, 38, 40, 41, 42, 43, 49, 54, 59, 64, 81, 83, 84, 85, 86, 87, 92, 136, 139, 140, 146, 151, 161, 168, 170, 175, 176, 180, 184, 186, 192, 194, 195, 197, 199, 200, 201, 202, 205, 206, 207, 208, 214, 216, 217, 223, 226, 227], "airbridge_cross": [1, 2], "airbridgecross": [1, 2, 3], "build": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 83, 85, 86, 89, 90, 91, 92, 95, 97, 98, 99, 100, 110, 111, 115, 117, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 170, 171, 184, 186, 187, 189, 192, 201, 203, 204, 206, 207, 210, 211, 218, 219, 221, 222, 223, 224, 225], "airbridge_dc_test": [1, 2], "airbridgedctest": [1, 2, 4], "library_nam": [1, 2, 5, 28, 37, 64, 70, 71, 89, 94, 97, 99, 136, 142, 150, 171, 184], "library_descript": [1, 2, 5, 28, 37, 70, 71, 89, 94, 142, 150, 184], "library_path": [1, 2, 5, 28, 37, 70, 71, 89, 94, 142, 150, 171], "display_text_impl": [1, 2, 5, 28, 37], "can_create_from_shape_impl": [1, 2, 5, 28, 38, 39, 55, 57, 58, 65], "parameters_from_shape_impl": [1, 2, 5, 28, 55, 65], "transformation_from_shape_impl": [1, 2, 5, 28, 30, 31, 65], "get_launcher_assign": [1, 2, 5], "produce_junction_test": [1, 2, 5, 9], "produce_opt_lit_test": [1, 2, 5], "produce_ground_grid": [1, 2, 5], "produce_ground_on_face_grid": [1, 2, 5], "produce_fram": [1, 2, 5], "merge_layout_layers_on_fac": [1, 2, 5, 152, 174], "merge_layout_lay": [1, 2, 5], "produce_structur": [1, 2, 5], "get_box": [1, 2, 5], "get_filter_region": [1, 2, 5], "insert_filtered_el": [1, 2, 5], "get_ground_bump_loc": [1, 2, 5], "post_build": [1, 2, 5, 28, 37], "produce_launch": [1, 2, 5, 97, 140, 203, 206, 214], "produce_n_launch": [1, 2, 5], "make_grid_loc": [1, 2, 5], "get_ground_tsv_loc": [1, 2, 5], "crossing_twofac": [1, 2], "crossingtwofac": [1, 2, 6], "daisy_woven": [1, 2], "daisywoven": [1, 2, 7], "dc_test": [1, 2], "dctest": [1, 2, 8], "demo": [1, 2, 215, 217, 218], "produce_qubit": [1, 2, 9, 10, 17, 26, 97, 140, 141], "produce_coupl": [1, 2, 9, 10, 17], "produce_control_lin": [1, 2, 9, 10], "produce_drivelin": [1, 2, 9, 10, 17], "produce_fluxlin": [1, 2, 9, 10, 89, 94], "produce_readout_structur": [1, 2, 9, 10], "produce_probelin": [1, 2, 9, 10, 17], "demo_twofac": [1, 2, 218], "demotwofac": [1, 2, 10, 200, 218], "empti": [1, 2, 5, 13, 25, 29, 32, 34, 36, 37, 38, 48, 56, 57, 58, 59, 64, 67, 86, 87, 90, 91, 92, 95, 99, 122, 136, 146, 151, 165, 176, 177, 191, 195, 222, 223, 224], "make_empty_area": [1, 2, 11], "junction_test": [1, 2], "junctiontest": [1, 2, 12], "junction_test2": [1, 2], "junctiontest2": [1, 2, 13], "launcher": [1, 2, 5, 7, 8, 18, 20, 23, 28, 50, 95, 138, 140, 175, 196, 200, 203, 206, 214], "lithography_test": [1, 2], "lithographytest": [1, 2, 15], "create_pattern": [1, 2, 15, 16], "lithography_test_twofac": [1, 2], "lithographytesttwofac": [1, 2, 16], "munch_qubit": [1, 2], "munchqubit": [1, 2, 17], "produce_readout_reson": [1, 2, 17, 26, 97, 140], "quality_factor": [1, 2, 171, 218], "qualityfactor": [1, 2, 18, 86, 171, 218], "quality_factor_twofac": [1, 2], "qualityfactortwofac": [1, 2, 19], "produce_reson": [1, 2, 19], "sample_holder_test": [1, 2], "sampleholdertest": [1, 2, 20], "shape": [1, 2, 5, 13, 18, 25, 28, 29, 31, 32, 33, 35, 37, 38, 43, 55, 59, 64, 65, 68, 79, 84, 86, 90, 91, 92, 94, 99, 117, 136, 146, 150, 151, 168, 174, 180, 192, 193, 195, 197, 202, 203, 217, 223, 224, 226], "simpl": [1, 2, 13, 86, 88, 131, 136, 146, 147, 200, 218, 221], "single_xmon": [1, 2], "singlexmon": [1, 2, 23], "qubits_refpoint": [1, 2, 23], "stripe": [1, 2, 5, 15, 16, 148, 149], "tsv_test": [1, 2], "tsvtest": [1, 2, 25], "create_xsect": [1, 2, 25], "xmons_direct_coupl": [1, 2], "xmonsdirectcoupl": [1, 2, 26], "element": [1, 2, 3, 5, 13, 22, 23, 25, 27, 71, 73, 77, 78, 85, 86, 90, 91, 92, 94, 95, 102, 104, 105, 107, 108, 109, 110, 114, 121, 122, 134, 136, 137, 142, 146, 150, 151, 152, 155, 162, 163, 165, 170, 171, 174, 175, 176, 177, 179, 180, 186, 188, 190, 195, 197, 198, 199, 201, 202, 206, 207, 208, 214, 216, 217, 218, 222, 224, 225, 227], "airbridg": [1, 3, 4, 18, 19, 28, 29, 37, 52, 54, 55, 56, 59, 64, 67, 136, 143, 152, 171, 179, 197, 223], "default_typ": [1, 28, 30, 31, 32, 33, 40, 41, 44, 45, 51, 52, 60, 61, 70, 71, 142, 145, 146], "creat": [1, 2, 5, 28, 30, 31, 32, 37, 40, 41, 44, 45, 51, 52, 60, 61, 64, 65, 66, 70, 71, 76, 78, 81, 85, 86, 87, 88, 94, 98, 99, 100, 110, 113, 116, 117, 120, 126, 136, 137, 138, 139, 140, 141, 142, 145, 146, 153, 159, 161, 165, 167, 170, 171, 174, 178, 179, 184, 186, 187, 189, 190, 191, 192, 195, 196, 197, 199, 201, 203, 204, 205, 206, 207, 208, 212, 215, 218, 221, 222, 223, 224, 226], "airbridge_multi_fac": [1, 28, 30], "airbridgemultifac": [1, 28, 30, 32], "airbridge_rectangular": [1, 28, 30], "airbridgerectangular": [1, 28, 30, 33], "flip_chip_connector": [1, 28], "flipchipconnector": [1, 28, 40, 41, 42, 64], "flip_chip_connector_dc": [1, 28, 40], "flipchipconnectordc": [1, 28, 40, 42], "flip_chip_connector_rf": [1, 28, 40], "flipchipconnectorrf": [1, 28, 40, 43, 200], "get_sim_port": [1, 28, 34, 36, 37, 38, 40, 43, 48, 56, 57, 58, 89, 90, 91, 92, 95, 223], "fluxlin": [1, 9, 23, 26, 28, 89, 94, 95, 141], "fluxline_standard": [1, 28, 44], "fluxlinestandard": [1, 28, 44, 46], "fluxline_straight": [1, 28, 44], "fluxlinestraight": [1, 28, 44, 47], "marker": [1, 5, 13, 28, 35, 55, 85, 144, 161, 180], "produce_geometri": [1, 28, 51, 52], "get_marker_loc": [1, 28, 51, 52, 54], "get_marker_region": [1, 28, 51, 52, 54], "marker_standard": [1, 28, 51], "markerstandard": [1, 28, 51, 53], "mask_marker_fc": [1, 28, 51], "maskmarkerfc": [1, 28, 51, 54], "create_cross": [1, 28, 51, 54], "tsv": [1, 5, 25, 28, 37, 136, 151, 200, 205], "tsv_ellips": [1, 28, 60], "tsvellips": [1, 28, 60, 62], "produce_impl": [1, 28, 37, 60, 62, 184], "create_tsv_connector": [1, 28, 60, 62], "tsv_standard": [1, 28, 60], "tsvstandard": [1, 28, 60, 63], "airbridge_connect": [1, 28], "airbridgeconnect": [1, 28, 29, 64], "capacitive_x_coupl": [1, 28], "capacitivexcoupl": [1, 28, 34], "chip_fram": [1, 28], "chipfram": [1, 5, 6, 7, 10, 16, 19, 28, 35], "circular_capacitor": [1, 28, 97, 101], "circularcapacitor": [1, 28, 36], "get_refpoint": [1, 28, 37, 97, 136], "insert_cell_into": [1, 28, 37], "resolve_fac": [1, 28, 37], "parameter_order_kei": [1, 28, 37], "create_cell_from_shap": [1, 28, 37], "create_subtyp": [1, 28, 37], "create_with_refpoint": [1, 28, 37], "add_el": [1, 28, 37, 71, 76, 97, 136, 155, 184, 203], "insert_cel": [1, 26, 28, 37, 78, 97, 136, 141, 155, 170, 184, 200, 203, 206, 217, 223], "face": [1, 5, 6, 7, 10, 13, 16, 19, 25, 28, 29, 31, 32, 35, 37, 38, 41, 43, 56, 59, 62, 63, 64, 65, 66, 67, 78, 81, 83, 84, 85, 86, 87, 92, 97, 110, 122, 133, 134, 136, 139, 146, 151, 152, 161, 174, 175, 179, 180, 192, 195, 197, 201, 202, 205, 206, 216, 225], "pcell_params_by_nam": [1, 28, 37, 97, 136], "add_port": [1, 28, 37, 206], "copy_port": [1, 28, 37], "get_schema": [1, 28, 37, 97, 99, 136], "etch_opposite_face_impl": [1, 28, 37], "get_lay": [1, 28, 37, 94, 97, 99, 136, 200, 203], "raise_error_on_cel": [1, 28, 37, 160], "add_protect": [1, 28, 37], "finger_capacitor_squar": [1, 28, 206], "eval_a2": [1, 28, 38], "eval_b2": [1, 28, 38], "fingercapacitorsquar": [1, 28, 38, 155, 206], "get_ground_region": [1, 28, 38], "finger_area_width": [1, 28, 38], "finger_area_length": [1, 28, 38], "cut_region": [1, 28, 38], "add_waveguid": [1, 28, 38], "finger_capacitor_tap": [1, 28], "fingercapacitortap": [1, 28, 39], "hanger_reson": [1, 28], "hangerreson": [1, 28, 48], "launcher_dc": [1, 28], "launcherdc": [1, 28, 50], "meander": [1, 3, 6, 18, 28, 56, 64, 131, 165, 195, 197], "quarter_wave_cpw_reson": [1, 28], "quarterwavecpwreson": [1, 28, 56], "smooth_capacitor": [1, 28, 97, 101, 137], "unit_vector": [1, 28, 57], "segment_point": [1, 28, 57], "smoothcapacitor": [1, 19, 28, 57, 155], "t_poli": [1, 28, 57], "finger_polygon": [1, 28, 57], "super_smoothen_region": [1, 28, 57], "get_finger_region": [1, 28, 57], "middle_gap_fil": [1, 28, 57], "insert_wg_joint": [1, 28, 57], "spiral_capacitor": [1, 28, 97, 101], "spiralcapacitor": [1, 28, 58], "spiral_resonator_polygon": [1, 28], "spiralresonatorpolygon": [1, 28, 59, 197], "rectangular_paramet": [1, 28, 59], "waveguide_composit": [1, 28], "node": [1, 28, 64, 159, 165, 170, 176, 194, 196, 206, 221], "posit": [1, 17, 23, 25, 28, 31, 37, 55, 64, 65, 66, 85, 90, 91, 94, 95, 99, 110, 130, 136, 161, 165, 168, 170, 176, 179, 194, 197, 203, 205, 206, 218], "align": [1, 28, 37, 54, 64, 78, 85, 94, 136, 144, 161, 165, 180, 194, 206, 218], "inst_nam": [1, 9, 10, 28, 37, 64, 78, 136, 165, 180, 206], "angl": [1, 17, 28, 36, 58, 64, 65, 66, 67, 90, 91, 162, 165], "length_befor": [1, 28, 64, 165], "length_incr": [1, 28, 64, 165], "meander_direct": [1, 28, 55, 64], "deseri": [1, 28, 64, 163], "nodes_from_str": [1, 28, 64], "waveguidecomposit": [1, 28, 64, 165, 170, 206], "get_segment_cel": [1, 28, 64], "get_segment_length": [1, 28, 64], "produce_fixed_length_waveguid": [1, 28, 64], "snap_point": [1, 28, 64], "coerce_parameters_impl": [1, 28, 64, 66], "check_node_typ": [1, 28, 64], "produce_fixed_length_bend": [1, 28, 64], "waveguide_coplanar": [1, 28, 206], "waveguidecoplanar": [1, 28, 64, 65, 170, 194, 206], "produce_waveguid": [1, 28, 65, 97, 140], "get_corner_data": [1, 28, 65], "produce_end_termin": [1, 28, 65], "is_continu": [1, 28, 65], "waveguide_coplanar_curv": [1, 28], "arc": [1, 17, 28, 66, 90, 91, 162], "waveguidecoplanarcurv": [1, 28, 66], "build_geometri": [1, 28, 66, 68], "create_curve_arc": [1, 28, 66], "produce_curve_termin": [1, 28, 66], "waveguide_coplanar_splitt": [1, 28], "waveguidecoplanarsplitt": [1, 28, 67, 197], "t_cross_paramet": [1, 28, 67], "waveguide_coplanar_straight": [1, 28], "waveguidecoplanarstraight": [1, 28, 68], "add_waveguide_path": [1, 28, 68], "waveguide_coplanar_tap": [1, 28], "waveguidecoplanartap": [1, 28, 64, 69], "junction": [1, 5, 9, 10, 13, 23, 26, 84, 90, 91, 92, 93, 94, 134, 136, 141, 145, 146, 147, 179, 180, 184, 192, 202, 208, 222, 223], "manhattan": [1, 5, 10, 13, 23, 26, 70, 71, 73, 77, 92, 94, 141, 146], "produce_manhattan_squid": [1, 70, 72], "produce_tp_smal": [1, 70, 72], "produce_tp_larg": [1, 70, 72], "produce_contact_pad": [1, 70, 72], "manhattan_single_junct": [1, 70], "manhattansinglejunct": [1, 70, 73], "produce_manhattan_junct": [1, 70, 73], "no_squid": [1, 70], "nosquid": [1, 70, 74], "sim": [1, 10, 13, 23, 26, 70, 71, 92, 94, 118, 137, 141, 146, 186, 190, 209, 219, 220, 221, 223, 224], "squid": [1, 10, 13, 23, 26, 70, 71, 72, 74, 75, 77, 89, 92, 93, 94, 95, 134, 141, 146, 180], "super_inductor": [1, 70], "superinductor": [1, 70, 77], "produce_super_inductor": [1, 70, 77], "layer_config": [1, 208, 214, 215], "default_layer_config": [1, 80, 200, 214], "example_layer_config": [1, 80, 214], "mask": [1, 5, 35, 52, 54, 152, 186, 190, 196, 199, 202, 208, 209, 215, 216, 226], "mask_export": [1, 83], "export_mask_set": [1, 83, 84], "export_design": [1, 83, 84], "export_chip": [1, 83, 84], "export_masks_of_fac": [1, 83, 84], "export_mask": [1, 83, 84], "export_doc": [1, 83, 84], "export_bitmap": [1, 83, 84], "get_mask_layout_full_nam": [1, 83, 84], "export_junction_paramet": [1, 83, 84], "mask_layout": [1, 83, 84, 86, 87, 218], "masklayout": [1, 83, 84, 85, 86, 87], "layout": [1, 25, 26, 28, 31, 37, 41, 45, 52, 61, 64, 71, 78, 83, 84, 85, 86, 87, 97, 98, 99, 100, 116, 117, 126, 133, 136, 138, 139, 140, 141, 146, 151, 160, 161, 167, 171, 172, 174, 175, 176, 178, 180, 184, 190, 193, 195, 196, 206, 208, 209, 214, 217, 218, 223, 224, 225, 227], "name": [1, 5, 7, 9, 10, 13, 17, 19, 22, 23, 25, 26, 29, 32, 35, 37, 38, 43, 59, 62, 64, 67, 71, 76, 78, 79, 81, 83, 84, 85, 86, 87, 92, 94, 97, 99, 110, 111, 113, 114, 116, 117, 118, 120, 121, 122, 125, 126, 127, 128, 133, 134, 135, 136, 137, 140, 146, 150, 151, 153, 161, 165, 167, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 184, 186, 187, 189, 196, 202, 203, 204, 206, 207, 211, 214, 215, 217, 218, 219, 223, 224, 225], "with_grid": [1, 5, 83, 85, 86, 87, 136, 218], "face_id": [1, 5, 13, 15, 16, 19, 25, 28, 29, 32, 37, 38, 43, 59, 64, 78, 79, 83, 85, 86, 87, 92, 122, 136, 146, 151, 200, 214], "layers_to_mask": [1, 83, 85, 218], "covered_region_excluded_lay": [1, 83, 85], "chips_map": [1, 83, 85, 86, 87], "align_to": [1, 37, 78, 83, 85, 136, 206, 218], "chips_map_legend": [1, 83, 85, 86], "wafer_rad": [1, 83, 85], "wafer_cent": [1, 83, 85], "chips_map_offset": [1, 83, 85], "wafer_top_flat_length": [1, 83, 85], "wafer_bottom_flat_length": [1, 83, 85], "dice_width": [1, 35, 83, 85], "text_margin": [1, 35, 83, 85], "chip_siz": [1, 83, 85, 218], "edge_clear": [1, 83, 85, 218], "remove_chip": [1, 83, 85], "chip_box_offset": [1, 83, 85], "chip_tran": [1, 83, 85], "mask_name_offset": [1, 83, 85], "mask_name_scal": [1, 83, 85], "mask_name_box_margin": [1, 83, 85], "mask_text_scal": [1, 83, 85], "mask_markers_dict": [1, 83, 85], "mask_marker_offset": [1, 83, 85], "mask_export_lay": [1, 81, 83, 85, 86], "mask_export_density_lay": [1, 83, 85], "submask": [1, 83, 85], "extra_id": [1, 83, 85], "extra_chip": [1, 83, 85], "top_cel": [1, 78, 83, 85, 152, 165, 167, 170, 180, 217, 226], "added_chip": [1, 83, 85], "chips_placed_by_position_label": [1, 83, 85], "chip_copi": [1, 83, 85], "mirror_label": [1, 83, 85], "bbox_face_id": [1, 83, 85, 86, 87], "add_chips_map": [1, 83, 85, 87, 218], "insert_chip": [1, 83, 85], "generate_position_label": [1, 83, 85], "generate_and_insert_chip_copy_label": [1, 83, 85], "insert_chip_copy_label": [1, 83, 85], "two_coordinates_to_position_label": [1, 83, 85], "position_label_to_two_coordin": [1, 83, 85], "mask_set": [1, 83, 84, 218], "maskset": [1, 83, 84, 86, 87, 218], "view": [1, 78, 81, 83, 86, 121, 159, 170, 178, 186, 190, 191, 195, 206, 207, 214, 217, 221, 224, 227], "export_drc": [1, 83, 84, 86], "used_chip": [1, 83, 86], "export_path": [1, 83, 86, 123, 176, 218], "add_mask_layout": [1, 83, 86, 218], "add_multi_face_mask_layout": [1, 83, 86, 87], "add_chip": [1, 83, 86, 218], "export": [1, 78, 79, 81, 83, 84, 85, 86, 97, 98, 100, 110, 136, 138, 139, 140, 141, 161, 170, 175, 176, 180, 186, 190, 196, 199, 207, 208, 209, 216, 217, 219, 222, 223, 225, 226], "chips_map_from_box_map": [1, 83, 86], "multi_face_mask_layout": [1, 83], "multifacemasklayout": [1, 83, 86, 87], "qubit": [1, 9, 10, 17, 23, 26, 70, 110, 140, 141, 184, 192, 196, 202, 205, 207, 208, 222, 223, 224], "circular_transmon_single_island": [1, 89, 97, 101], "circulartransmonsingleisland": [1, 89, 90], "concentric_transmon": [1, 89], "concentrictransmon": [1, 89, 91], "double_pad": [1, 89, 97, 101], "doublepad": [1, 89, 92, 93], "double_pads_splin": [1, 89], "doublepadssplin": [1, 89, 93], "produce_squid": [1, 89, 94, 142, 145, 146], "swissmon": [1, 89, 97, 101, 196, 223, 224], "simul": [1, 13, 25, 26, 29, 32, 34, 36, 37, 38, 43, 48, 56, 57, 58, 59, 64, 75, 81, 90, 91, 92, 94, 95, 146, 151, 152, 179, 186, 190, 199, 201, 202, 207, 208, 209, 215, 216, 220, 224], "epr": [1, 13, 25, 29, 32, 36, 37, 38, 56, 57, 58, 59, 64, 90, 92, 95, 97, 118, 121, 122, 127, 134, 136, 137, 146, 151, 222], "partition_region": [1, 97, 101, 102, 103, 104, 105, 107, 108, 109, 110, 118, 136], "correction_cut": [1, 97, 101, 102, 103, 104, 105, 107, 108, 109, 110, 118], "extract_circular_capacitor_from": [1, 97, 101, 102], "exampl": [1, 5, 28, 37, 64, 78, 79, 81, 85, 86, 97, 101, 110, 117, 121, 136, 137, 162, 163, 171, 176, 180, 184, 186, 189, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 210, 214, 216, 218, 219, 221, 222, 223, 224], "extract_from": [1, 97, 101, 105], "gui_config": [1, 97, 101, 105], "extract_swissmon_from": [1, 97, 101, 109], "util": [1, 59, 67, 97, 101, 111, 191, 203, 204, 206, 208, 216, 223, 224], "in_gui": [1, 97, 101, 110], "get_mer_z": [1, 97, 101, 110], "extract_child_simul": [1, 97, 101, 110], "create_bulk_and_mer_partition_region": [1, 97, 101, 110], "ansi": [1, 97, 111, 128, 157, 221, 222, 223, 225], "ansys_export": [1, 97, 111, 112, 224], "export_ansys_json": [1, 97, 111, 112, 113], "export_ansys_bat": [1, 97, 111, 112, 113], "export_ansi": [1, 97, 111, 112, 113, 222, 224, 225], "ansys_solut": [1, 97, 111, 112], "ansyssolut": [1, 97, 111, 112, 113, 114, 127], "ansys_tool": [1, 97, 111, 112, 114, 222], "percent_refin": [1, 97, 111, 112, 114], "maximum_pass": [1, 97, 111, 112, 114, 119, 121], "minimum_pass": [1, 97, 111, 112, 114, 119, 121], "minimum_converged_pass": [1, 97, 111, 112, 114], "frequency_unit": [1, 97, 111, 112, 114], "mesh_siz": [1, 97, 111, 112, 114, 119, 121, 122], "simulation_flag": [1, 97, 111, 112, 114], "ansys_project_templ": [1, 97, 111, 112, 114], "get_solution_data": [1, 97, 111, 112, 114, 119, 121], "ansyshfssterminalsolut": [1, 97, 111, 112, 114], "basis_ord": [1, 97, 111, 112, 114], "use_iterative_solv": [1, 97, 111, 112, 114], "iterative_residu": [1, 97, 111, 112, 114], "integrate_energi": [1, 97, 111, 112, 114, 119, 121, 222], "integrate_magnetic_flux": [1, 97, 111, 112, 114], "ansyshfsssolut": [1, 97, 111, 112, 114, 222], "frequenc": [1, 97, 111, 112, 114, 119, 121, 221, 222], "max_delta_": [1, 97, 111, 112, 114, 119, 121], "sweep_en": [1, 97, 111, 112, 114], "sweep_start": [1, 97, 111, 112, 114], "sweep_end": [1, 97, 111, 112, 114], "sweep_count": [1, 97, 111, 112, 114], "sweep_typ": [1, 97, 111, 112, 114, 119, 121], "capacitance_export": [1, 97, 111, 112, 114, 222], "ansysq3dsolut": [1, 97, 111, 112, 114, 222], "percent_error": [1, 97, 111, 112, 114, 119, 121], "ansyseigenmodesolut": [1, 97, 111, 112, 114, 222], "min_frequ": [1, 97, 111, 112, 114], "max_delta_f": [1, 97, 111, 112, 114], "n_mode": [1, 97, 111, 112, 114], "ansyscurrentsolut": [1, 97, 111, 112, 114], "ansysvoltagesolut": [1, 97, 111, 112, 114], "ansyscrosssectionsolut": [1, 97, 111, 112, 114, 222], "get_ansys_solut": [1, 97, 111, 112, 114], "cross_sect": [1, 97, 111], "cross_section_export": [1, 97, 111, 115], "create_cross_sections_from_simul": [1, 97, 111, 115, 116, 222], "visualise_cross_section_cut_on_original_layout": [1, 97, 111, 115, 116], "cut_simul": [1, 97, 111, 115, 116], "cutsimul": [1, 97, 111, 115, 116, 117, 118, 222], "process_geometri": [1, 97, 111, 115, 117], "limited_region": [1, 97, 111, 115, 117], "insert_cross_section_lay": [1, 97, 111, 115, 117], "insert_sheet_met": [1, 97, 111, 115, 117], "get_partition_region": [1, 97, 105, 111, 115, 117, 133, 136], "apply_partition_region": [1, 97, 111, 115, 117], "regroup_lay": [1, 97, 111, 115, 117], "insert_tls_lay": [1, 97, 111, 115, 117], "get_metals_vacuums_substr": [1, 97, 111, 115, 117], "sum_region": [1, 97, 111, 115, 117], "subtract_region": [1, 97, 111, 115, 117], "get_material_dict": [1, 97, 99, 111, 115, 117, 136], "get_paramet": [1, 97, 99, 111, 115, 117, 128, 136], "epr_correction_export": [1, 97, 111, 115], "get_epr_correction_elmer_solut": [1, 97, 111, 115, 118], "get_epr_correction_simul": [1, 97, 105, 111, 115, 118, 222], "elmer": [1, 97, 111, 128, 186, 216, 220, 222, 223, 225], "elmer_export": [1, 97, 111, 119, 224], "export_elmer_json": [1, 97, 111, 119, 120], "export_elmer_script": [1, 97, 111, 119, 120], "export_elm": [1, 97, 111, 119, 120, 221, 222, 224, 225], "elmer_solut": [1, 97, 111, 119], "elmersolut": [1, 97, 111, 119, 120, 121, 122], "tool": [1, 55, 65, 97, 111, 119, 121, 175, 190, 191, 192, 193, 195, 196, 197, 207, 208, 216, 222, 223, 224, 227], "max_error_scal": [1, 97, 111, 119, 121], "max_outlier_fract": [1, 97, 111, 119, 121], "is_axisymmetr": [1, 97, 111, 119, 121], "mesh_level": [1, 97, 111, 119, 121], "mesh_optim": [1, 97, 111, 119, 121], "vtu_output": [1, 97, 111, 119, 121], "save_elmer_data": [1, 97, 111, 119, 121], "elmervectorhelmholtzsolut": [1, 97, 111, 119, 121, 222], "frequency_batch": [1, 97, 111, 119, 121], "london_penetration_depth": [1, 97, 99, 111, 119, 121, 136], "quadratic_approxim": [1, 97, 111, 119, 121], "second_kind_basi": [1, 97, 111, 119, 121], "use_av": [1, 97, 111, 119, 121], "conduct": [1, 97, 99, 111, 119, 121, 136], "nested_iter": [1, 97, 111, 119, 121], "convergence_toler": [1, 97, 111, 119, 121], "max_iter": [1, 97, 111, 119, 121], "elmercapacitancesolut": [1, 97, 111, 119, 121, 222], "p_element_ord": [1, 97, 111, 119, 121], "linear_system_method": [1, 97, 111, 119, 121], "linear_system_precondit": [1, 97, 111, 119, 121], "electric_infinity_bc": [1, 97, 111, 119, 121], "elmercrosssectionsolut": [1, 97, 111, 118, 119, 121, 122, 222], "boundary_condit": [1, 97, 111, 119, 121], "run_inductance_sim": [1, 97, 111, 119, 121], "voltage_excit": [1, 97, 111, 119, 121], "elmerepr3dsolut": [1, 97, 111, 119, 121, 136, 222], "get_elmer_solut": [1, 97, 111, 119, 121], "mesh_size_help": [1, 97, 111, 119], "refine_metal_edg": [1, 97, 111, 119, 122], "sonnet": [1, 97, 111, 225], "parser": [1, 97, 111, 129, 163], "apply_templ": [1, 97, 111, 129, 130], "polygon_head": [1, 97, 111, 129, 130], "symmetri": [1, 97, 111, 129, 130, 181], "box": [1, 5, 18, 19, 35, 52, 55, 78, 85, 86, 94, 97, 99, 110, 111, 116, 117, 121, 129, 130, 133, 136, 137, 144, 146, 164, 168, 175, 179, 193, 195, 196, 197, 203, 204, 207, 218, 225, 226], "refplan": [1, 97, 111, 129, 130], "port": [1, 5, 13, 17, 31, 34, 36, 37, 38, 39, 43, 48, 49, 56, 57, 58, 64, 67, 90, 91, 92, 94, 95, 97, 98, 100, 111, 121, 127, 129, 130, 131, 136, 137, 138, 139, 140, 141, 146, 175, 179, 194, 214, 222, 224, 225], "control": [1, 17, 93, 97, 111, 129, 130, 131, 155, 162, 163, 177, 187, 188, 189, 190, 209, 210, 214, 219, 221], "polygon": [1, 59, 65, 66, 97, 111, 129, 130, 131, 132, 134, 136, 162, 181, 197, 203, 223, 226], "via": [1, 5, 25, 97, 111, 129, 130, 151, 172, 205, 219, 221, 223], "sonnet_export": [1, 97, 111, 129, 224], "poly_and_edge_indic": [1, 97, 111, 129, 131], "export_sonnet_son": [1, 97, 111, 129, 131, 224], "export_sonnet": [1, 97, 111, 129, 131, 224, 225], "export_and_run": [1, 97, 111, 220], "run_export_script": [1, 97, 111, 123], "run_simul": [1, 97, 111, 123], "export_singular": [1, 97, 111], "remote_export_and_run": [1, 97, 111], "remote_run_onli": [1, 97, 111, 125], "simulation_export": [1, 97, 111, 223, 224], "get_combined_paramet": [1, 97, 111, 126], "copy_content_into_directori": [1, 97, 111, 126], "get_post_process_command_lin": [1, 97, 111, 126], "export_simulation_json": [1, 97, 111, 126], "export_simulation_oa": [1, 97, 111, 126, 224], "sweep_simul": [1, 97, 111, 126, 223], "cross_sweep_simul": [1, 97, 111, 126, 223], "sweep_solut": [1, 97, 111, 126], "cross_sweep_solut": [1, 97, 111, 126], "cross_combin": [1, 97, 111, 126], "simulation_valid": [1, 97, 111], "validate_simul": [1, 97, 111, 127], "simulation_and_solution_types_match": [1, 97, 111, 127], "has_no_ports_when_requir": [1, 97, 111, 127], "has_edgeport_when_forbidden": [1, 97, 111, 127], "london_penetration_depth_with_ansi": [1, 97, 111, 127], "flux_integration_layer_exists_if_need": [1, 97, 111, 127], "check_partition_region_nam": [1, 97, 111, 127], "check_tls_sheet_gener": [1, 97, 111, 127], "check_tls_sheets_by_solut": [1, 97, 111, 127], "recursive_al": [1, 97, 111, 127], "get_port_nam": [1, 97, 111, 127], "validatesimerror": [1, 97, 111, 127], "solut": [1, 97, 111, 113, 114, 118, 120, 121, 126, 127, 189, 207, 222], "find_edge_from_point_in_polygon": [1, 97, 111, 132], "get_enclosing_polygon": [1, 97, 111, 132], "airbridges_sim": [1, 97], "airbridgessim": [1, 97, 98], "cross_section_simul": [1, 97], "crosssectionsimul": [1, 97, 99, 113, 117, 120, 222, 223, 225], "is_met": [1, 97, 99, 136], "check_material_dict": [1, 97, 99, 136], "process_lay": [1, 97, 99], "insert_lay": [1, 97, 99, 136], "restrict_layer_region": [1, 97, 99], "get_unfilled_region": [1, 97, 99], "get_simulation_data": [1, 97, 99, 136], "empty_simul": [1, 97], "emptysimul": [1, 97, 100], "get_list_of_two": [1, 97, 133], "partitionregion": [1, 97, 102, 103, 104, 105, 107, 108, 109, 110, 121, 133, 136, 137], "limit_box": [1, 97, 133], "limit_fac": [1, 97, 133], "as_dict": [1, 97, 134], "internalport": [1, 97, 134, 136, 179, 223], "get_etch_polygon": [1, 97, 134], "edgeport": [1, 97, 127, 134, 179, 222, 223], "post_process": [1, 97, 113, 118, 120, 126, 224], "postprocess": [1, 97, 113, 118, 120, 126, 135], "get_command_lin": [1, 97, 135], "get_simulation_layer_by_nam": [1, 97, 136], "to_1d_list": [1, 97, 136], "from_cel": [1, 97, 98, 100, 136, 138, 139, 140, 141, 223, 224], "face_stack_list_of_list": [1, 97, 136], "ith_valu": [1, 97, 136], "face_z_level": [1, 97, 136], "region_from_lay": [1, 97, 136], "simplified_region": [1, 97, 136], "insert_stacked_up_lay": [1, 97, 136], "insert_layers_between_fac": [1, 97, 136], "split_metal_layers_by_excit": [1, 97, 136], "create_simulation_lay": [1, 97, 98, 100, 136, 138, 139, 140, 141], "produce_lay": [1, 97, 136], "warn_of_small_shap": [1, 97, 136], "ground_grid_region": [1, 97, 136], "produce_waveguide_to_port": [1, 97, 136, 223], "etched_lin": [1, 97, 136], "get_port_data": [1, 97, 136], "delete_inst": [1, 97, 136], "visualise_region": [1, 97, 136], "single_element_simul": [1, 97, 223, 224], "get_single_element_sim_class": [1, 97, 105, 137, 179, 223, 224], "single_xmons_full_chip_sim": [1, 97], "singlexmonsfullchipsim": [1, 97, 138], "waveguides_sim": [1, 97], "waveguidessim": [1, 97, 139], "produce_guid": [1, 97, 139], "produce_ground_bump": [1, 97, 139], "xmons_direct_coupling_full_chip_sim": [1, 97], "xmonsdirectcouplingfullchipsim": [1, 97, 140], "produce_launchers_sma8": [1, 97, 140], "xmons_direct_coupling_sim": [1, 97], "xmonsdirectcouplingsim": [1, 97, 141], "test_structur": [1, 208], "junction_test_pad": [1, 142], "junctiontestpad": [1, 94, 142, 145, 146, 147], "junction_test_pads_simpl": [1, 142, 145], "junctiontestpadssimpl": [1, 142, 145, 147], "airbridge_dc": [1, 142], "airbridgedc": [1, 142, 143], "cross_test": [1, 142], "crosstest": [1, 142, 144], "stripes_test": [1, 142], "stripestest": [1, 15, 16, 142, 148], "stripes_test_increasing_width": [1, 142], "stripestestincreasingwidth": [1, 142, 149], "teststructur": [1, 142, 143, 144, 146, 148, 149, 150, 151, 184], "produce_pad": [1, 142, 150], "produce_four_point_pad": [1, 142, 150], "produce_etched_region": [1, 142, 150], "tsv_test_pattern": [1, 142], "tsvtestpattern": [1, 142, 151], "area": [1, 13, 43, 52, 55, 59, 64, 72, 76, 77, 78, 85, 92, 94, 131, 133, 134, 136, 146, 147, 150, 152, 164, 192, 195, 196, 202, 223], "areareceiv": [1, 152, 153], "put": [1, 64, 152, 153, 186, 195, 205], "get_area_and_dens": [1, 152, 153], "count_inst": [1, 152], "count_instances_in_cel": [1, 152, 154], "coupler_lib": [1, 152], "cap_param": [1, 19, 152, 155], "deep_delet": [1, 152], "deep_delete_pcel": [1, 152, 156], "deep_delete_al": [1, 152, 156], "defaults_help": [1, 152], "find_ansys_execut": [1, 152, 157], "depend": [1, 19, 99, 134, 136, 147, 152, 171, 179, 184, 186, 188, 211, 215, 220, 221, 223], "install_kqc_gui_depend": [1, 152, 158], "edit_node_plugin": [1, 152], "editnodeplugin": [1, 152, 159], "create_dialog": [1, 152, 159], "update_node_from_form": [1, 152, 159], "update_form_from_nod": [1, 152, 159], "deselect": [1, 152, 159], "select": [1, 13, 72, 131, 152, 159, 170, 172, 192, 193, 195, 196, 197, 203, 206, 207, 217, 218, 223], "activ": [1, 78, 134, 152, 159, 161, 190, 210, 221, 222], "deactiv": [1, 152, 159], "mouse_click_ev": [1, 152, 159], "mouse_moved_ev": [1, 152, 159], "has_tracking_posit": [1, 152, 159], "tracking_posit": [1, 152, 159], "updat": [1, 37, 85, 136, 152, 159, 184, 188, 197, 210, 215, 217], "editnodepluginfactori": [1, 152, 159], "create_plugin": [1, 152, 159], "error_on_cel": [1, 152], "find_cells_with_error": [1, 152, 160], "formatted_errors_on_cel": [1, 152, 160], "export_help": [1, 152, 223, 224], "generate_probepoints_json": [1, 152, 161], "generate_probepoints_from_fil": [1, 152, 161], "create_or_empty_tmp_directori": [1, 123, 152, 161, 224], "get_simulation_directori": [1, 152, 161], "get_active_or_new_layout": [1, 152, 161, 223, 224], "write_commit_reference_fil": [1, 152, 161], "write_export_machine_versions_fil": [1, 152, 161], "open_with_klayout_or_default_appl": [1, 152, 161, 224], "get_klayout_vers": [1, 152, 161], "export_drc_report": [1, 152, 161], "geometry_help": [1, 152], "vector_length_and_direct": [1, 152, 162], "point_shift_along_vector": [1, 152, 162], "get_direct": [1, 152, 162], "get_angl": [1, 152, 162], "get_cell_path_length": [1, 152, 162], "get_object_path_length": [1, 152, 162], "simple_region": [1, 152, 162], "region_with_merged_point": [1, 136, 152, 162], "region_with_merged_polygon": [1, 136, 152, 162], "merge_points_and_match_on_edg": [1, 99, 152, 162], "is_clockwis": [1, 152, 162], "circle_polygon": [1, 152, 162], "arc_point": [1, 152, 162], "bspline_point": [1, 152, 162], "bezier_point": [1, 152, 162], "force_rounded_corn": [1, 152, 162], "geometry_json_encod": [1, 152], "geometryjsonencod": [1, 152, 163], "default": [1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 113, 116, 117, 118, 120, 121, 122, 131, 136, 138, 139, 140, 141, 143, 144, 146, 147, 148, 149, 151, 152, 155, 157, 161, 162, 163, 165, 168, 172, 173, 174, 175, 176, 177, 179, 184, 186, 189, 192, 195, 200, 202, 203, 205, 206, 208, 210, 211, 214, 218, 219, 222, 223, 224, 227], "geometryjsondecod": [1, 152, 163], "encode_python_obj_as_dict": [1, 152, 163], "decode_dict_as_python_obj": [1, 152, 163], "groundgrid": [1, 152], "make_grid": [1, 152, 164], "gui_help": [1, 152], "get_nodes_near_posit": [1, 152, 165], "node_to_text": [1, 152, 165], "node_from_text": [1, 152, 165], "replace_nod": [1, 152, 165], "get_all_node_el": [1, 152, 165], "get_valid_node_el": [1, 152, 165], "import_help": [1, 152], "module_from_fil": [1, 152, 166], "instance_hierarchy_help": [1, 152], "instancehierarchi": [1, 152, 167], "instanc": [1, 37, 52, 64, 68, 78, 86, 87, 114, 117, 121, 136, 137, 152, 154, 155, 159, 165, 167, 170, 172, 174, 175, 176, 180, 184, 189, 190, 192, 193, 194, 196, 203, 205, 206, 217, 223, 224, 225, 226], "tran": [1, 5, 9, 10, 37, 66, 68, 78, 85, 136, 150, 152, 167, 179, 180, 223], "parent_inst": [1, 152, 167], "get_cell_instance_hierarchi": [1, 152, 167], "formatted_cell_instance_hierarchi": [1, 152, 167], "label": [1, 5, 35, 37, 67, 78, 85, 136, 152, 169, 176, 183, 206, 218], "labelorigin": [1, 152, 168], "bottomleft": [1, 152, 168], "bottomright": [1, 152, 168], "topleft": [1, 152, 168], "topright": [1, 152, 168], "produce_label": [1, 152, 168], "label_polygon": [1, 152], "get_text_polygon": [1, 152, 169], "load_font_polygon": [1, 152, 169], "layout_to_cod": [1, 152], "convert_cells_to_cod": [1, 152, 170], "get_node_param": [1, 152, 170], "extract_pcell_data_from_view": [1, 152, 170], "restore_pcells_to_view": [1, 152, 170], "library_help": [1, 152, 184, 191, 215], "load_librari": [1, 152, 171], "get_library_path": [1, 152, 171], "delete_all_librari": [1, 152, 171], "delete_librari": [1, 152, 171], "element_by_class_nam": [1, 152, 171], "to_module_nam": [1, 152, 171], "to_library_nam": [1, 152, 171], "load_save_layout": [1, 152], "load_layout": [1, 78, 152, 172], "save_layout": [1, 78, 152, 172], "log_rout": [1, 152], "route_log": [1, 152, 173], "merg": [1, 5, 64, 117, 136, 152, 162, 183, 184, 202], "merge_lay": [1, 152, 174], "convert_child_instances_to_stat": [1, 152, 174], "netlist_extract": [1, 152, 206], "export_cell_netlist": [1, 86, 152, 175], "extract_net": [1, 152, 175], "extract_circuit": [1, 152, 175], "netlist_graph": [1, 152], "network_as_graph": [1, 152, 176], "draw_graph": [1, 152, 176], "paramet": [1, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 105, 110, 113, 114, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 187, 188, 192, 197, 200, 202, 203, 206, 208, 214, 217, 218, 221, 223, 224, 225, 227], "add_parameters_from": [1, 152, 177, 184, 223], "add_paramet": [1, 152, 177, 184, 223], "pdt": [1, 152, 177, 203, 205], "typedoubl": [1, 152, 177, 203, 205], "typeint": [1, 152, 177], "typelist": [1, 152, 177], "typestr": [1, 152, 177], "typeshap": [1, 152, 177], "typeboolean": [1, 152, 177], "typelay": [1, 152, 177], "typenon": [1, 152, 177], "param": [1, 37, 64, 99, 127, 136, 152, 177, 180, 184, 203, 205], "get_al": [1, 152, 177], "plugin_startup": [1, 152], "register_plugin": [1, 152, 178], "refpoint": [1, 19, 23, 28, 33, 34, 36, 37, 48, 56, 57, 58, 62, 64, 78, 81, 90, 91, 92, 93, 94, 95, 105, 110, 136, 137, 146, 150, 152, 161, 165, 170, 194, 201, 202, 205, 223], "layer": [1, 5, 13, 25, 27, 28, 29, 32, 33, 35, 36, 37, 38, 52, 54, 57, 58, 59, 62, 64, 65, 66, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 90, 92, 94, 95, 99, 105, 114, 116, 117, 118, 121, 127, 133, 136, 144, 146, 148, 149, 150, 151, 152, 153, 162, 168, 172, 174, 175, 179, 180, 192, 195, 196, 200, 201, 203, 204, 206, 208, 215, 217, 222, 223], "cell": [1, 5, 15, 16, 31, 34, 36, 37, 41, 45, 48, 52, 55, 56, 57, 58, 61, 64, 65, 71, 76, 78, 84, 85, 86, 90, 91, 92, 94, 95, 97, 98, 99, 100, 116, 117, 136, 137, 138, 139, 140, 141, 146, 152, 153, 154, 155, 156, 160, 161, 162, 165, 167, 168, 170, 171, 172, 174, 175, 179, 180, 184, 190, 192, 193, 195, 197, 198, 200, 203, 206, 217, 218, 223, 224, 226], "rec_level": [1, 37, 78, 136, 152, 179, 206], "dict": [1, 5, 64, 85, 94, 102, 104, 105, 107, 108, 109, 114, 117, 118, 120, 121, 137, 146, 152, 161, 163, 169, 171, 179, 180, 223], "item": [1, 118, 136, 152, 163, 176, 179, 204], "kei": [1, 5, 23, 37, 81, 85, 86, 87, 99, 114, 117, 118, 121, 126, 136, 140, 152, 155, 161, 163, 170, 171, 174, 175, 179, 180, 186, 197, 219, 221], "valu": [1, 5, 13, 23, 27, 29, 34, 36, 37, 38, 43, 48, 56, 57, 58, 59, 64, 69, 78, 81, 84, 85, 86, 90, 91, 92, 95, 99, 114, 116, 117, 118, 121, 122, 131, 134, 136, 140, 146, 152, 161, 163, 165, 168, 170, 171, 174, 175, 177, 179, 180, 184, 186, 193, 196, 197, 203, 205, 208, 214, 215, 217, 222, 223], "refpointtosimport": [1, 34, 36, 37, 48, 56, 57, 58, 90, 91, 92, 95, 152, 179, 223], "refpointtointernalport": [1, 152, 179], "refpointtoedgeport": [1, 152, 179], "waveguidetosimport": [1, 152, 179, 223], "toward": [1, 58, 64, 136, 152, 179, 223], "side": [1, 3, 5, 6, 18, 19, 29, 34, 36, 37, 43, 48, 56, 57, 58, 62, 63, 67, 85, 90, 91, 92, 95, 116, 117, 134, 136, 137, 150, 152, 170, 179, 181, 184, 200, 218, 222, 223], "use_internal_port": [1, 56, 136, 152, 179, 223], "waveguide_length": [1, 136, 141, 152, 179, 223], "term1": [1, 59, 64, 65, 136, 140, 152, 179], "turn_radiu": [1, 136, 140, 152, 179], "b": [1, 13, 19, 25, 29, 31, 32, 36, 37, 38, 39, 43, 49, 57, 58, 59, 64, 67, 69, 81, 92, 93, 136, 140, 146, 151, 152, 162, 179], "over_etch": [1, 136, 152, 179], "deembed_cross_sect": [1, 134, 136, 137, 152, 179], "junctionsimport": [1, 152, 179, 223], "other_refpoint": [1, 152, 179], "float": [1, 5, 17, 64, 85, 110, 114, 116, 118, 121, 122, 130, 132, 133, 134, 136, 152, 153, 162, 163, 165, 179, 193, 222, 223], "replace_junct": [1, 152], "junctionentri": [1, 152, 180], "extract_junct": [1, 152, 180], "check_static_cell_has_junct": [1, 152, 180], "place_junct": [1, 152, 180], "get_tuned_junction_json": [1, 152, 180], "copy_one_layer_of_cel": [1, 152, 180], "replace_squid": [1, 152, 180], "convert_cells_to_stat": [1, 152, 180], "symmetric_polygon": [1, 152, 203], "polygon_with_hsym": [1, 152, 181], "polygon_with_vsym": [1, 152, 181, 203], "polygon_with_sym": [1, 152, 181], "klayout_view": [1, 190, 208, 217], "klayoutview": [1, 78, 86, 190], "layout_view": [1, 78, 217], "focu": [1, 78, 217], "show": [1, 13, 25, 29, 32, 35, 37, 38, 59, 64, 78, 92, 136, 146, 148, 149, 151, 167, 176, 190, 192, 195, 196, 197, 201, 202, 203, 204, 206, 217, 218, 223, 224], "close": [1, 52, 65, 78, 113, 162, 170, 195, 207, 218], "cell_view": [1, 78, 217], "active_cel": [1, 78, 217], "clear_lay": [1, 78], "add_default_lay": [1, 78], "create_top_cel": [1, 78], "export_layers_bitmap": [1, 78], "export_all_layers_bitmap": [1, 78], "export_pcell_png": [1, 78, 217], "get_pixel": [1, 78], "get_active_cell_view": [1, 78], "get_active_layout": [1, 78], "get_active_cel": [1, 78], "missinguilibraryexcept": [1, 78], "resolve_default_layer_info": [1, 78], "layer_clust": [1, 208], "layerclust": [1, 79], "main_lay": [1, 79], "extra_lay": [1, 79], "all_lay": [1, 79], "pya_resolv": [1, 184, 203, 208, 223], "is_standalone_sess": [1, 88], "klayout_executable_command": [1, 88], "run": [1, 64, 78, 81, 88, 113, 114, 120, 121, 123, 125, 135, 158, 161, 186, 187, 189, 190, 191, 207, 208, 211, 215, 216, 218, 219, 221, 224, 225, 226, 227], "argument_pars": [1, 96], "run_kqc": [1, 96], "pcell": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 86, 89, 90, 91, 92, 93, 94, 95, 98, 99, 117, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 165, 168, 169, 170, 171, 174, 175, 176, 177, 180, 187, 188, 192, 193, 194, 196, 197, 205, 215, 217, 223, 226], "declar": [2, 3, 5, 6, 7, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 32, 33, 35, 36, 37, 38, 39, 42, 43, 49, 50, 53, 54, 55, 57, 58, 59, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 89, 90, 91, 95, 142, 143, 144, 148, 149, 150, 151], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 105, 114, 116, 117, 121, 127, 128, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 159, 163, 165, 167, 168, 170, 171, 177, 179, 180, 184, 185, 187, 201, 203, 204, 206, 215, 217, 222, 224, 225], "consist": [2, 15, 16, 25, 35, 64, 65, 66, 81, 83, 86, 90, 91, 92, 93, 99, 105, 121, 147, 161, 163, 185, 192, 208, 221, 225], "thei": [2, 3, 6, 28, 64, 70, 81, 85, 87, 90, 91, 99, 105, 132, 136, 162, 167, 174, 176, 180, 184, 186, 192, 200, 206, 217, 222], "ar": [2, 3, 5, 6, 13, 20, 23, 25, 28, 29, 30, 32, 33, 37, 38, 43, 49, 59, 64, 65, 66, 67, 70, 78, 81, 83, 85, 86, 87, 92, 94, 99, 105, 110, 111, 114, 116, 117, 118, 121, 123, 125, 127, 131, 133, 136, 140, 142, 146, 150, 151, 152, 154, 161, 162, 163, 165, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], "themselv": 2, "A": [2, 5, 9, 23, 26, 37, 52, 59, 64, 65, 66, 67, 78, 85, 86, 87, 90, 91, 92, 93, 110, 114, 116, 121, 126, 127, 128, 131, 136, 140, 141, 161, 162, 171, 176, 177, 179, 186, 190, 195, 196, 197, 200, 205, 214, 217, 218, 223, 226], "frame": [2, 5, 35, 49, 85, 195], "i": [2, 3, 5, 6, 7, 10, 16, 19, 23, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 41, 43, 48, 49, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 71, 76, 78, 81, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 98, 99, 100, 105, 110, 113, 114, 116, 117, 118, 120, 121, 122, 123, 126, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 147, 148, 149, 150, 155, 158, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], "alwai": [2, 121, 175, 190, 200, 205, 207, 222], "method": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 90, 91, 92, 95, 98, 99, 100, 110, 114, 117, 121, 136, 138, 139, 140, 141, 143, 144, 147, 148, 149, 151, 160, 162, 163, 170, 184, 185, 190, 191, 203, 204, 205, 217, 222, 223, 224], "place": [2, 5, 13, 18, 25, 28, 29, 32, 34, 36, 37, 38, 48, 52, 55, 56, 57, 58, 59, 64, 65, 66, 78, 81, 85, 90, 91, 92, 95, 136, 137, 146, 151, 163, 170, 173, 179, 180, 184, 187, 191, 192, 196, 198, 202, 203, 204, 205, 206, 207, 217, 218, 223, 224], "some": [2, 5, 13, 25, 28, 29, 32, 37, 38, 59, 64, 79, 86, 87, 92, 110, 113, 120, 127, 131, 136, 146, 151, 161, 162, 177, 180, 184, 187, 189, 190, 191, 193, 195, 196, 197, 198, 202, 203, 205, 206, 207, 211, 214, 217, 218, 219, 222, 223, 226], "test": [2, 3, 4, 5, 9, 11, 13, 15, 16, 23, 25, 34, 70, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 163, 180, 186, 188, 189, 190, 192, 208, 210, 215, 218, 221, 224], "structur": [2, 5, 28, 70, 134, 142, 143, 146, 147, 150, 151, 167, 176, 180, 190, 191, 192, 201, 204, 208, 216, 218, 222, 225, 226], "after": [2, 13, 28, 64, 65, 72, 73, 81, 85, 92, 99, 113, 116, 120, 121, 126, 136, 137, 146, 177, 186, 189, 192, 203, 204, 206, 207, 214, 215, 217, 218, 221, 224], "ad": [2, 19, 37, 64, 78, 85, 126, 134, 135, 136, 140, 161, 162, 168, 170, 175, 176, 177, 184, 186, 190, 203, 206, 223], "ground": [2, 5, 11, 17, 18, 35, 36, 37, 38, 39, 43, 48, 52, 55, 56, 57, 58, 64, 65, 66, 68, 85, 86, 87, 90, 91, 92, 131, 134, 136, 139, 155, 164, 168, 195, 202, 222, 223], "grid": [2, 5, 18, 35, 37, 55, 56, 64, 65, 66, 68, 85, 86, 87, 136, 150, 164, 168, 170, 195, 202], "which": [2, 5, 6, 7, 10, 16, 19, 23, 28, 34, 36, 37, 48, 56, 57, 58, 64, 65, 66, 78, 79, 81, 83, 85, 86, 87, 89, 90, 91, 92, 95, 97, 98, 99, 100, 110, 116, 117, 121, 122, 125, 126, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 147, 148, 149, 150, 151, 152, 154, 155, 161, 162, 163, 164, 165, 168, 171, 172, 174, 179, 180, 184, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 200, 203, 206, 211, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 227], "avoid": [2, 5, 13, 19, 25, 29, 32, 35, 37, 38, 59, 64, 65, 66, 92, 99, 136, 146, 150, 151, 164, 168, 173, 174, 193, 195, 202, 208, 218, 222], "can": [2, 5, 19, 23, 28, 36, 37, 38, 52, 55, 59, 64, 65, 70, 71, 76, 78, 81, 83, 84, 86, 87, 89, 90, 91, 98, 99, 100, 105, 110, 116, 117, 118, 121, 122, 126, 127, 131, 133, 134, 136, 137, 138, 139, 140, 141, 147, 161, 162, 163, 165, 170, 172, 176, 179, 180, 182, 184, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 203, 204, 205, 206, 207, 210, 211, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "produc": [2, 5, 9, 13, 19, 23, 31, 35, 45, 52, 59, 64, 65, 66, 67, 71, 76, 85, 94, 114, 116, 118, 134, 136, 138, 140, 146, 147, 150, 155, 162, 165, 168, 191, 203, 218, 221, 222, 223, 224, 226], "document": [2, 83, 84, 86, 97, 142, 184, 185, 188, 190, 191, 197, 198, 199, 201, 204, 210, 215, 217, 218, 226], "gener": [2, 5, 13, 30, 37, 55, 62, 65, 70, 71, 76, 78, 83, 85, 86, 87, 89, 92, 94, 108, 117, 123, 127, 136, 142, 146, 160, 162, 164, 165, 169, 170, 175, 177, 180, 186, 187, 190, 192, 193, 194, 201, 202, 204, 205, 208, 216, 217, 218, 221, 222, 224, 225], "descript": [2, 142, 177, 184, 203, 205, 226], "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 188, 190, 191, 209, 213, 215, 222, 223], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 110, 114, 117, 121, 122, 123, 127, 128, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 153, 159, 162, 163, 167, 168, 177, 179, 180, 184, 200, 201, 202, 203, 205, 215, 218, 221, 222, 223], "an": [3, 5, 26, 28, 29, 31, 32, 36, 37, 38, 42, 43, 64, 65, 66, 68, 78, 81, 85, 86, 87, 94, 110, 114, 116, 120, 121, 126, 127, 136, 137, 143, 147, 155, 161, 162, 163, 165, 170, 175, 176, 177, 179, 180, 181, 184, 186, 189, 190, 192, 193, 194, 197, 200, 204, 206, 207, 210, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227], "On": [3, 6, 189, 211, 219, 220], "left": [3, 5, 6, 13, 19, 23, 35, 37, 38, 43, 48, 59, 66, 84, 85, 93, 116, 132, 134, 136, 179, 196, 203, 207, 218, 223], "straight": [3, 6, 26, 45, 47, 59, 64, 65, 68, 94, 136, 141, 215], "vertic": [3, 6, 13, 24, 25, 32, 33, 35, 47, 59, 77, 85, 133, 136, 146, 151, 180, 181, 222], "waveguid": [3, 6, 17, 19, 20, 29, 37, 38, 43, 48, 49, 55, 58, 59, 64, 65, 66, 67, 68, 69, 90, 91, 92, 95, 99, 134, 136, 139, 141, 162, 165, 170, 175, 176, 179, 192, 194, 195, 198, 206, 222, 223], "cross": [3, 6, 13, 23, 25, 29, 32, 37, 38, 59, 64, 67, 92, 99, 114, 116, 117, 121, 126, 134, 136, 137, 144, 146, 151, 179, 195, 197, 203, 223, 225], "multipl": [3, 6, 64, 81, 86, 87, 90, 91, 105, 110, 116, 121, 161, 167, 174, 176, 180, 184, 189, 192, 200, 207, 208, 217, 218, 221, 222, 223, 226], "time": [3, 6, 113, 116, 120, 121, 126, 131, 179, 187, 196, 204, 208, 210, 217, 218, 219, 221, 223], "There": [3, 6, 23, 93, 147, 148, 149, 184, 187, 190, 192, 193, 205, 206, 209, 210, 211, 218, 219, 221, 223], "right": [3, 6, 19, 23, 29, 35, 38, 59, 69, 84, 85, 116, 134, 136, 179, 192, 196, 202, 204, 206, 217, 218, 223], "likewis": [3, 6], "do": [3, 6, 37, 64, 81, 121, 122, 127, 136, 170, 185, 186, 189, 190, 191, 196, 206, 214, 217, 218, 220, 221, 222, 223, 224], "ani": [3, 6, 19, 64, 65, 71, 76, 78, 86, 87, 98, 99, 100, 102, 105, 109, 110, 117, 118, 121, 127, 136, 137, 138, 139, 140, 141, 147, 165, 171, 178, 183, 184, 189, 190, 195, 197, 200, 202, 203, 204, 205, 207, 212, 218, 221, 222, 223, 224, 225], "point": [3, 4, 5, 6, 13, 25, 29, 32, 33, 36, 37, 38, 39, 43, 55, 58, 59, 64, 65, 66, 78, 85, 90, 91, 92, 93, 96, 116, 117, 132, 136, 140, 141, 143, 146, 151, 161, 162, 170, 174, 176, 179, 181, 187, 191, 193, 194, 196, 206, 214, 217, 221, 222, 223, 226], "In": [3, 43, 64, 78, 81, 86, 98, 100, 116, 126, 136, 138, 139, 140, 141, 162, 184, 186, 189, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 206, 207, 215, 217, 218, 222, 223, 224], "center": [3, 5, 13, 17, 18, 19, 23, 25, 29, 32, 33, 36, 37, 38, 41, 43, 48, 58, 59, 62, 63, 64, 65, 66, 67, 74, 75, 85, 90, 91, 92, 93, 94, 95, 134, 136, 146, 150, 151, 162, 175, 179, 196, 218, 223], "arrai": [3, 5, 25, 85, 86, 147, 163, 226], "mechan": 3, "differ": [3, 5, 6, 13, 15, 16, 28, 36, 37, 43, 52, 59, 85, 86, 87, 114, 116, 136, 146, 161, 175, 180, 184, 189, 190, 191, 192, 197, 200, 203, 205, 208, 209, 214, 215, 218, 221, 222, 223, 224], "length": [3, 5, 6, 9, 10, 12, 13, 15, 16, 17, 18, 19, 23, 24, 26, 29, 31, 32, 34, 35, 36, 38, 39, 48, 49, 55, 56, 57, 59, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 85, 92, 94, 95, 114, 116, 121, 122, 130, 134, 136, 139, 140, 141, 144, 146, 148, 149, 155, 162, 164, 165, 170, 174, 179, 195, 196, 197, 203, 205, 222, 223], "width": [3, 4, 5, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 34, 35, 36, 37, 38, 39, 43, 45, 47, 48, 49, 50, 56, 57, 58, 59, 62, 64, 65, 67, 68, 71, 72, 73, 75, 77, 78, 85, 90, 91, 92, 94, 95, 116, 134, 136, 140, 141, 143, 144, 146, 148, 149, 150, 151, 179, 203, 223], "child": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 86, 90, 91, 92, 95, 110, 143, 144, 147, 148, 149, 151, 154, 165, 170, 174, 179, 200, 205, 223], "re": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 90, 91, 92, 95, 130, 134, 143, 144, 147, 148, 149, 151, 170, 177, 184, 200, 217, 221], "defin": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 81, 90, 91, 92, 93, 94, 95, 99, 105, 110, 113, 117, 136, 137, 143, 144, 147, 148, 149, 150, 151, 161, 163, 167, 173, 175, 177, 180, 184, 191, 192, 195, 196, 200, 201, 205, 206, 207, 208, 214, 215, 218, 219, 221, 222, 223], "thi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 84, 85, 86, 87, 88, 90, 91, 92, 95, 97, 98, 99, 100, 105, 110, 113, 116, 117, 120, 121, 122, 133, 134, 136, 138, 139, 140, 141, 143, 144, 146, 147, 148, 149, 151, 153, 158, 159, 162, 163, 165, 170, 171, 172, 174, 175, 176, 177, 179, 180, 184, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224], "int": [3, 4, 5, 6, 12, 13, 18, 20, 24, 25, 29, 32, 34, 35, 37, 38, 39, 43, 52, 54, 55, 56, 59, 64, 65, 66, 77, 85, 90, 91, 92, 93, 98, 114, 116, 121, 122, 125, 130, 133, 134, 136, 139, 143, 144, 146, 148, 149, 151, 160, 162, 163, 165, 167, 169], "number": [3, 4, 5, 6, 13, 18, 19, 20, 22, 23, 25, 29, 32, 34, 35, 37, 38, 39, 43, 52, 54, 55, 56, 57, 59, 64, 66, 67, 77, 81, 83, 86, 90, 91, 92, 93, 98, 99, 114, 121, 131, 134, 136, 139, 143, 144, 146, 148, 149, 151, 154, 155, 161, 162, 163, 164, 176, 180, 183, 200, 202, 214, 221, 222, 223], "pair": [3, 6, 13, 17, 54, 146, 163, 165, 170, 179, 197, 206, 215], "10": [3, 5, 13, 17, 18, 19, 23, 25, 26, 29, 32, 34, 35, 37, 38, 48, 52, 56, 57, 58, 59, 64, 67, 69, 90, 91, 92, 95, 114, 121, 136, 140, 144, 146, 151, 162, 164, 165, 182, 189, 190, 210, 211, 221, 223], "b_number": 3, "one": [3, 12, 17, 19, 23, 24, 59, 64, 66, 81, 83, 86, 87, 90, 91, 92, 93, 113, 116, 120, 121, 126, 127, 136, 161, 162, 163, 170, 173, 174, 175, 177, 178, 179, 180, 183, 184, 186, 189, 190, 193, 195, 196, 200, 203, 206, 210, 211, 214, 215, 216, 217, 221, 222, 223, 224, 225], "5": [3, 13, 18, 19, 23, 25, 29, 32, 37, 38, 39, 57, 58, 59, 64, 73, 74, 77, 90, 91, 92, 95, 98, 114, 116, 121, 122, 136, 139, 146, 151, 164, 177, 207, 221], "full": [4, 5, 66, 78, 81, 88, 121, 133, 162, 167, 170, 176, 190, 195, 207, 208, 220, 221, 223, 226], "4": [4, 5, 13, 17, 18, 19, 23, 86, 90, 91, 116, 118, 121, 136, 144, 146, 147, 162, 168, 177, 186, 207, 211, 223], "dc": [4, 5, 7, 8, 32, 41, 42, 43, 50, 59, 64, 143], "n_step": 4, "increment": [4, 5, 13, 64, 149, 165, 180], "step": [4, 13, 15, 16, 64, 77, 121, 146, 162, 164, 180, 189, 196, 201, 207, 211, 217, 218, 219], "1": [4, 5, 6, 7, 10, 13, 16, 17, 18, 19, 23, 26, 28, 29, 36, 38, 43, 55, 56, 57, 58, 59, 64, 66, 69, 72, 73, 77, 86, 90, 91, 92, 114, 116, 121, 122, 130, 133, 136, 141, 146, 148, 149, 153, 162, 168, 170, 176, 177, 186, 188, 193, 196, 200, 206, 207, 214, 218, 219, 221, 223], "test_width": 4, "doubl": [4, 5, 6, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 90, 91, 92, 94, 95, 117, 121, 136, 139, 140, 141, 143, 144, 146, 148, 149, 151, 181, 193, 196, 197, 217, 222, 227], "singl": [4, 6, 10, 13, 17, 19, 23, 26, 57, 59, 64, 71, 73, 77, 84, 86, 90, 92, 94, 103, 105, 113, 120, 121, 126, 136, 137, 141, 146, 167, 170, 171, 177, 190, 191, 200, 204, 207, 218, 219, 221, 225, 226], "2000": [4, 19, 121, 143, 203, 214], "unit": [4, 5, 6, 9, 10, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 90, 91, 92, 94, 95, 114, 116, 117, 121, 133, 134, 136, 139, 140, 141, 143, 144, 146, 148, 149, 151, 161, 162, 164, 184, 188, 190, 203, 205, 208, 222], "\u03bcm": [4, 5, 6, 9, 10, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 69, 71, 72, 73, 76, 77, 90, 91, 92, 94, 95, 136, 139, 140, 141, 143, 144, 146, 148, 149, 151, 179, 203, 205], "pixel": [5, 7, 78, 162, 226], "corner": [5, 7, 13, 35, 37, 38, 39, 52, 64, 65, 66, 77, 162, 168, 194, 195, 203, 206], "dice": [5, 7, 35, 85], "edg": [5, 7, 12, 19, 20, 24, 35, 36, 52, 59, 64, 65, 74, 75, 85, 91, 92, 93, 116, 118, 121, 122, 131, 132, 133, 134, 136, 139, 140, 150, 162, 164, 179, 191, 197, 223], "option": [5, 23, 32, 37, 59, 64, 85, 86, 87, 95, 105, 114, 118, 121, 125, 131, 134, 136, 137, 147, 155, 170, 175, 186, 191, 196, 197, 203, 205, 210, 218, 219, 221, 224], "all": [5, 11, 28, 31, 34, 36, 37, 48, 56, 57, 58, 62, 64, 65, 67, 78, 84, 85, 86, 87, 90, 91, 92, 95, 99, 105, 110, 116, 118, 120, 122, 123, 125, 126, 136, 153, 160, 162, 163, 165, 167, 170, 171, 172, 174, 177, 180, 184, 185, 186, 190, 191, 195, 196, 200, 203, 206, 207, 211, 214, 215, 217, 218, 220, 221, 222, 223, 224], "contain": [5, 22, 23, 28, 34, 36, 37, 48, 56, 57, 58, 64, 70, 78, 79, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 99, 105, 110, 113, 117, 118, 120, 121, 123, 125, 126, 127, 136, 137, 144, 148, 149, 151, 153, 161, 163, 165, 168, 174, 175, 176, 179, 180, 184, 187, 188, 189, 190, 191, 192, 197, 199, 202, 203, 204, 208, 215, 217, 218, 221, 223, 224, 226], "connector": [5, 19, 32, 37, 40, 41, 42, 43, 59, 62, 63, 64, 77, 192, 197, 200], "between": [5, 6, 9, 10, 12, 13, 17, 18, 19, 23, 24, 25, 29, 32, 34, 35, 37, 38, 39, 41, 43, 57, 58, 59, 62, 63, 64, 65, 77, 81, 92, 95, 114, 116, 121, 134, 136, 141, 144, 146, 148, 149, 150, 151, 153, 162, 164, 175, 190, 192, 208, 222, 223], "librari": [5, 28, 31, 37, 41, 45, 52, 61, 64, 71, 78, 92, 93, 94, 95, 146, 150, 165, 171, 188, 189, 190, 192, 193, 195, 196, 200, 203, 204, 207, 208, 211, 215, 216, 226, 227], "superconduct": [5, 37, 150, 208], "quantum": [5, 28, 37, 70, 150, 208, 226], "circuit": [5, 28, 37, 77, 150, 175, 208, 215, 226], "implement": [5, 28, 31, 34, 36, 37, 38, 39, 43, 48, 52, 55, 56, 57, 58, 64, 65, 66, 90, 91, 92, 95, 99, 105, 110, 136, 161, 162, 163, 170, 179, 183, 203, 206, 215, 219, 221, 222, 223, 226], "static": [5, 37, 54, 64, 65, 66, 68, 78, 85, 86, 136, 169, 172, 174, 180, 193], "chip_cel": [5, 84, 85], "return": [5, 34, 36, 37, 38, 48, 52, 56, 57, 58, 59, 64, 65, 66, 67, 78, 79, 85, 86, 88, 90, 91, 92, 94, 95, 99, 103, 105, 108, 110, 113, 114, 116, 117, 118, 120, 121, 122, 123, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 140, 146, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 177, 179, 180, 181, 195, 200, 206, 217, 218, 223], "dictionari": [5, 23, 37, 59, 67, 81, 85, 86, 87, 99, 103, 114, 117, 118, 121, 122, 126, 128, 134, 136, 137, 140, 155, 163, 171, 174, 175, 176, 177, 179, 206, 214, 223], "assign": [5, 105, 118, 136, 179, 195, 206], "port_id": 5, "launcher_id": 5, "object": [5, 26, 34, 36, 37, 45, 48, 52, 56, 57, 58, 64, 78, 79, 81, 84, 85, 86, 87, 90, 91, 92, 94, 95, 97, 99, 103, 110, 111, 113, 116, 118, 120, 121, 126, 127, 128, 133, 134, 135, 136, 137, 141, 153, 159, 161, 162, 163, 165, 167, 172, 174, 175, 177, 179, 180, 184, 190, 193, 196, 201, 203, 205, 208, 216, 217, 218, 221, 222, 224, 225, 226, 227], "junction_typ": [5, 9, 10, 13, 23, 26, 71, 72, 73, 74, 75, 76, 77, 92, 94, 141, 146, 180, 223], "pad": [5, 9, 13, 29, 31, 32, 33, 34, 36, 38, 49, 50, 59, 72, 73, 75, 77, 91, 92, 94, 95, 136, 143, 145, 146, 147, 150, 205, 223], "string": [5, 6, 7, 9, 10, 13, 14, 15, 16, 17, 19, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 37, 38, 41, 43, 45, 46, 47, 56, 59, 61, 62, 63, 64, 67, 71, 72, 73, 74, 75, 77, 85, 86, 92, 94, 99, 110, 114, 117, 121, 122, 123, 125, 126, 135, 136, 137, 139, 141, 146, 147, 151, 155, 160, 161, 163, 165, 167, 169, 170, 171, 173, 175, 176, 179, 200, 206, 218], "type": [5, 9, 10, 13, 14, 15, 16, 18, 19, 23, 25, 26, 27, 29, 31, 32, 33, 35, 37, 41, 43, 45, 46, 47, 52, 56, 59, 61, 62, 63, 64, 67, 71, 72, 73, 74, 75, 77, 81, 86, 88, 92, 94, 95, 110, 116, 121, 127, 131, 134, 136, 137, 138, 141, 146, 147, 151, 153, 154, 155, 161, 162, 163, 165, 170, 175, 177, 180, 186, 190, 191, 193, 194, 202, 203, 205, 214, 220, 222, 223], "us": [5, 9, 11, 19, 23, 26, 28, 29, 34, 36, 37, 38, 43, 48, 49, 52, 55, 56, 57, 58, 59, 64, 65, 67, 68, 69, 71, 76, 78, 81, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 98, 99, 100, 105, 110, 111, 113, 114, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 146, 150, 155, 161, 162, 163, 164, 165, 169, 170, 171, 174, 175, 176, 177, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 214, 215, 218, 219, 221, 222, 223, 224, 225, 226, 227], "optic": [5, 15, 16, 144, 148, 149, 208, 226], "lithographi": [5, 15, 16, 136, 144, 148, 149, 215, 226], "call": [5, 37, 57, 64, 86, 98, 99, 100, 105, 110, 116, 117, 126, 133, 136, 138, 139, 140, 141, 153, 160, 163, 171, 172, 174, 175, 184, 191, 204, 205, 206, 207, 217, 218, 220, 221, 222, 223, 224, 226], "overrid": [5, 13, 85, 87, 98, 99, 100, 110, 117, 118, 134, 136, 138, 139, 140, 141, 146, 184, 186, 219], "set": [5, 19, 37, 59, 64, 78, 83, 84, 86, 87, 99, 105, 110, 114, 116, 117, 118, 121, 123, 131, 134, 136, 140, 161, 172, 179, 183, 184, 186, 189, 190, 191, 192, 193, 202, 203, 204, 205, 208, 214, 219, 221, 222, 223, 224], "given": [5, 34, 36, 37, 48, 55, 56, 57, 58, 59, 64, 65, 78, 81, 84, 86, 90, 91, 92, 94, 95, 110, 114, 116, 117, 118, 133, 134, 135, 136, 137, 144, 146, 147, 148, 149, 151, 161, 162, 163, 166, 168, 169, 171, 172, 174, 177, 179, 180, 184, 186, 203, 206, 215, 218, 221, 222, 223, 225], "pya": [5, 37, 52, 64, 81, 85, 86, 88, 94, 116, 117, 118, 133, 136, 150, 160, 162, 163, 165, 168, 172, 175, 177, 179, 181, 188, 200, 203, 206, 214, 218, 223], "dbox": [5, 78, 94, 99, 110, 116, 117, 133, 136, 168, 200, 203, 214, 218, 223], "within": [5, 34, 36, 37, 48, 56, 57, 58, 64, 90, 91, 92, 95, 105, 110, 121, 147, 180, 190, 191, 215, 225, 227], "id": [5, 6, 7, 10, 13, 16, 19, 25, 29, 32, 37, 38, 59, 64, 78, 81, 86, 87, 92, 110, 122, 136, 139, 146, 151, 161, 162, 176, 185, 190, 200, 204, 214, 216, 217, 218, 227], "where": [5, 13, 17, 19, 23, 25, 29, 32, 34, 36, 37, 38, 48, 56, 57, 58, 59, 64, 65, 66, 71, 76, 85, 86, 87, 90, 91, 92, 95, 99, 105, 113, 116, 120, 121, 122, 123, 126, 131, 133, 135, 136, 137, 140, 146, 151, 160, 161, 162, 165, 168, 170, 174, 175, 179, 180, 184, 189, 193, 202, 203, 206, 211, 214, 217, 218, 219, 221, 222, 223, 225], "frame_paramet": 5, "r0": [5, 37, 136, 150], "dtran": [5, 52, 66, 85, 137, 181, 203, 206, 223], "toler": [5, 65, 114, 121, 132, 136, 162, 174], "004": [5, 136, 174], "base_metal_gap": [5, 81, 174, 202], "combin": [5, 37, 99, 117, 126, 136, 174, 208, 223], "three": [5, 17, 70, 136, 174, 190, 209, 215, 217, 218, 221, 223], "subtract": [5, 52, 117, 136, 150, 174], "insert": [5, 28, 35, 37, 59, 64, 68, 78, 85, 94, 99, 110, 117, 136, 146, 150, 163, 174, 179, 190, 193, 197, 200, 206, 223], "oper": [5, 37, 64, 161, 174, 186, 189, 195, 197, 210, 211, 221], "base_metal_gap_wo_grid": [5, 94, 144, 146, 148, 149, 174, 175, 195, 202, 203, 204, 214], "base_metal_addit": [5, 68, 136, 174, 202], "ground_grid": [5, 174, 202], "info": [5, 125, 131, 136, 173, 174, 186, 221], "gap": [5, 13, 17, 18, 19, 20, 23, 25, 29, 32, 34, 35, 36, 37, 38, 39, 43, 45, 47, 48, 49, 56, 57, 58, 59, 64, 65, 66, 67, 72, 73, 75, 77, 90, 91, 92, 94, 95, 118, 133, 136, 146, 150, 151, 155, 162, 174, 179, 202, 223], "ignor": [5, 86, 94, 99, 117, 121, 122, 136, 162, 174, 179, 189, 221], "while": [5, 23, 81, 174, 175, 191, 204, 211, 221], "\u00b5m": [5, 17, 35, 59, 64, 74, 75, 90, 91, 92, 94, 117, 122, 131, 136, 174], "possibli": [5, 52, 180, 207, 218], "befor": [5, 37, 64, 65, 78, 86, 121, 133, 136, 165, 178, 189, 193, 224], "get": [5, 64, 78, 116, 153, 163, 175, 177, 184, 187, 189, 190, 191, 193, 196, 201, 207, 208, 215, 217, 219], "specifi": [5, 31, 32, 33, 37, 49, 64, 78, 85, 86, 87, 99, 116, 121, 134, 136, 161, 162, 163, 165, 166, 172, 173, 175, 176, 177, 180, 186, 187, 193, 214, 215, 218, 219, 222, 223, 224], "correctli": [5, 37, 65, 85, 99, 127, 186, 197, 202, 206], "resolv": [5, 85, 167, 188, 202], "integ": [5, 6, 7, 10, 16, 19, 85, 134, 136, 162, 163, 169, 193, 223], "filter_layer_list": 5, "transform": [5, 37, 52, 66, 78, 85, 94, 136, 137, 146, 150, 162, 167, 179, 203], "filter_region": 5, "tupl": [5, 23, 37, 64, 65, 66, 78, 85, 86, 113, 116, 117, 118, 120, 123, 126, 136, 140, 153, 160, 161, 163, 165, 170, 177], "layer_nam": [5, 37, 78, 84, 99, 136], "distanc": [5, 6, 17, 18, 19, 25, 29, 35, 43, 64, 65, 67, 90, 91, 92, 118, 121, 136, 140, 141, 144, 150, 151, 162, 165, 222], "filter": [5, 125, 191], "region": [5, 36, 37, 38, 52, 57, 58, 64, 85, 90, 92, 95, 99, 105, 108, 110, 116, 117, 118, 121, 122, 127, 133, 136, 137, 150, 162, 164, 169], "element_cel": 5, "shape_lay": 5, "locat": [5, 37, 52, 64, 78, 81, 85, 110, 113, 118, 120, 131, 134, 136, 140, 157, 168, 170, 176, 179, 180, 189, 190, 191, 192, 206, 207, 210, 217, 222, 223, 224], "rotat": [5, 37, 43, 58, 64, 78, 85, 94, 136, 206, 218], "repeat": [5, 135], "list": [5, 6, 7, 9, 10, 13, 16, 17, 18, 19, 23, 25, 26, 28, 29, 32, 34, 35, 36, 37, 38, 48, 52, 55, 56, 57, 58, 59, 64, 65, 66, 67, 78, 79, 83, 85, 86, 87, 90, 91, 92, 93, 95, 99, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 116, 117, 118, 120, 121, 123, 125, 126, 127, 131, 132, 133, 134, 135, 136, 137, 140, 141, 146, 151, 153, 160, 161, 162, 163, 165, 167, 168, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 186, 189, 190, 193, 195, 196, 200, 203, 207, 214, 215, 222, 223, 224, 225], "dpoint": [5, 37, 64, 65, 78, 85, 94, 116, 118, 132, 134, 136, 150, 160, 161, 162, 165, 168, 175, 179, 203, 206, 214, 218, 223], "degre": [5, 17, 36, 43, 58, 64, 67, 85, 90, 91, 94, 121, 162, 206, 218], "bump_box": 5, "should": [5, 31, 34, 36, 37, 48, 56, 57, 58, 59, 64, 65, 68, 78, 79, 81, 90, 91, 92, 95, 98, 99, 100, 110, 117, 133, 134, 136, 137, 138, 139, 140, 141, 158, 161, 163, 175, 177, 179, 180, 184, 185, 186, 187, 189, 190, 191, 193, 194, 196, 200, 202, 204, 205, 206, 207, 209, 210, 211, 214, 215, 217, 218, 223, 227], "fill": [5, 131, 183, 195, 196, 202, 207], "bump": [5, 32, 41, 43, 59, 64, 136, 139, 183, 200, 223], "coordin": [5, 17, 37, 55, 64, 66, 78, 85, 92, 116, 121, 136, 150, 167, 168, 176, 179, 218], "mai": [5, 28, 37, 64, 78, 85, 86, 99, 136, 137, 171, 174, 175, 176, 180, 184, 186, 187, 189, 190, 191, 195, 196, 204, 206, 211, 214, 215, 217, 218, 220, 221], "post": [5, 37, 121, 126, 135, 222, 224, 225], "sampleholder_typ": [5, 14, 214], "launcher_assign": 5, "none": [5, 13, 25, 26, 29, 31, 32, 35, 36, 37, 38, 41, 45, 52, 57, 58, 59, 61, 64, 71, 78, 84, 85, 86, 87, 88, 90, 92, 94, 95, 99, 110, 113, 114, 116, 117, 120, 121, 123, 125, 126, 127, 133, 134, 135, 136, 137, 140, 141, 146, 150, 151, 153, 155, 161, 162, 163, 170, 171, 172, 175, 176, 177, 179, 180, 221, 223], "enabl": [5, 37, 57, 64, 105, 114, 121, 133, 136, 140, 172, 173, 197, 202, 206, 208, 209, 222], "typic": [5, 13, 25, 29, 32, 37, 38, 59, 64, 70, 92, 122, 136, 146, 151, 155, 171, 175, 200, 203, 223, 224, 225], "sampl": [5, 8, 18, 93, 140, 162, 203, 216], "holder": [5, 8, 18, 140, 203, 216], "size": [5, 29, 35, 36, 38, 43, 57, 58, 64, 69, 78, 85, 86, 90, 91, 121, 122, 134, 136, 162, 168, 169, 176, 179, 186, 192, 203, 214, 218], "self": [5, 37, 59, 64, 67, 71, 76, 85, 86, 94, 98, 99, 100, 117, 136, 138, 139, 140, 141, 163, 185, 200, 202, 203, 206, 214, 215, 221, 223], "accordingli": [5, 203], "wrapper": [5, 78, 140, 184], "around": [5, 19, 29, 35, 36, 38, 52, 65, 66, 78, 85, 136, 161, 162, 168, 184, 195, 196, 199, 208, 215, 218, 223], "configur": [5, 13, 20, 27, 43, 78, 80, 81, 105, 127, 146, 147, 184, 190, 191, 200, 203, 208, 211, 216], "mean": [5, 29, 36, 38, 43, 55, 57, 58, 59, 64, 65, 69, 81, 116, 121, 133, 136, 183, 184, 200, 218, 223], "index": [5, 19, 37, 64, 65, 66, 81, 132, 134, 136, 165, 167, 179, 180, 190, 200, 208], "head": [5, 48, 140], "from": [5, 13, 19, 20, 23, 29, 31, 34, 35, 37, 49, 52, 59, 64, 65, 66, 67, 70, 72, 73, 77, 78, 81, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 105, 110, 114, 116, 117, 118, 120, 121, 123, 125, 126, 132, 133, 134, 136, 138, 139, 140, 141, 146, 150, 153, 154, 157, 161, 162, 165, 166, 168, 169, 171, 172, 173, 175, 177, 179, 180, 183, 184, 186, 187, 189, 190, 192, 193, 195, 196, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227], "n": [5, 13, 25, 29, 32, 37, 38, 57, 59, 64, 66, 90, 91, 92, 130, 136, 146, 151, 162, 163, 175, 191, 214, 221], "launcher_typ": [5, 214], "launcher_width": [5, 20, 214], "launcher_gap": [5, 20, 214], "launcher_ind": [5, 20, 214], "pad_pitch": [5, 214], "port_id_remap": 5, "launcher_frame_gap": [5, 49], "chip_box": [5, 214], "chang": [5, 34, 36, 37, 43, 48, 56, 57, 58, 64, 90, 91, 92, 95, 137, 177, 180, 183, 184, 186, 189, 190, 191, 192, 193, 195, 197, 200, 203, 204, 207, 210, 214, 217, 219, 223, 224, 227], "equal": [5, 133, 162, 170, 176, 179, 222], "distribut": [5, 64, 87, 211], "overridden": [5, 98, 99, 100, 117, 136, 138, 139, 140, 141], "desir": [5, 37, 64, 65, 94, 168, 190, 193, 200, 218, 219, 222, 223], "per": [5, 38, 57, 64, 67, 114, 147, 162, 184, 221, 222], "disabl": [5, 13, 37, 72, 78, 92, 133, 136, 146, 179, 193, 217], "argument": [5, 34, 36, 37, 48, 52, 56, 57, 58, 64, 78, 86, 87, 90, 91, 92, 94, 95, 98, 99, 100, 105, 110, 114, 116, 117, 118, 121, 122, 123, 125, 135, 136, 137, 138, 139, 140, 141, 146, 165, 169, 172, 177, 186, 206, 211, 215, 218, 222, 223, 224, 225], "If": [5, 37, 64, 67, 68, 78, 87, 98, 99, 100, 105, 110, 114, 116, 118, 121, 123, 125, 133, 136, 137, 138, 139, 140, 141, 150, 161, 162, 163, 169, 170, 171, 172, 173, 175, 176, 179, 180, 182, 185, 186, 187, 189, 190, 191, 193, 196, 197, 204, 206, 207, 211, 212, 214, 217, 218, 221, 223, 226, 227], "neither": [5, 78], "rf": [5, 43, 191, 214], "most": [5, 122, 132, 163, 165, 179, 184, 186, 192, 194, 201, 202, 210, 211, 215, 217, 221, 223, 226], "top": [5, 6, 19, 33, 35, 41, 59, 78, 81, 85, 98, 99, 100, 117, 133, 136, 138, 139, 140, 141, 161, 170, 179, 180, 184, 192, 193, 195, 196, 197, 200, 202, 206, 217, 218, 223, 226], "clockwis": [5, 13, 19, 35, 59, 85, 132, 162, 218], "order": [5, 19, 23, 59, 64, 65, 114, 121, 132, 136, 162, 163, 184, 186, 194, 199, 200, 222, 223], "x": [5, 17, 34, 35, 55, 64, 65, 85, 90, 91, 94, 118, 121, 132, 150, 161, 165, 175, 176, 187, 190, 194, 211, 214, 218, 221, 223, 224], "y": [5, 13, 35, 55, 64, 85, 94, 116, 121, 130, 132, 146, 150, 161, 165, 175, 176, 187, 218, 223, 224], "your": [5, 52, 99, 113, 120, 122, 134, 136, 182, 183, 185, 186, 189, 190, 191, 203, 204, 205, 207, 208, 210, 214, 215, 219, 221, 224], "For": [5, 19, 23, 28, 64, 81, 85, 94, 105, 110, 117, 121, 137, 161, 162, 163, 165, 170, 171, 176, 177, 178, 180, 184, 186, 190, 191, 193, 194, 196, 197, 200, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 217, 221, 222, 223, 224], "flip": [5, 6, 16, 19, 32, 37, 40, 41, 43, 54, 59, 64, 139, 161, 197, 200, 205, 218, 223], "": [5, 12, 17, 24, 34, 36, 37, 48, 49, 56, 57, 58, 64, 78, 86, 88, 90, 91, 92, 94, 95, 110, 114, 121, 122, 132, 136, 137, 146, 161, 162, 169, 170, 172, 175, 177, 179, 180, 184, 186, 187, 189, 195, 197, 200, 202, 204, 209, 211, 214, 215, 218, 219, 225, 227], "axi": [5, 13, 17, 24, 65, 90, 91, 94, 121, 146, 161, 180, 181], "rang": [5, 57, 163], "delta_x": 5, "100": [5, 13, 18, 25, 29, 32, 35, 37, 38, 43, 59, 61, 64, 65, 76, 92, 93, 94, 117, 121, 130, 136, 139, 141, 144, 146, 148, 149, 151, 162, 196, 200, 203, 223, 224], "delta_i": 5, "x0": [5, 57], "y0": 5, "separ": [5, 13, 38, 72, 73, 78, 86, 92, 93, 116, 121, 136, 146, 163, 165, 170, 171, 174, 186, 191, 197, 203, 204, 205, 210, 211, 219, 223, 224], "along": [5, 59, 68, 121, 167, 180, 197], "dimens": [5, 20, 78, 85, 133, 136, 187, 197, 222, 223], "displac": [5, 77, 94, 206], "tsv_box": 5, "boolean": [5, 9, 10, 13, 18, 21, 23, 25, 29, 32, 34, 35, 37, 38, 43, 49, 52, 54, 55, 56, 59, 64, 65, 66, 67, 68, 69, 72, 73, 75, 77, 78, 85, 86, 92, 94, 136, 138, 139, 140, 146, 150, 151, 173], "make": [5, 28, 41, 85, 86, 87, 88, 113, 120, 121, 122, 136, 177, 183, 184, 187, 189, 190, 191, 192, 194, 195, 197, 202, 203, 204, 205, 207, 208, 209, 217, 218, 219, 223, 224], "plane": [5, 36, 38, 39, 52, 90, 91, 136, 195, 196, 202, 218], "fals": [5, 13, 18, 19, 21, 25, 29, 32, 34, 35, 37, 38, 43, 49, 52, 54, 55, 56, 59, 64, 65, 66, 67, 68, 69, 72, 73, 78, 84, 85, 86, 92, 94, 99, 113, 114, 117, 118, 120, 121, 123, 125, 130, 131, 133, 134, 135, 136, 138, 139, 146, 151, 162, 163, 168, 170, 171, 172, 176, 179, 180, 206, 218, 221, 222, 223], "gnd_grid_fac": 5, "merge_base_metal_gap": 5, "a_cap": 5, "conductor": [5, 13, 17, 18, 19, 25, 29, 32, 37, 38, 43, 59, 64, 65, 67, 90, 91, 92, 99, 136, 146, 151, 179], "cap": [5, 19], "b_cap": 5, "with_gnd_tsv": 5, "through": [5, 25, 57, 59, 65, 86, 87, 114, 151, 162, 186, 187, 205, 217, 223], "silicon": [5, 25, 99, 117, 136, 151, 202, 205, 223, 226], "tsv_grid_spac": 5, "space": [5, 12, 13, 15, 16, 19, 24, 26, 59, 64, 139, 140, 141, 144, 146, 148, 149, 165, 168, 171, 190], "300": [5, 6, 48, 49, 59, 90, 91, 136], "edge_from_tsv": 5, "clearanc": [5, 52, 64, 85], "550": [5, 17, 136], "tsv_edge_to_tsv_edge_separ": 5, "exist": [5, 78, 85, 98, 100, 126, 136, 138, 139, 140, 141, 161, 162, 165, 171, 176, 180, 184, 189, 193, 195, 196, 199, 203, 205, 206, 207, 210, 223, 224], "250": [5, 91, 93], "tsv_edge_to_nearest_el": 5, "with_gnd_bump": 5, "indium": [5, 136, 200, 223], "bump_grid_spac": 5, "120": [5, 90, 91, 95, 183, 185], "edge_from_bump": 5, "bump_edge_to_bump_edge_separ": 5, "95": 5, "frames_en": [5, 6, 7, 10, 16, 19], "drawn": [5, 6, 7, 10, 16, 19, 192, 195, 223, 226], "frames_marker_dist": 5, "each": [5, 13, 18, 23, 26, 35, 36, 59, 64, 65, 66, 67, 78, 81, 83, 84, 85, 86, 87, 90, 91, 93, 95, 105, 114, 116, 117, 121, 127, 136, 141, 147, 150, 161, 162, 165, 167, 169, 170, 171, 174, 175, 176, 180, 184, 189, 191, 192, 193, 196, 197, 200, 203, 204, 206, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225], "1500": [5, 35, 193], "1000": [5, 17, 18, 48, 56, 59, 78, 81, 85, 121, 136, 193, 214], "frames_diagonal_squar": 5, "diagon": [5, 35, 52, 222], "squar": [5, 12, 24, 35, 38, 52, 85, 86, 150, 170, 190, 202, 204], "2": [5, 13, 18, 19, 23, 25, 26, 33, 34, 38, 39, 45, 57, 64, 72, 76, 77, 85, 92, 94, 99, 114, 116, 117, 118, 121, 141, 146, 147, 151, 162, 168, 177, 188, 189, 203, 208, 219, 221, 222, 223], "frames_mirror": 5, "mirror": [5, 9, 10, 13, 19, 84, 85, 94, 146, 168, 180, 181, 218], "true": [5, 9, 10, 13, 18, 19, 23, 29, 32, 35, 37, 56, 59, 64, 65, 68, 72, 73, 75, 77, 78, 85, 86, 87, 92, 94, 99, 110, 113, 114, 121, 123, 125, 131, 136, 138, 139, 140, 146, 154, 161, 162, 163, 165, 170, 171, 173, 174, 176, 177, 179, 180, 184, 203, 205, 206, 217, 218, 221, 222, 223], "frames_dice_width": 5, "street": 5, "200": [5, 13, 17, 19, 25, 35, 59, 64, 95, 151, 203], "140": 5, "face_box": 5, "8500": 5, "dice_grid_margin": [5, 35], "margin": [5, 13, 19, 25, 29, 32, 35, 37, 38, 59, 61, 64, 69, 72, 73, 77, 85, 92, 136, 146, 151, 168, 202, 223, 224], "name_mask": [5, 35], "m000": [5, 35], "name_chip": [5, 7, 9, 10, 17, 22, 35], "ctest": [5, 35], "name_copi": [5, 35, 85], "copi": [5, 35, 37, 64, 85, 117, 126, 170, 181, 184, 203, 219, 224, 225], "name_brand": [5, 35], "brand": [5, 35], "marker_typ": [5, 13, 35, 52], "lower": [5, 13, 23, 35, 75, 94, 133, 136, 204, 215, 223], "standard": [5, 13, 25, 26, 35, 45, 46, 52, 53, 61, 63, 64, 94, 140, 141, 151, 162, 165, 173, 196, 204, 211], "chip_dicing_in_base_met": [5, 35], "line": [5, 6, 9, 17, 18, 19, 35, 36, 48, 56, 65, 86, 92, 93, 116, 126, 132, 135, 136, 148, 149, 151, 162, 165, 167, 183, 186, 187, 189, 190, 196, 197, 214, 215, 216, 217, 218, 222, 224, 225, 226, 227], "metal": [5, 11, 13, 25, 29, 32, 35, 37, 38, 41, 49, 59, 64, 65, 66, 67, 68, 69, 72, 73, 75, 77, 92, 94, 95, 99, 116, 117, 118, 121, 122, 127, 133, 134, 136, 139, 146, 150, 151, 179, 202, 222, 223], "addit": [5, 13, 29, 35, 37, 49, 64, 65, 66, 67, 68, 69, 72, 73, 77, 81, 85, 92, 98, 100, 116, 135, 136, 138, 139, 140, 141, 146, 183, 186, 190, 194, 197, 202, 206, 218], "bound": [5, 35, 55, 64, 85, 94, 99, 133, 136, 146, 164, 168, 175, 195], "10000": [5, 18, 35, 136, 218], "bump_typ": [5, 32, 41, 43, 59, 64], "choic": [5, 6, 10, 13, 14, 15, 16, 18, 19, 23, 25, 26, 29, 31, 32, 33, 34, 41, 43, 45, 46, 47, 56, 59, 61, 62, 63, 64, 67, 71, 72, 73, 74, 75, 77, 92, 94, 114, 121, 141, 146, 147, 151, 177, 184, 190], "tsv_type": [5, 25, 61, 62, 63, 151], "ellips": [5, 25, 61, 62, 151], "bottom": [6, 33, 37, 41, 59, 74, 75, 81, 85, 117, 133, 136, 179, 184, 196, 200, 202, 203, 218, 223], "transmiss": [6, 18, 56, 65, 151], "3": [6, 17, 18, 19, 23, 26, 34, 38, 39, 47, 54, 66, 85, 90, 91, 95, 99, 116, 121, 122, 136, 141, 162, 168, 177, 188, 189, 207, 211, 222, 223], "crossing_length": 6, "400": [6, 17, 59, 90, 91, 136, 200, 214], "cross_talk_dist": 6, "meander_fac": 6, "two": [6, 9, 17, 35, 36, 38, 39, 41, 43, 55, 62, 63, 64, 72, 85, 91, 92, 93, 94, 116, 117, 133, 136, 150, 161, 162, 165, 175, 179, 184, 189, 193, 194, 206, 218, 221, 222, 223, 224], "daisi": 7, "woven": 7, "includ": [7, 9, 10, 13, 18, 25, 28, 29, 32, 37, 38, 56, 59, 64, 70, 72, 73, 77, 84, 86, 87, 92, 94, 99, 113, 116, 120, 136, 138, 146, 151, 161, 162, 163, 167, 170, 180, 182, 186, 187, 190, 192, 194, 195, 197, 200, 203, 208, 211, 214, 215, 218, 221, 224], "text": [7, 35, 37, 64, 81, 85, 116, 134, 136, 148, 149, 165, 168, 169, 179, 190, 196, 202, 206], "manual": [7, 30, 59, 64, 70, 71, 76, 81, 86, 89, 105, 114, 121, 158, 161, 186, 188, 190, 198, 207, 208, 218, 222, 223, 224, 226], "pattern": [7, 59, 121, 208], "No": [7, 10, 13, 23, 26, 71, 74, 92, 94, 121, 141, 146, 211], "input": [7, 17, 19, 43, 59, 64, 162, 165, 221, 223], "demonstr": [9, 10, 17, 191, 193, 194], "four": [9, 23, 52, 93, 143, 150, 162, 168, 175, 200, 218], "readout": [9, 10, 17, 23, 92, 93], "reson": [9, 10, 17, 18, 19, 23, 48, 56, 59, 138, 197, 222], "probe": [9, 17, 150, 161], "charg": [9, 196], "qubit_a_nr": [9, 10], "qubit_b_nr": [9, 10], "port_nr": [9, 136, 223], "qubit_nr": [9, 10], "cap_finger_nr": [9, 10], "probeline_nam": [9, 10], "readout_res_length": [9, 10, 17, 23, 218], "5000": [9, 10, 23, 59, 140, 206, 218], "5100": [9, 10, 23], "5200": [9, 10, 23], "5300": [9, 10, 23], "include_coupl": [9, 10, 218], "coupler": [9, 10, 17, 18, 19, 23, 26, 34, 36, 38, 56, 90, 91, 92, 93, 95, 136, 141, 155, 196, 223], "3d": [10, 28, 117, 121, 122, 136, 197, 223], "integr": [10, 28, 114, 120, 121, 127, 197, 215, 225], "multi": [10, 29, 31, 32, 56, 59, 64, 67, 81, 86, 87, 136, 191, 200, 208], "featur": [10, 37, 64, 110, 163, 190, 191, 192, 197, 199, 201, 205, 207, 208, 209, 210, 216, 217, 218, 225], "dt": 10, "super": [10, 13, 23, 26, 71, 77, 92, 94, 141, 146], "inductor": [10, 13, 23, 26, 71, 77, 92, 94, 141, 146], "almost": [11, 175], "remov": [11, 34, 52, 85, 86, 136, 139, 161, 162, 171, 173, 177, 180, 187, 189, 190, 202], "ebl": [11, 79, 208, 218], "edge_len": [12, 24], "80": [12, 13, 24, 36, 67, 90, 91, 93], "inter_spac": [12, 24], "20": [12, 17, 18, 19, 24, 29, 31, 36, 38, 39, 69, 90, 91, 92, 93, 94, 148, 149, 221, 223], "pad_width": [13, 73, 92, 146, 150], "500": [13, 19, 25, 34, 48, 50, 56, 59, 64, 85, 92, 121, 143, 146, 151, 169, 200, 223], "junctions_horizont": [13, 146], "horizont": [13, 18, 23, 25, 59, 73, 77, 85, 92, 146, 150, 151, 181], "small_loop_area": 13, "small": [13, 22, 65, 99, 136, 183, 202, 221], "loop": [13, 72, 76, 92, 94, 146], "large_loop_area": 13, "larg": [13, 191, 221], "130": [13, 214], "junction_width_smal": 13, "finger": [13, 17, 18, 19, 23, 34, 38, 39, 56, 57, 58, 72, 73, 77, 92, 95, 146, 155], "15": [13, 90, 91, 144, 223], "junction_width_larg": 13, "08": [13, 141], "junction_width_step_increment_smal": 13, "01": [13, 114, 121, 132, 136], "junction_width_step_increment_larg": 13, "03": 13, "pads_loop": 13, "central": [13, 206, 218], "6": [13, 17, 18, 19, 23, 25, 29, 32, 37, 38, 48, 59, 64, 67, 73, 90, 91, 92, 136, 146, 151, 162, 177], "turn": [13, 19, 25, 29, 32, 34, 36, 37, 38, 48, 56, 57, 58, 59, 64, 90, 91, 92, 95, 121, 136, 141, 146, 151, 179, 184, 193, 206], "64": [13, 25, 29, 32, 37, 38, 59, 64, 92, 136, 146, 151, 162, 210], "r": [13, 25, 29, 32, 37, 38, 43, 57, 59, 64, 65, 66, 92, 136, 146, 151, 162, 163, 179, 186, 189, 190, 206, 221, 224, 227], "radiu": [13, 25, 29, 32, 36, 37, 38, 39, 55, 59, 64, 65, 66, 73, 85, 90, 91, 92, 95, 136, 146, 151, 162, 179, 195, 206], "protect": [13, 25, 29, 32, 37, 38, 59, 64, 69, 92, 136, 146, 151], "1t1": [13, 25, 29, 32, 37, 38, 59, 64, 81, 85, 86, 92, 136, 139, 146, 151, 161, 192, 195, 200, 202, 218, 223], "2b1": [13, 25, 29, 32, 37, 38, 59, 64, 81, 85, 92, 136, 146, 151, 200, 202, 218, 223], "1b1": [13, 25, 29, 32, 37, 38, 59, 64, 92, 136, 146, 151, 200], "2t1": [13, 25, 29, 32, 37, 38, 59, 64, 81, 85, 92, 136, 146, 151, 200, 202], "display_nam": [13, 25, 29, 32, 37, 38, 59, 64, 92, 136, 146, 151], "displai": [13, 25, 29, 32, 37, 38, 59, 64, 78, 92, 136, 146, 151, 195, 197, 217, 218], "gui": [13, 25, 28, 29, 32, 37, 38, 55, 59, 64, 65, 78, 81, 92, 105, 110, 123, 125, 136, 146, 151, 158, 161, 165, 170, 184, 188, 190, 196, 197, 199, 200, 205, 207, 208, 209, 211, 214, 215, 217, 220, 223, 225, 226, 227], "protect_opposite_fac": [13, 25, 29, 32, 37, 38, 59, 64, 92, 136, 146, 151], "appli": [13, 25, 29, 32, 37, 38, 59, 64, 66, 78, 85, 86, 87, 92, 118, 121, 122, 133, 136, 137, 146, 150, 151, 184, 197, 223], "onli": [13, 25, 29, 32, 34, 36, 37, 38, 48, 56, 57, 58, 59, 64, 65, 68, 71, 85, 86, 87, 90, 91, 92, 94, 95, 99, 110, 117, 121, 123, 125, 133, 136, 142, 146, 147, 151, 154, 158, 163, 165, 169, 172, 174, 177, 178, 179, 180, 184, 189, 190, 191, 193, 194, 195, 197, 200, 202, 203, 206, 207, 209, 211, 217, 218, 219, 220, 221, 222, 223, 224], "signal": [13, 25, 29, 32, 37, 38, 59, 64, 92, 121, 134, 136, 146, 151, 179, 197, 222, 223], "carri": [13, 25, 29, 32, 37, 38, 59, 64, 86, 92, 136, 146, 151], "opposing_face_id_group": [13, 25, 29, 32, 37, 38, 59, 64, 92, 136, 146, 151], "oppos": [13, 25, 29, 32, 37, 38, 59, 64, 92, 136, 146, 151, 223], "group": [13, 25, 29, 32, 37, 38, 59, 64, 70, 81, 92, 117, 127, 130, 131, 136, 146, 151, 161, 164, 192, 200, 202], "etch_opposite_fac": [13, 25, 29, 32, 37, 38, 59, 64, 92, 136, 146, 151], "etch": [13, 19, 25, 29, 32, 37, 38, 59, 64, 81, 92, 133, 134, 136, 146, 151], "opposit": [13, 19, 25, 29, 32, 37, 38, 59, 64, 92, 136, 139, 146, 151, 223], "too": [13, 25, 29, 32, 37, 38, 49, 59, 64, 65, 66, 67, 68, 69, 92, 136, 146, 151, 175, 177, 189, 190, 191], "etch_opposite_face_margin": [13, 19, 25, 29, 32, 37, 38, 59, 64, 92, 136, 146, 151], "_epr_show": [13, 25, 29, 32, 37, 38, 59, 64, 92, 105, 136, 146, 151], "geometri": [13, 25, 29, 32, 34, 36, 37, 38, 48, 52, 56, 57, 58, 59, 62, 63, 64, 72, 90, 91, 92, 94, 95, 98, 99, 100, 116, 117, 133, 136, 138, 139, 140, 141, 146, 151, 169, 172, 175, 180, 183, 192, 195, 196, 200, 201, 202, 203, 204, 205, 206, 208, 217, 222, 225, 226], "relat": [13, 25, 29, 32, 37, 38, 57, 59, 64, 81, 92, 127, 136, 146, 151, 206, 208, 212, 214], "avail": [13, 25, 29, 32, 37, 38, 59, 64, 78, 92, 94, 136, 146, 151, 184, 190, 195, 200, 203, 204, 211, 214, 221, 222, 224], "_epr_cross_section_cut_lay": [13, 25, 29, 32, 37, 38, 59, 64, 92, 105, 136, 146, 151], "cut": [13, 25, 29, 32, 37, 38, 59, 64, 92, 103, 105, 108, 110, 116, 117, 118, 136, 137, 146, 151], "_epr_cross_section_cut_width": [13, 25, 29, 32, 37, 38, 59, 64, 92, 136, 146, 151], "when": [13, 25, 29, 32, 34, 36, 37, 38, 48, 56, 57, 58, 59, 64, 65, 78, 85, 90, 91, 92, 95, 105, 110, 116, 121, 125, 127, 133, 134, 136, 146, 151, 161, 162, 179, 180, 183, 184, 187, 190, 192, 193, 197, 200, 202, 203, 205, 206, 211, 217, 218, 219, 221, 223, 226], "visualis": [13, 25, 29, 32, 37, 38, 59, 64, 92, 105, 110, 116, 133, 136, 146, 151, 215], "area_height": [13, 146], "height": [13, 17, 19, 34, 73, 77, 78, 85, 92, 118, 133, 134, 136, 143, 146, 150, 168, 223], "1900": [13, 146], "area_width": [13, 146], "1300": [13, 19, 146], "pad_spac": [13, 146], "only_pad": [13, 146], "pad_configur": [13, 146], "junction_width_step": [13, 146], "automat": [13, 39, 55, 59, 64, 72, 78, 83, 85, 88, 113, 146, 170, 184, 186, 187, 189, 190, 194, 197, 202, 207, 210, 215, 217, 218, 219, 221], "junction_width": [13, 71, 77, 92, 94, 146], "junction_test_pads_typ": [13, 146, 147], "mirror_squid": [13, 94, 146], "its": [13, 37, 59, 64, 65, 85, 94, 99, 110, 116, 121, 136, 146, 161, 162, 163, 180, 184, 186, 193, 194, 205, 214, 218, 219], "finger_overshoot": [13, 72, 73, 92, 146], "include_base_metal_gap": [13, 72, 73, 77, 92, 146], "shadow_margin": [13, 72, 73, 77, 92, 146], "shadow": [13, 72, 73, 77, 92, 146], "compact_geometri": [13, 72, 92, 146], "compact": [13, 72, 92, 146, 163], "separate_junct": [13, 72, 73, 92, 146], "offset_compens": [13, 72, 73, 92, 146], "lead": [13, 38, 57, 72, 73, 92, 121, 146, 179, 189, 195, 221, 223], "offset": [13, 35, 64, 72, 73, 85, 92, 95, 146], "mirror_offset": [13, 72, 73, 92, 146], "move": [13, 55, 64, 72, 73, 92, 94, 146, 162, 186, 196, 197, 207], "finger_overlap": [13, 72, 73, 77, 92, 146], "insid": [13, 36, 57, 59, 64, 72, 73, 77, 92, 99, 114, 116, 121, 134, 146, 163, 170, 179, 193, 196, 203, 204, 206, 217, 218, 223, 226], "single_junct": [13, 72, 92, 146], "second": [13, 17, 32, 43, 72, 92, 118, 121, 125, 136, 146, 162, 200, 219, 221, 224], "predefin": [14, 65, 116, 195], "sma8": [14, 18, 140, 203, 206], "ard24": [14, 18], "dc24": 14, "num_strip": [15, 16, 148, 149], "min_width": [15, 16], "max_width": [15, 16], "stripe_test": [15, 16], "stripe_test_increasing_width": [15, 16], "architectur": [16, 188, 200, 205, 208, 211], "circular": [17, 36, 63, 85, 90, 103, 163], "island": [17, 36, 90, 91, 92, 93, 94, 95, 103, 222, 223], "drivelin": [17, 90, 91, 92, 93], "11500": 17, "12700": 17, "8000": [17, 130], "kappa_finger_control": 17, "capacitor": [17, 18, 19, 34, 36, 38, 39, 56, 57, 58, 64, 108, 155, 175, 192, 206], "32": [17, 90, 91], "21": [17, 18, 19, 23], "46": 17, "coupler_length": 17, "9800": 17, "couplers_a_qb1": 17, "couplers_b_qb1": 17, "couplers_angle_qb1": 17, "0deg": [17, 90, 91], "225": 17, "315": 17, "couplers_width_qb1": 17, "radial": [17, 90, 91], "30": [17, 18, 25, 56, 61, 62, 68, 90, 91, 114, 117, 143, 151, 186, 193, 203, 210], "50": [17, 25, 35, 92, 130, 134, 170, 179], "couplers_arc_amplitude_qb1": 17, "angular": [17, 90, 91], "extens": [17, 90, 91, 134, 136, 172, 187, 188, 209, 219, 222], "25": [17, 32, 41, 59, 77, 223], "65": 17, "couplers_a_qb2": 17, "couplers_b_qb2": 17, "couplers_angle_qb2": 17, "couplers_width_qb2": 17, "couplers_arc_amplitude_qb2": 17, "35": [17, 90, 91], "drive_line_offset": 17, "end": [17, 29, 32, 38, 55, 59, 64, 65, 66, 113, 117, 118, 120, 125, 127, 136, 139, 179, 180, 186, 187, 195, 217, 218, 222, 223], "drive": [17, 90, 91, 92, 140, 186], "ground_gap": [17, 36, 57, 58, 90, 91, 92], "1400": 17, "900": [17, 214], "coupler_ext": [17, 92], "150": [17, 90, 92, 95, 203, 214], "island1_ext": [17, 92], "first": [17, 18, 23, 37, 43, 55, 59, 64, 65, 78, 81, 92, 118, 135, 136, 162, 177, 179, 184, 187, 189, 190, 194, 199, 200, 203, 204, 207, 208, 210, 216, 218, 220, 221, 223, 224], "island2_ext": [17, 92], "drive_posit": [17, 92], "1100": 17, "island_island_gap": [17, 92], "em1": 17, "res_length": [18, 19], "physic": [18, 19, 29, 36, 38, 43, 57, 58, 64, 69, 113, 120, 121, 176, 221, 226], "5434": [18, 19], "5429": [18, 19], "5374": [18, 19], "5412": [18, 19], "5493": [18, 19], "5589": [18, 19], "n_finger": [18, 19, 23, 56], "planar": [18, 19], "l_finger": [18, 19, 23, 56], "23": [18, 19, 23], "9": [18, 19, 23, 211, 214, 218], "14": [18, 19, 23, 25, 189, 190], "28": [18, 19, 178, 190, 210, 211], "type_coupl": [18, 19, 23, 56], "interdigit": [18, 19, 23, 56, 155], "n_ab": [18, 56, 143], "res_term": [18, 56], "termin": [18, 56, 59, 64, 65, 66, 125, 136, 139, 179, 186, 189, 190, 209, 210, 211, 218, 219, 222, 223], "galvan": [18, 41, 56], "res_beg": [18, 56], "begin": [18, 56, 59, 66, 149, 218, 219], "res_a": [18, 19, 48, 56], "res_b": [18, 19, 48, 56], "12": [18, 19, 29, 69, 73, 75, 92, 94, 95, 114, 136, 190, 210], "tl_airbridg": [18, 56], "res_airbridge_typ": [18, 56], "rectangular": [18, 29, 31, 33, 49, 56, 59, 64, 65, 66, 67, 85, 95, 218], "sample_holder_typ": 18, "marker_safeti": 18, "curv": [18, 65, 66, 162], "feedline_bend_dist": 18, "feedlin": [18, 23, 36, 38], "bend": [18, 55, 57, 64, 65, 77, 223], "resonators_both_sid": 18, "both": [18, 19, 29, 30, 32, 43, 58, 64, 71, 76, 88, 110, 117, 121, 128, 136, 179, 184, 187, 191, 218, 221, 223, 224], "max_res_len": [18, 56], "exceed": [18, 56], "becom": [18, 56, 64, 81, 135, 217, 222, 223], "1e": [18, 56, 114, 116, 117, 121, 141], "ground_grid_in_trac": [18, 55, 56, 64, 65, 66, 68], "trace": [18, 29, 48, 49, 56, 64, 65, 66, 67, 68, 69, 134], "border": [18, 136], "preliminari": 19, "resonator_typ": 19, "connector_dist": [19, 59], "extra_resonator_avoid": 19, "extra_resonator_etch": 19, "spiral": [19, 58, 59, 108, 197], "attach": [19, 85, 171, 206, 218], "pl_": 19, "_t_port_c": 19, "identifi": [19, 86, 110, 123, 175, 176, 183, 200, 214, 218, 219], "long": [19, 99, 183, 190, 206, 215, 221, 222, 223], "same": [19, 23, 36, 37, 38, 55, 58, 64, 78, 85, 86, 87, 116, 136, 162, 170, 174, 175, 176, 177, 180, 184, 189, 190, 191, 192, 198, 201, 203, 204, 206, 207, 217, 218, 219, 221, 223], "wai": [19, 22, 64, 86, 87, 132, 179, 184, 190, 193, 196, 200, 201, 206, 207, 208, 209, 211, 214, 215, 218, 223, 224], "direct": [19, 22, 32, 33, 37, 49, 55, 64, 65, 85, 94, 121, 133, 136, 140, 154, 162, 165, 179, 194, 206, 223], "_corner": [19, 179], "cpw": [19, 25, 56, 151], "exclud": [19, 99, 136, 177, 179], "finger_control": [19, 57], "solid": [19, 136, 222], "twofac": 19, "extra": [19, 29, 33, 64, 65, 67, 85, 94, 131, 168, 180, 211], "ground_grid_avoid": [19, 37, 94, 214], "counter": [19, 59, 162], "resonator_fac": 19, "2100": 19, "2900": 19, "3700": 19, "4500": 19, "spiral_box_height": 19, "spiral_box_width": 19, "x_indent": 19, "indent": [19, 20, 163], "800": [19, 59], "cap_res_dist": 19, "waveguide_indent": 19, "At": [19, 186], "bridge_spac": [19, 59], "parametr": [20, 192, 196, 201, 208], "connect": [20, 22, 23, 38, 43, 49, 50, 59, 65, 90, 91, 131, 134, 136, 147, 150, 170, 194, 196, 197, 200, 202, 205, 206, 223], "pairwis": 20, "coplanar": [20, 43, 64, 65, 66, 68, 69, 176, 197], "n_launcher": 20, "40": [20, 32, 36, 41, 43, 59, 64], "launcher_pitch": 20, "pitch": [20, 25, 151], "635": 20, "160": [20, 196], "96": 20, "520": 20, "tunabl": 21, "veri": [22, 65, 78, 195, 196, 197, 206, 217, 223, 224], "coupl": [23, 48, 222], "half": [23, 93, 203], "abov": [23, 59, 136, 170, 190, 191, 193, 194, 196, 197, 204, 217, 221, 222, 224, 225], "below": [23, 29, 35, 59, 75, 94, 118, 133, 136, 154, 170, 180, 182, 189, 200, 215, 217, 218, 219, 221, 223, 225], "chargelin": [23, 95], "whose": [23, 162, 170, 172, 174], "upper": [23, 75, 94, 133, 136, 223], "six": 23, "5400": [23, 218], "5500": [23, 218], "use_test_reson": [23, 138], "test_res_length": 23, "5600": [23, 218], "5800": 23, "metrologi": 25, "segment": [25, 59, 64, 65, 66, 68, 69, 99, 117, 118, 136, 162, 194, 195, 197, 222], "crossect": 25, "analysi": [25, 114, 131], "array_form": 25, "array_layout": 25, "metrology_pitch": 25, "cpw_distanc": [25, 151], "placehold": [25, 151, 218], "hor_dist": [25, 151], "ver_dist": [25, 151], "tsv_diamet": [25, 61, 151], "diamet": [25, 32, 41, 59, 61, 151], "tsv_margin": [25, 61, 151], "tsv_elliptical_width": [25, 62, 151], "ellipt": [25, 62, 151], "pos_start": [26, 140], "end_i": [26, 140], "c_kappa_l_fing": 26, "dedic": [26, 136, 141, 195, 223, 225], "function": [26, 31, 37, 38, 45, 57, 59, 64, 67, 68, 71, 76, 78, 81, 84, 86, 88, 94, 97, 99, 105, 110, 116, 118, 122, 123, 127, 133, 136, 137, 140, 141, 153, 155, 158, 162, 163, 165, 172, 174, 175, 177, 180, 183, 184, 185, 191, 200, 201, 203, 215, 216, 218, 221, 222, 223, 225], "also": [26, 28, 37, 49, 55, 64, 65, 66, 68, 78, 85, 86, 87, 88, 89, 94, 95, 120, 127, 128, 133, 136, 141, 146, 148, 149, 150, 154, 161, 162, 163, 170, 171, 173, 175, 177, 180, 184, 186, 187, 189, 190, 191, 192, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 217, 218, 219, 221, 222, 223, 225, 227], "assum": [26, 65, 66, 78, 86, 136, 141, 210, 222, 223], "follow": [26, 59, 64, 65, 78, 81, 83, 84, 98, 100, 136, 138, 139, 140, 141, 162, 163, 170, 171, 172, 176, 182, 183, 184, 185, 186, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 204, 207, 210, 217, 218, 219, 221, 222, 223, 224, 225], "attribut": [26, 37, 84, 110, 134, 141, 177, 184, 185], "arm_width_a": [26, 140, 141], "arm_width_b": [26, 140, 141], "qubit_spac": [26, 140, 141], "fluxline_typ": [26, 45, 46, 47, 94, 141, 223], "rr_cpl_width": [26, 141], "arm": [26, 38, 94, 95, 140, 141, 144, 146, 203], "24": [26, 95, 140, 141], "rr": [26, 141], "qb": [26, 141], "um": [26, 95, 134, 136, 141, 168, 176], "file": [27, 37, 70, 78, 79, 81, 83, 84, 85, 86, 113, 114, 120, 121, 123, 125, 126, 131, 135, 136, 158, 161, 166, 169, 172, 173, 175, 176, 180, 182, 184, 186, 187, 189, 190, 191, 195, 203, 204, 205, 207, 208, 209, 210, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227], "thing": [27, 83, 184, 192, 202, 221], "path": [27, 59, 64, 65, 68, 78, 84, 88, 113, 114, 120, 123, 126, 131, 135, 140, 161, 162, 166, 171, 175, 176, 186, 190, 191, 193, 195, 196, 197, 206, 210, 211, 215, 219, 220, 221, 224], "sub": [27, 37, 64, 65, 72, 85, 94, 136, 180, 184, 193, 218], "repres": [28, 64, 65, 66, 71, 76, 78, 83, 85, 86, 87, 116, 121, 200, 208, 217, 223], "form": [28, 64, 85, 99, 114, 121, 128, 132, 136, 170, 183, 184, 222], "being": [28, 81, 189, 206], "pcelldeclarationhelp": [28, 37, 184], "load": [28, 70, 78, 86, 89, 92, 93, 95, 166, 169, 171, 172, 176, 180, 184, 217, 218, 221], "klayout": [28, 64, 65, 78, 81, 88, 105, 110, 116, 136, 158, 161, 162, 169, 170, 171, 172, 173, 175, 178, 184, 186, 187, 189, 190, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 216, 218, 223, 225, 226, 227], "code": [28, 30, 34, 36, 37, 48, 55, 56, 57, 58, 64, 65, 70, 71, 76, 78, 89, 90, 91, 92, 94, 95, 146, 163, 170, 180, 183, 184, 186, 188, 189, 190, 191, 193, 195, 196, 198, 201, 202, 203, 204, 206, 207, 208, 209, 215, 217, 223, 224, 226, 227], "share": [28, 94, 136, 162, 221], "them": [28, 99, 114, 125, 136, 175, 184, 189, 190, 191, 192, 194, 203, 205, 206, 214, 215, 218, 223], "have": [28, 31, 34, 36, 37, 48, 52, 56, 57, 58, 64, 65, 78, 81, 85, 86, 87, 89, 90, 91, 92, 95, 110, 114, 116, 136, 160, 161, 162, 170, 171, 175, 177, 179, 180, 184, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 206, 207, 211, 212, 214, 217, 218, 219, 220, 223], "easi": [28, 189, 191, 208], "support": [28, 36, 64, 78, 99, 111, 121, 131, 136, 161, 163, 169, 190, 197, 208, 211, 219, 221, 222, 223, 225], "concept": [28, 192, 198, 205, 217, 223], "belong": [28, 81, 110, 175, 202], "certain": [28, 34, 36, 37, 48, 56, 57, 58, 79, 85, 86, 90, 91, 92, 95, 136, 189, 190, 191, 203, 205, 223], "determin": [28, 37, 43, 52, 64, 65, 85, 86, 110, 113, 114, 121, 122, 136, 150, 170, 173, 179, 180, 206, 214, 218, 219, 222, 223], "actual": [28, 31, 45, 64, 65, 66, 71, 76, 85, 86, 94, 111, 190, 193, 200, 207, 217, 218, 223], "refer": [28, 35, 36, 37, 38, 39, 78, 81, 84, 90, 91, 136, 161, 162, 163, 179, 182, 184, 189, 190, 191, 194, 206, 217, 224], "taper": [29, 39, 49, 64, 69, 77, 92], "bridge_gap_width": 29, "with_side_airbridg": 29, "With": [29, 81, 184, 190, 197, 218], "with_right_waveguid": 29, "gap_between_bridg": 29, "inner": [29, 91, 136, 162, 223], "adjac": [29, 64, 136, 162, 164], "bridg": [29, 31, 32, 33, 55, 59, 64, 67, 98, 205], "waveguide_extra": 29, "taper_length": [29, 39, 64, 69], "31": [29, 69, 163], "41592653589793": [29, 69], "m2": [29, 69, 211], "a2": [29, 36, 38, 43, 57, 58, 64, 67, 69], "non": [29, 36, 38, 43, 55, 57, 58, 59, 64, 69, 99, 108, 114, 116, 117, 136, 162, 163, 169, 183, 211, 222, 223], "b2": [29, 36, 38, 43, 57, 58, 64, 67, 69], "add_met": [29, 49, 64, 65, 66, 67, 68, 69], "add": [29, 32, 37, 38, 43, 49, 55, 62, 64, 65, 66, 67, 68, 69, 75, 78, 85, 86, 94, 98, 99, 100, 116, 117, 121, 131, 136, 138, 139, 140, 141, 150, 177, 184, 186, 202, 203, 205, 206, 207, 214, 218, 219, 221, 223, 224], "airbridge_typ": [29, 31, 32, 33, 59, 64, 67], "bridge_width": [29, 31, 32, 59], "pad_length": [29, 31, 32, 59], "22": [29, 73, 77, 92, 186, 189, 210], "bridge_length": [29, 31, 59, 205], "60": [29, 39, 90, 91], "without": [31, 45, 59, 64, 71, 76, 78, 85, 88, 94, 99, 125, 132, 136, 147, 190, 191, 195, 198, 202, 207, 210, 218, 219, 221, 223, 227], "subclass": [31, 34, 36, 37, 48, 52, 56, 57, 58, 64, 86, 87, 90, 91, 92, 94, 95, 99, 114, 116, 117, 121, 136, 163, 177, 222, 224, 225], "otherwis": [31, 32, 33, 37, 64, 65, 78, 98, 99, 100, 123, 125, 133, 136, 137, 138, 139, 140, 141, 163, 171, 180, 189, 195, 210, 223], "user": [31, 32, 33, 37, 62, 64, 78, 86, 94, 125, 161, 183, 186, 187, 189, 190, 195, 199, 203, 204, 205, 208, 209, 210, 215, 218, 219, 221, 223], "classmethod": [31, 34, 36, 37, 38, 41, 43, 45, 48, 52, 54, 56, 57, 58, 61, 64, 71, 90, 91, 92, 95, 99, 136, 146, 177, 184, 223], "18": [31, 45], "44": [31, 59, 205], "equival": [32, 64, 163], "origin": [32, 33, 37, 41, 62, 63, 66, 67, 74, 75, 78, 85, 116, 136, 162, 168, 196, 203], "geometr": [32, 33, 41, 62, 63, 162, 208], "include_bump": [32, 59], "ubm_diamet": [32, 41, 59], "under": [32, 37, 41, 59, 78, 86, 110, 118, 134, 136, 171, 186, 189, 193, 197, 202, 204, 207, 215, 217], "bump_diamet": [32, 41, 59], "part": [33, 48, 49, 59, 86, 94, 95, 110, 121, 133, 134, 136, 146, 162, 189, 195, 196, 200, 203, 206, 217, 218, 221, 222], "port_a": [33, 38, 64, 137], "port_b": [33, 38, 64, 206], "closest": [33, 35, 132, 136, 150, 161, 162, 170, 223], "pad_extra": 33, "capacit": [34, 57, 92, 93, 114, 121, 122, 134, 141, 179, 221, 223, 225], "fem": [34, 114, 221], "comput": [34, 68, 70, 121, 131, 162, 219, 221, 222], "best": [34, 36, 37, 48, 56, 57, 58, 90, 91, 92, 95, 190, 211, 214], "practic": [34, 36, 37, 48, 56, 57, 58, 64, 90, 91, 92, 95, 184, 215, 223], "effect": [34, 36, 37, 48, 56, 57, 58, 90, 91, 92, 95, 114, 121, 136, 137, 140, 162, 168, 189, 191, 222], "serv": [34, 36, 37, 48, 56, 57, 58, 90, 91, 92, 95], "deriv": [34, 36, 37, 48, 56, 57, 58, 64, 90, 91, 92, 95, 105, 110, 137, 154, 162, 184, 205], "noth": [34, 36, 37, 48, 56, 57, 58, 90, 91, 92, 95, 177, 217], "els": [34, 36, 37, 48, 56, 57, 58, 90, 91, 92, 95, 163], "cl": [34, 36, 37, 48, 52, 56, 57, 58, 90, 91, 92, 95, 99, 136, 155, 177, 223], "you": [34, 36, 37, 48, 52, 56, 57, 58, 59, 78, 90, 91, 92, 95, 113, 120, 163, 170, 182, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 196, 202, 203, 204, 205, 206, 207, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227], "need": [34, 36, 37, 48, 52, 56, 57, 58, 59, 64, 65, 79, 81, 88, 90, 91, 92, 95, 97, 105, 110, 135, 158, 161, 162, 176, 182, 183, 184, 185, 186, 189, 190, 191, 194, 202, 204, 205, 207, 208, 210, 211, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225], "decid": [34, 36, 37, 48, 56, 57, 58, 90, 91, 92, 95, 223], "x_coupler_length": 34, "x_coupler_height": 34, "x_coupler_vari": 34, "variant": [34, 35, 46, 47, 83, 86, 218], "either": [34, 37, 59, 70, 71, 76, 78, 81, 86, 87, 89, 105, 136, 147, 162, 179, 189, 193, 206, 223, 225], "remove_capacitor": 34, "finger_numb": [34, 38, 39], "finger_width": [34, 38, 39, 57, 58], "finger_gap": [34, 38, 39, 57, 58], "finger_gap_end": [34, 38], "marker_dist": 35, "diagonal_squar": [35, 52], "chip_dicing_width": 35, "chip_dicing_line_length": 35, "chip_dicing_gap_length": 35, "dash": [35, 197], "face_label_show": 35, "face_label_s": 35, "charact": [35, 163, 168, 169, 183], "75": 35, "face_label_margin": 35, "face_label_x": 35, "face_label_i": 35, "450": [35, 92], "outer": [36, 49, 85, 91, 150, 162, 200], "semi": 36, "fix": [36, 38, 57, 64, 136, 191, 210, 211], "imped": [36, 90, 91, 134], "r_inner": [36, 91, 162], "r_outer": [36, 91, 162], "extern": [36, 91, 204, 208, 215, 216, 223, 224], "swept_angl": 36, "cover": [36, 52, 85, 99, 122, 133, 136, 155, 164, 179, 191, 195, 199, 218, 222], "180": [36, 43, 58, 64, 67, 91], "outer_island_width": [36, 91], "fixed_length": [36, 38, 57], "auto": [36, 38, 57, 202], "_epr_part_reg_cplrbulk_lay": 36, "partit": [36, 57, 58, 90, 92, 95, 105, 108, 110, 117, 118, 122, 127, 133, 136, 137, 221], "cplrbulk": 36, "_epr_part_reg_1leadbulk_lay": 36, "1leadbulk": 36, "_epr_part_reg_2leadbulk_lay": 36, "2leadbulk": 36, "_epr_part_reg_1gapbulk_lay": 36, "1gapbulk": 36, "_epr_part_reg_2gapbulk_lay": 36, "2gapbulk": 36, "cell_transf": [37, 136], "extract": [37, 105, 110, 121, 170, 175, 179, 180], "specif": [37, 52, 64, 71, 76, 78, 83, 84, 86, 99, 110, 127, 136, 163, 179, 182, 184, 186, 189, 190, 197, 198, 205, 207, 210, 211, 217, 223, 224, 225], "convert": [37, 64, 85, 136, 163, 165, 170, 171, 174, 175, 179, 180, 193, 198, 215], "target": [37, 64, 153, 179, 190, 211], "system": [37, 81, 114, 121, 161, 167, 179, 186, 189, 190, 205, 207, 210, 211, 216, 221, 224], "recurs": [37, 78, 136, 163, 174, 179], "level": [37, 78, 133, 136, 161, 163, 170, 179, 183, 184, 191, 193, 205, 206, 215, 217, 221], "look": [37, 78, 135, 136, 137, 171, 179, 189, 193, 199, 204, 206, 208], "subcel": [37, 64, 78, 94, 136, 146, 179, 203], "behav": 37, "like": [37, 64, 71, 76, 86, 99, 105, 110, 163, 177, 184, 186, 187, 191, 192, 193, 197, 202, 203, 211, 218, 221, 222], "target_cel": 37, "label_tran": [37, 78, 136], "note": [37, 59, 64, 78, 85, 86, 105, 121, 136, 162, 165, 178, 179, 184, 189, 190, 191, 193, 195, 196, 197, 203, 204, 218, 219, 221, 227], "To": [37, 86, 87, 88, 105, 114, 140, 163, 186, 187, 189, 192, 193, 194, 196, 200, 203, 205, 206, 207, 210, 211, 214, 217, 218, 221, 223, 227], "inherit": [37, 184, 203, 223], "It": [37, 64, 65, 78, 85, 86, 87, 88, 94, 136, 146, 163, 184, 186, 189, 190, 191, 196, 197, 198, 202, 207, 208, 211, 214, 220, 221, 222, 223, 224], "directli": [37, 64, 78, 136, 191, 195, 197, 200, 203, 205, 214, 215, 218, 221], "take": [37, 78, 110, 116, 136, 137, 162, 163, 177, 179, 189, 193, 195, 196, 221, 222, 224, 225], "provid": [37, 78, 87, 97, 136, 163, 186, 192, 217, 222, 223], "keyword": [37, 52, 64, 78, 86, 87, 98, 99, 100, 117, 118, 121, 136, 138, 139, 140, 141, 172, 223], "placement": [37, 52, 78, 85, 136, 140, 180, 187, 214], "parent": [37, 78, 116, 136, 140, 179, 180, 184], "allow": [37, 64, 65, 78, 85, 94, 99, 114, 121, 136, 146, 163, 184, 190, 193, 207, 208, 209, 221, 222, 227], "possibl": [37, 52, 59, 64, 65, 78, 86, 94, 136, 147, 177, 184, 186, 189, 190, 195, 207, 219, 221, 222, 224, 226], "properti": [37, 62, 78, 85, 87, 99, 136, 176, 177, 180, 184, 193, 196, 197, 214, 215, 217], "rel": [37, 77, 78, 94, 99, 110, 113, 114, 118, 121, 136, 146, 168, 171, 179, 184, 206, 222], "dvector": [37, 78, 85, 94, 136, 162], "must": [37, 64, 65, 78, 136, 162, 165, 178, 179, 180, 189, 190, 203, 204, 205, 214, 215, 217, 221, 222, 223, 224, 227], "default_fac": [37, 81, 214], "doe": [37, 64, 134, 136, 170, 186, 189, 193, 195, 207, 221, 225], "necessarili": [37, 65, 136], "sort": [37, 163], "criteria": [37, 127], "push": [37, 186, 219], "_epr_": 37, "alphabet": 37, "subtyp": 37, "abstract": [37, 99, 136, 184], "care": [37, 162, 189, 191], "str": [37, 64, 85, 99, 102, 104, 105, 107, 108, 109, 110, 113, 114, 116, 117, 118, 120, 121, 122, 124, 125, 128, 130, 133, 134, 135, 136, 137, 153, 160, 161, 163, 165, 167, 169, 170, 171, 177, 180], "indic": [37, 81, 118, 136, 160, 172, 179, 200, 202, 222, 223], "refpoint_transform": 37, "conveni": [37, 64, 85, 88, 136, 220, 223], "new": [37, 78, 98, 100, 116, 117, 126, 136, 138, 139, 140, 141, 153, 159, 161, 165, 171, 177, 180, 183, 184, 189, 190, 191, 192, 193, 195, 199, 203, 204, 205, 206, 207, 218], "present": [37, 127, 136, 180, 186, 189, 209], "prefix": [37, 78, 84, 102, 104, 105, 107, 108, 109, 110, 116, 120, 126, 135, 136, 150, 191, 193, 206], "give": [37, 121, 136, 186, 189, 200, 203, 207, 209, 222], "current": [37, 78, 88, 111, 114, 131, 136, 161, 190, 192, 195, 197, 214, 218, 219, 223], "po": [37, 140, 150], "well": [37, 110, 132, 162, 180, 218, 223], "netlist": [37, 86, 175, 176, 215, 218], "Will": [37, 116], "decor": [37, 177, 184, 223], "annot": [37, 62, 65, 66, 81, 187, 195, 202, 215], "evalu": [37, 38], "replac": [37, 86, 99, 165, 180, 189, 218, 224], "mark": [37, 81, 217], "go": [37, 78, 136, 182, 187, 206, 217, 223, 227], "_to_": 37, "cell_inst": 37, "new_nam": 37, "definit": [37, 117, 126, 136, 170, 184, 203, 204, 205, 206, 208, 218, 219, 221, 226], "expos": [37, 64, 88, 217], "renam": [37, 117, 172], "nopar": [37, 99, 136], "abstract_class": [37, 99, 136], "ancestor": [37, 99, 136, 184], "up": [37, 68, 99, 113, 114, 120, 121, 134, 136, 137, 164, 169, 171, 178, 179, 184, 186, 189, 190, 191, 193, 195, 197, 200, 204, 206, 217, 221, 222, 223, 225], "draw": [37, 62, 64, 176, 190, 192, 197, 200, 202, 204, 208, 215, 223, 224], "out": [37, 78, 125, 136, 169, 170, 179, 189, 190, 201, 202, 218, 219], "By": [37, 52, 55, 85, 86, 87, 94, 116, 117, 121, 136, 163, 172, 173, 183, 200, 202, 217, 218, 219, 221, 226], "contour": 37, "overriden": [37, 136], "custom": [37, 52, 64, 78, 81, 90, 91, 120, 127, 133, 163, 172, 187, 200, 203, 208, 216, 221], "behaviour": 37, "error_msg": 37, "error": [37, 113, 120, 121, 126, 127, 131, 160, 161, 173, 186, 189, 195, 197, 202, 204, 207, 208, 211, 217], "rais": [37, 64, 126, 127, 160, 161, 163, 165, 180, 195, 217], "valueerror": [37, 64, 163, 165], "messag": [37, 78, 127, 160, 183, 195, 204, 211], "pure": [37, 222], "doesn": [37, 108, 110, 117, 136, 193, 223], "t": [37, 43, 64, 67, 81, 108, 110, 117, 127, 136, 162, 163, 184, 186, 189, 190, 193, 211, 221, 223], "dpolygon": [37, 68, 110, 133, 181, 203], "etc": [37, 64, 81, 116, 175, 180, 184, 189, 190, 203, 207, 214, 226], "primari": [37, 189, 222], "x_max": 38, "y_max": 38, "x_end": 38, "y_left": 38, "y_right": 38, "respect": [38, 64, 117, 133, 134, 136, 144, 168, 181, 223], "adjust": [38, 39, 43, 64, 197], "ground_pad": 38, "ground_gap_ratio": 38, "ratio": [38, 39, 49, 78, 225], "finger_length": [38, 39], "corner_r": [38, 39], "maintain": [39, 183, 189, 201, 210], "match": [41, 66, 86, 87, 122, 127, 136, 204, 215, 219, 224], "contact": [41, 161], "over": [41, 64, 87, 114, 121, 136, 170, 177, 186, 189, 217, 222, 223], "inter": [42, 43], "output": [43, 64, 120, 121, 153, 163, 165, 170, 173, 186, 190, 215, 219, 221, 222, 224, 225], "chosen": [43, 55, 59, 78, 122, 127, 195, 197, 219, 221], "_port": 43, "orient": [43, 64, 118, 180], "output_rot": [43, 64], "inter_bump_dist": [43, 64], "w": [43, 59, 64, 65, 140], "connector_a": [43, 59, 64], "connector_b": [43, 59, 64], "round_connector": [43, 59, 64], "round": [43, 59, 64, 73, 92, 95, 121, 136, 162, 169, 202], "n_center_bump": [43, 64], "seri": [43, 64, 93, 98, 224], "fluxline_width": [45, 47], "fluxline_gap_width": [45, 47], "hanger": 48, "coupling_length": 48, "head_length": 48, "resonator_length": [48, 56], "total": [48, 55, 64, 74, 75, 94, 121, 136, 143, 153, 162, 195, 221, 222], "ground_width": 48, "middl": [48, 64, 136, 137, 218, 223], "wirebond": [49, 50], "west": [49, 95, 161], "east": [49, 95, 161], "scale": [49, 85, 99], "a_launch": 49, "b_launcher": 49, "l": [49, 68, 127, 185, 193], "240": 49, "144": 49, "common": [52, 97, 110, 126, 127, 208, 210, 217, 224], "cell_mark": [52, 54], "kwarg": [52, 54, 59, 64, 67, 78, 85, 86, 87, 98, 99, 100, 116, 117, 136, 138, 139, 140, 141, 153, 155, 163, 171, 177], "wafer": [52, 85, 87, 218, 226], "own": [52, 95, 161, 186, 189, 203, 204, 207, 208, 209, 214], "wish": [52, 189, 218], "hous": 52, "encod": [52, 163], "prefer": [52, 68, 158, 184, 187, 190, 193, 220, 221, 226], "inst": [52, 54, 154], "surround": [52, 180], "extend": [52, 64, 65, 121, 136, 179, 206, 208, 214, 218], "box_margin": 52, "window": [52, 54, 78, 161, 162, 186, 188, 192, 193, 195, 196, 204, 210, 217, 218, 220, 221, 224, 227], "flyover": [52, 54], "arm_length": [54, 94, 95, 146, 203, 223], "arm_width": [54, 95, 203], "ubm": 54, "arrow_numb": 54, "arrow": [54, 217], "start_point": 55, "end_point": 55, "altern": [55, 59, 64, 65, 86, 110, 114, 121, 125, 136, 175, 180, 189, 221, 222, 224], "shown": [55, 78, 116, 123, 125, 175, 176, 184, 192, 200, 205, 217, 221], "latter": [55, 64, 86, 186], "cannot": [55, 64, 165, 195, 196, 203, 210, 219], "edit": [55, 64, 65, 165, 190, 193, 195, 196, 204, 207, 214, 215, 227], "minim": [55, 64, 110, 190], "taken": [55, 65, 66, 93, 116, 136, 162, 170, 184, 215, 223], "underli": [55, 215], "equidist": 55, "n_bridg": [55, 64, 98], "600": 55, "3000": [55, 206], "probeline_length": 56, "probelin": 56, "smooth": [56, 57, 155, 195], "intern": [56, 99, 136, 179, 192, 222, 223, 224], "radian": [57, 66, 162], "start_po": 57, "start_ang": 57, "continu": [57, 59, 64, 65, 162, 191], "numer": 57, "optim": [57, 121], "achiev": [57, 64, 94], "order_numb": 57, "reg": 57, "xr": 57, "growth": 57, "_epr_part_reg_fingersbulk_lay": 57, "fingersbulk": 57, "finger_width2": 58, "ground_gap2": 58, "spiral_angl": 58, "spiral_angle2": 58, "rotation2": 58, "_epr_part_reg_fingergmer_lay": 58, "fingergm": 58, "_epr_part_reg_waveguides_lay": 58, "input_path": 59, "goe": [59, 64, 162], "last": [59, 64, 65, 81, 105, 135, 136, 162, 196, 214, 218], "poly_path": 59, "unless": [59, 189, 190, 210, 218], "alreadi": [59, 78, 113, 125, 186, 189, 202, 218], "longer": [59, 174, 177, 193, 196], "than": [59, 64, 78, 81, 85, 118, 121, 136, 162, 170, 173, 175, 184, 186, 200, 208, 211, 217, 221, 222], "vertex": 59, "parallel": [59, 86, 139, 189, 218, 225], "polygon_path": 59, "want": [59, 85, 105, 162, 170, 180, 186, 187, 189, 190, 191, 192, 196, 202, 206, 217, 218, 220, 223, 224], "choos": [59, 86, 94, 146, 190, 192, 196, 204, 206, 207, 210, 217, 218, 219, 221], "attempt": [59, 163, 175, 189], "find": [59, 88, 132, 157, 160, 165, 167, 171, 184, 191, 202, 210, 211], "largest": [59, 162], "zero": [59, 68, 116, 136, 223], "independ": [59, 189, 190, 201, 221], "n_bridges_pattern": 59, "neg": [59, 136, 163], "so": [59, 64, 86, 98, 100, 110, 116, 122, 136, 138, 139, 140, 141, 161, 162, 179, 180, 184, 186, 189, 190, 191, 193, 198, 203, 205, 206, 207, 211, 214, 217, 222, 224, 227], "above_spac": 59, "below_spac": 59, "right_spac": 59, "x_space": 59, "y_space": 59, "bridges_left": 59, "bridges_bottom": 59, "bridges_right": 59, "bridges_top": 59, "easili": [59, 67, 131, 155, 190, 191, 205, 208, 215], "old": [59, 67, 171, 173, 180, 193, 218], "spiralresonatorrectangl": 59, "bx": [59, 64, 65], "ex": [59, 64, 65, 210], "auto_spac": 59, "include_connector_length": 59, "manual_spac": 59, "term2": [59, 64, 65, 140], "substrat": [62, 63, 116, 117, 118, 121, 133, 136, 202, 223], "e": [63, 64, 67, 85, 94, 121, 137, 140, 163, 175, 180, 184, 186, 190, 200, 214, 215, 219, 220, 221, 222], "composit": [64, 105, 184, 197], "suppli": [64, 65, 87, 98, 100, 136, 138, 139, 140, 141, 161, 223], "serial": [64, 163], "from_seri": 64, "ast": [64, 165], "literal_ev": [64, 165], "node_object": 64, "node_obj": 64, "element_nam": 64, "human": [64, 208, 215], "readabl": [64, 215], "represent": [64, 85, 162, 163, 221], "storag": [64, 195], "conform": [64, 131], "format": [64, 160, 161, 167, 170, 172, 182, 193, 221, 222, 224, 225], "class_str": 64, "parameter_dict": 64, "__str__": 64, "omit": [64, 211, 218, 223], "made": [64, 94, 174, 175, 176, 222, 223], "perspect": 64, "rout": [64, 136, 173, 197, 206], "sever": [64, 78, 163, 184, 189, 192, 195, 206, 207, 218, 223, 224, 225], "As": [64, 192, 203, 204, 206, 214, 217, 218], "bonu": 64, "arbitrari": [64, 65, 121, 136, 163, 206], "next": [64, 133, 136, 148, 149, 162, 186, 194, 204, 217, 223], "waypoint": [64, 65], "except": [64, 65, 78, 86, 118, 127, 163, 165, 172, 175, 177, 180, 184, 195, 217], "collinear": 64, "previou": [64, 162, 189, 190, 195, 203, 206, 214, 217, 218], "back": [64, 196, 202, 219], "pass": [64, 78, 86, 87, 98, 99, 100, 105, 110, 114, 116, 117, 121, 122, 123, 125, 136, 138, 139, 140, 141, 162, 163, 170, 171, 176, 184, 200, 206, 223], "ab_across": 64, "across": [64, 223], "evenli": 64, "preced": 64, "calcul": [64, 85, 94, 105, 114, 121, 134, 146, 195, 206, 222], "ab_to_ab_spac": 64, "ab_to_node_clear": 64, "former": 64, "densiti": [64, 85, 153, 195], "fact": 64, "instead": [64, 67, 78, 86, 121, 163, 165, 184, 189, 194, 203, 205, 207, 219, 221, 222, 223], "normal": [64, 134, 184, 195], "those": [64, 125, 133, 163, 194, 218, 219], "correct": [64, 88, 103, 105, 108, 110, 118, 137, 165, 184, 200, 203, 204, 210, 219], "compar": [64, 65, 163, 169, 215], "notabl": 64, "detail": [64, 78, 97, 121, 186, 189, 190, 196, 201, 202, 204, 205, 207, 217, 222, 224, 225], "everi": [64, 65, 117, 135, 163, 180, 184, 187, 190, 195, 226], "done": [64, 121, 186, 190, 191, 192, 214, 220, 221, 222, 227], "segment_length": 64, "individu": [64, 85, 86, 87, 116, 121, 136, 183, 189, 190, 197, 223], "regular": [64, 210, 218, 223, 224], "test_waveguide_composit": [64, 217], "lym": [64, 180, 194, 217, 224], "script": [64, 78, 113, 120, 123, 125, 126, 135, 161, 170, 180, 186, 187, 189, 190, 195, 201, 207, 208, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226], "were": [64, 105, 170, 180], "explicitli": [64, 99, 110, 121, 136, 161, 210, 211, 221], "implicitli": 64, "node_index": [64, 159, 165], "_created_": 64, "associ": [64, 78, 176, 217], "particular": [64, 200, 202, 206, 207, 217], "subscel": 64, "appear": [64, 160, 193, 196, 200, 204, 217, 226], "retriev": 64, "itself": [64, 110, 189, 202, 207], "count": [64, 136, 154, 223], "consecut": [64, 164], "special": [64, 162, 194], "consequ": [64, 93, 175], "accumul": 64, "oni": 64, "report": [64, 86, 121, 191], "route_funct": 64, "initial_guess": 64, "waveguide_param": 64, "lambda": 64, "f": [64, 67, 116, 134, 141, 186, 217], "more": [64, 81, 83, 86, 113, 116, 120, 131, 136, 175, 183, 184, 185, 186, 189, 190, 194, 195, 196, 199, 202, 203, 204, 205, 208, 214, 215, 217, 218, 221, 222, 223, 224, 225, 227], "compon": [64, 175], "tune": [64, 94, 180, 223], "weight": 64, "initi": [64, 78, 98, 99, 100, 117, 136, 138, 139, 140, 141, 170, 179, 217, 218], "reason": [64, 184, 200], "interfac": [64, 116, 117, 118, 121, 136, 223], "snap": [64, 170], "behavior": [64, 78, 163], "unmodifi": 64, "requir": [64, 78, 121, 122, 127, 158, 170, 184, 185, 186, 188, 189, 191, 195, 207, 211, 215, 218, 221, 223, 224, 225], "chain": 64, "iter": [64, 65, 114, 121, 163, 170], "approri": 64, "target_len": 64, "point_a": 64, "point_a_corn": 64, "point_b": 64, "point_b_corn": 64, "endpoint": [64, 65, 116, 162, 175], "enable_gui_edit": [64, 165], "gui_path": 64, "gui_path_shadow": 64, "hidden": [64, 81, 177, 184, 202, 205], "detect": [64, 105, 194, 195, 206], "tight_rout": 64, "tight": 64, "airbridge_param": 64, "radio": 65, "bent": 65, "open": [65, 92, 93, 105, 161, 186, 187, 189, 195, 196, 207, 210, 211, 213, 216, 217, 218, 221, 222, 227], "dpath": [65, 68, 206], "partial": [65, 196, 197], "case": [65, 81, 86, 88, 110, 116, 126, 136, 161, 162, 174, 180, 187, 191, 192, 196, 202, 204, 206, 209, 215, 217, 218, 219, 222, 223], "guid": [65, 86, 139, 185, 186, 193, 197, 199, 205, 208, 223], "visibl": [65, 78, 189, 192, 195, 197, 203, 204, 206, 207, 211, 217, 218], "graphic": [65, 85, 162], "due": [65, 184, 211], "precis": [65, 116, 136, 208, 222], "arithmet": 65, "point1": 65, "point2": 65, "point3": 65, "data": [65, 81, 85, 97, 99, 114, 116, 121, 134, 135, 136, 167, 170, 176, 180, 202, 203, 209, 214, 217, 222, 224, 225], "v1": [65, 186], "v2": 65, "alpha1": 65, "alpha2": 65, "corner_po": 65, "vector": [65, 162], "elem": [65, 66], "point_1": 65, "point_2": 65, "term_len": [65, 66], "face_index": [65, 66], "One": [65, 136, 168, 175, 193, 223], "waveguide_cel": 65, "annotation_lay": 65, "consid": [65, 85, 99, 116, 136, 162, 165, 190, 222, 223], "enough": [65, 170], "neighbor": [65, 197], "begin_shapes_rec": 65, "we": [65, 81, 85, 105, 136, 175, 179, 180, 183, 184, 185, 186, 189, 190, 196, 198, 200, 201, 203, 204, 205, 206, 207, 210, 211, 217, 218, 221, 222, 223, 224, 226], "unsign": [65, 162], "maximum": [65, 78, 114, 121, 221], "tline": 65, "stop": [66, 114, 121, 162, 189, 217], "mode": [66, 78, 105, 110, 158, 190, 195, 196, 207, 215, 217, 221, 224, 227], "circl": [66, 162, 217], "discret": [66, 114], "shortcut": 66, "detour": 66, "alpha": 66, "left_gap_inn": 66, "left_gap_out": 66, "right_gap_inn": 66, "right_gap_out": 66, "left_protect": 66, "right_protect": 66, "would": [66, 88, 110, 163, 165, 175, 190, 191, 194, 205], "rad": 66, "141592653589793": 66, "multiwai": 67, "splitter": 67, "letter": [67, 81, 169, 171, 204], "length_extra": 67, "length_extra_sid": 67, "waveguidecoplanartcross": 67, "measur": [67, 90, 91, 136, 143, 195, 217], "11": [67, 99, 118, 136, 189, 190], "270": 67, "use_airbridg": 67, "centr": [67, 90, 91], "bridge_dist": 67, "a_list": 67, "b_list": 67, "port_nam": [67, 127, 206], "c": [67, 86, 140, 184], "d": [67, 86, 136, 163, 189, 218, 221], "g": [67, 85, 163, 180, 214, 221], "h": [67, 134, 141], "j": [67, 222], "waveguide_path": 68, "mess": 68, "centerlin": 68, "design": [70, 71, 76, 84, 86, 89, 94, 180, 187, 192, 197, 200, 201, 205, 206, 208, 215, 217, 225, 226], "packag": [70, 88, 97, 183, 186, 189, 190, 199, 203, 204, 205, 208, 209, 210, 215, 219, 220, 222, 226], "oasi": [70, 126], "devic": [70, 94, 146, 202], "research": 70, "qcd1": 70, "qcd2": 70, "qcd3": 70, "thu": [71, 76, 222], "junctionnam": 71, "02": [71, 77, 92, 94, 146], "style": [72, 73, 77, 183, 188, 199, 206, 208], "distinct": [72, 192, 209], "top_pad_lay": 72, "edge_height": 72, "small_loop_height": 72, "loop_bottom_i": 72, "delta_j": 72, "finger_margin": 72, "junction_shapes_top": 72, "junction_shapes_bottom": 72, "shadow_shap": 72, "h_pad_height": 72, "v_pad_width": 72, "pad_overlap": 72, "tp_width": 72, "tp_height": 72, "rounding_param": 72, "bp_height": 72, "bp_gap_x": 72, "big_loop_height": 72, "include_base_metal_addit": [73, 77, 92], "pad_height": [73, 92, 143, 150], "pad_to_pad_separ": [73, 92], "x_offset": [73, 92], "pad_rounding_radiu": [73, 92], "junction_total_length": [74, 75, 94, 136], "26": 74, "33": [75, 94, 136], "junction_upper_pad_width": [75, 94, 136], "8": [75, 77, 94, 118, 136, 176, 177, 184], "junction_upper_pad_length": [75, 94, 136], "13": [75, 94, 136, 190, 211], "junction_lower_pad_width": [75, 94, 136], "junction_lower_pad_length": [75, 94, 136], "include_background_gap": [75, 94, 136], "squidnam": 76, "loop_area": [76, 92, 94, 146], "junction_length": 77, "wire_width": 77, "wire": [77, 175, 197], "phase_slip_junction_length": 77, "phase": 77, "slip": 77, "squid_area_width": 77, "squid_area_height": 77, "squid_count": 77, "squid_wire_length": 77, "squid_x_connector_offset": 77, "inductor_pad": 77, "limit": [77, 86, 99, 122, 133, 162, 180, 186, 209, 223, 224], "taper_horizontal_displac": 77, "taper_horizontal_displacement_step": 77, "bend_width_multipli": 77, "accord": [77, 81, 85, 116, 172, 180, 187, 190], "shadow_width": 77, "125": 77, "shadow_min_height": 77, "minimum": [77, 85, 114, 121, 162, 189, 190], "04": [77, 189, 210], "inductor_height": 77, "inductor_width": 77, "background_color": 78, "ffffff": 78, "helper": [78, 87, 99, 118, 127, 136, 152, 162, 171, 179, 190, 223], "render": [78, 136], "environ": [78, 131, 186, 188, 189, 210, 211, 219, 221, 225, 226], "layoutview": [78, 217], "cellview": [78, 217], "imag": [78, 83, 176, 186, 187, 190, 210, 217, 218, 219, 221, 223], "tab": [78, 163, 193, 196, 217, 218], "standalon": [78, 88, 161, 184, 186, 188, 189, 201, 208, 209, 211, 217, 218, 220], "python": [78, 88, 135, 163, 165, 166, 170, 184, 185, 186, 188, 196, 199, 203, 204, 207, 208, 209, 215, 217, 218, 219, 220, 221, 222, 224, 227], "keep": [78, 184, 190, 197, 218], "scope": [78, 190], "macro": [78, 170, 180, 189, 194, 195, 201, 204, 207, 208, 211, 215, 216, 218, 224, 226, 227], "applic": [78, 161, 162, 209, 216, 227], "command": [78, 86, 88, 96, 126, 135, 170, 185, 186, 187, 189, 190, 191, 198, 209, 210, 215, 217, 219, 221, 227], "act": [78, 134, 197], "onc": [78, 120, 133, 158, 179, 184, 192, 193, 196, 206, 207, 217, 218, 219, 221, 222, 223, 224], "png": [78, 187], "jupyt": [78, 188], "notebook": [78, 188], "inlin": [78, 197], "wrap": [78, 79], "whether": [78, 92, 94, 118, 134, 135, 146, 161, 186, 220], "background": [78, 219], "color": [78, 214, 223], "html": [78, 81, 187, 210], "white": 78, "fit": [78, 121, 195, 203, 217], "zoom": [78, 195, 196, 217], "main": [78, 85, 96, 120, 121, 175, 186, 190, 192, 201, 204, 205, 215, 217, 218, 225, 226], "ipython": 78, "bold": [78, 192, 217], "clear": 78, "popul": [78, 85, 86, 170], "top_cell_nam": 78, "filenam": [78, 84, 172, 173, 175], "layers_set": 78, "directori": [78, 84, 125, 126, 161, 184, 186, 187, 189, 190, 191, 204, 210, 211, 214, 215, 217, 218, 219, 224], "max_siz": 78, "bigger": 78, "pixelbuff": 78, "whole": [78, 139, 196], "hierarchi": [78, 85, 86, 154, 160, 167, 170, 180, 184, 191, 192, 195, 198, 206, 216, 217, 218], "correspondingli": 78, "viewport": 78, "aspect": [78, 94], "opt": [78, 172], "global": [78, 85, 121, 167], "save": [78, 114, 121, 135, 172, 180, 204, 214, 219, 222, 223], "Not": [78, 179], "deprec": [78, 85, 180], "miss": [78, 158, 180, 191, 217], "ui": 78, "layerinfo": [78, 81, 153, 172, 174, 214], "default_lay": [78, 81, 214, 215], "valid": [78, 99, 117, 127, 136, 165, 185, 190, 222], "cluster": [79, 219, 221], "process": [79, 81, 86, 98, 99, 100, 114, 116, 121, 126, 135, 136, 138, 139, 140, 141, 179, 189, 196, 204, 208, 209, 215, 218, 221, 222, 224, 225], "inform": [79, 86, 136, 182, 184, 194, 203, 204, 205, 214, 215, 218, 223, 224], "about": [79, 184, 186, 189, 200, 203, 205, 208, 210, 215, 217], "togeth": [79, 162, 177, 189, 197, 205, 206, 223], "220": 81, "reserv": [81, 121], "127": [81, 202], "128": [81, 90, 202], "255": [81, 193, 202], "work": [81, 108, 110, 184, 186, 189, 190, 192, 201, 206, 207, 211, 217, 218, 220, 223, 226], "anoth": [81, 92, 93, 95, 120, 163, 179, 180, 184, 193, 202, 203, 214], "stack": [81, 136, 217, 222, 225], "bond": 81, "denot": [81, 121, 200, 218], "manufactur": 81, "necessari": [81, 113, 180, 190, 220, 221], "deposit": 81, "auxiliari": [81, 218], "field": [81, 99, 121, 122, 136, 165, 179, 201, 219], "229": 81, "organis": 81, "www": [81, 121, 131, 210, 221, 224], "de": [81, 134, 210], "doc": [81, 114, 121, 177, 186, 187, 215, 223], "qt5": 81, "layer_sourc": 81, "flat": [81, 85, 184], "map": [81, 85, 86, 87, 110, 175, 223], "subset": [81, 200], "minor": [81, 183], "twist": 81, "1t1_base_metal_gap": 81, "invert": [81, 84], "skip_extra": 84, "bitmap": [84, 86], "oa": [84, 85, 86, 161, 169, 180, 215, 218, 221, 224], "gd": [84, 113, 120, 161, 180, 215, 218, 221], "chip_nam": [84, 85], "chip_dir": 84, "alt_netlist": [84, 86, 175], "export_dir": 84, "subdirectori": [84, 207, 215], "modifi": [84, 85, 92, 93, 116, 136, 162, 172, 190, 192, 194, 195, 204, 205, 207, 208, 214, 217, 219], "mask_document": 84, "md": 84, "spec_lay": 84, "mask_graphical_rep": 84, "json": [84, 113, 120, 126, 135, 161, 163, 175, 176, 180, 221, 222, 224], "postfix": [85, 175, 191], "creation": [85, 179, 221], "2d": [85, 86, 118, 121, 161], "local_chip_tran": 85, "position_label": 85, "abc": 85, "1800": 85, "m90": 85, "h08": 85, "exact": [85, 192, 209, 217], "violat": 85, "conflict": [85, 172], "never": 85, "factor": [85, 171], "coverag": [85, 191], "uniqu": [85, 161, 170, 175, 176, 206, 219, 225], "outsid": [85, 93, 121, 122, 190, 202, 203], "dure": [85, 163, 190, 196], "calcualt": 85, "k": [85, 175], "rigtht": 85, "90": [85, 162, 206, 218], "what": [85, 131, 185, 214, 215, 217, 223], "translat": [85, 193, 210], "chip_placement_list": 85, "unit_x": 85, "unit_i": 85, "chip_coordin": 85, "coord_x": 85, "coord_i": 85, "xxx": 85, "labels_cel": 85, "mask_name_for_chip": 85, "row": [85, 222], "column": [85, 222], "c03": 85, "add_mask_name_to_chip": 86, "These": [86, 87, 111, 170, 184, 187, 189, 206, 214, 215, 217, 218, 224], "Then": [86, 121, 180, 186, 189, 193, 224], "entir": [86, 154, 186, 217], "switch": [86, 227], "debug": [86, 136, 173, 217, 218, 227], "concurr": [86, 189], "cpu": [86, 191, 211], "resourc": [86, 215, 219, 221], "manag": [86, 159, 186, 189, 207, 209, 210, 217, 219, 221], "purpos": [86, 136, 142, 184, 190, 194, 223], "drc": [86, 161, 195, 215], "similar": [86, 121, 179, 217, 221, 222, 223, 224], "folder": [86, 113, 120, 125, 126, 135, 186, 187, 189, 190, 191, 203, 204, 205, 215, 218, 219, 220, 221, 222, 224, 225], "tmp_path": [86, 161, 218], "mask_layout_typ": [86, 87], "extra_face_param": [86, 87], "ident": [86, 87, 175, 176, 180, 184, 190], "overwritten": 86, "extra_kwarg": 86, "variant_nam": 86, "complex": [86, 192, 197, 208, 222], "polymorph": 86, "here": [86, 105, 173, 188, 193, 196, 202, 203, 204, 206, 207, 221, 226], "rest": [86, 125], "quick_demo": [86, 190, 218], "py": [86, 113, 120, 125, 137, 184, 186, 187, 189, 190, 191, 200, 202, 203, 205, 214, 215, 218, 219, 220, 221, 222, 224], "further": [86, 186, 207, 218, 223], "Or": [86, 88], "qdg": 86, "o": [86, 88, 163, 189, 210], "cpu_count": 86, "whichev": 86, "smaller": [86, 136, 162], "remove_guiding_shap": 86, "box_map": 86, "mask_map": 86, "nxn": 86, "mxm": 86, "mnxmn": 86, "usual": [87, 110, 116, 122, 134, 175, 189, 202, 204, 207, 215, 217, 218, 220, 221, 223], "instanti": [87, 179, 184, 190, 223], "extra_param": 87, "modul": [88, 120, 162, 166, 171, 184, 185, 186, 188, 189, 191, 203, 207, 208, 209, 211, 215, 217, 220, 221], "import": [88, 113, 170, 171, 176, 184, 186, 187, 190, 191, 192, 198, 203, 204, 206, 209, 211, 215, 217, 218, 223, 224], "api": [88, 177, 183, 187, 190, 197, 203, 204, 208, 217, 221, 223, 224, 226], "usag": [88, 122, 171, 188, 196, 198, 207, 208, 216, 217, 218, 221, 222, 223, 224], "editor": [88, 189, 190, 196, 204, 207, 211, 215, 217, 218, 224, 227], "db": [88, 184], "execut": [88, 113, 120, 126, 135, 157, 186, 191, 210, 217, 218, 221, 224, 225], "session": 88, "found": [88, 127, 157, 161, 170, 182, 186, 205, 210, 215, 221, 222], "transmon": [90, 91, 103], "josephson": [90, 91], "r_island": 90, "squid_angl": [90, 91], "couplers_r": [90, 91], "couplers_a": [90, 91], "couplers_b": [90, 91], "couplers_angl": [90, 91], "340": [90, 91], "210": [90, 91], "couplers_width": [90, 91], "couplers_arc_amplitud": [90, 91], "45": [90, 91, 99, 136], "drive_angl": [90, 91], "drive_dist": [90, 91], "_epr_part_reg_0cplrmer_lay": 90, "0cplrmer": 90, "_epr_part_reg_1cplrmer_lay": 90, "1cplrmer": 90, "_epr_part_reg_2cplrmer_lay": 90, "2cplrmer": 90, "_epr_part_reg_leadsmer_lay": 90, "leadsmer": 90, "concentr": [91, 122], "290": 91, "rectangl": [92, 93, 116, 184, 197], "shunt": [92, 93], "north": [92, 93, 95], "join": [92, 93], "700": 92, "ground_gap_r": 92, "coupler_r": 92, "coupler_a": 92, "coupler_offset": 92, "squid_offset": 92, "island1_r": 92, "island2_r": 92, "island1_taper_width": 92, "island1_taper_junction_width": 92, "island2_taper_width": 92, "island2_taper_junction_width": 92, "70": 92, "with_squid": 92, "_epr_part_reg_coupler1mer_lay": 92, "coupler1m": 92, "_epr_part_reg_coupler2mer_lay": 92, "coupler2m": 92, "_epr_part_reg_islandbulk_lay": 92, "islandbulk": 92, "_epr_part_reg_leadsbulk_lay": 92, "leadsbulk": 92, "spline": [93, 162], "construct": [93, 126, 162, 180, 218, 223], "island_splin": 93, "island_spline_sampl": 93, "collect": [94, 161, 192], "routin": 94, "beam": 94, "customari": 94, "probepoint": [94, 161], "simpli": [94, 136, 163, 186, 200, 223], "appropri": [94, 179, 183, 184, 200, 203, 214], "probe_ground": 94, "probe_island": 94, "probe_island_1": 94, "probe_island_2": 94, "transf": [94, 146], "only_arm": [94, 146], "base_metal_gap_for_ebl": [94, 146], "right_sid": [94, 146], "help": [94, 146, 189, 190, 191, 195, 208, 217], "dcplxtran": [94, 146, 167, 180], "rot": 94, "flux": [94, 114, 127, 140, 196], "flux_corn": 94, "origin_fluxlin": 94, "origin_squid": 94, "port_common": 94, "howev": [94, 136, 190, 197, 200, 207, 211, 218, 221], "might": [94, 113, 120, 121, 186, 189, 190, 193, 207, 210, 211, 221], "tweak": 94, "overwrit": [94, 161, 186, 221], "south": 95, "gap_width": [95, 223], "wne": 95, "cpl_width": [95, 141], "cpl_length": 95, "cpl_gap": 95, "102": 95, "port_width": 95, "cl_offset": 95, "island_r": 95, "_epr_part_reg_crossbulk_lay": 95, "crossbulk": 95, "_epr_part_reg_0cplrbulk_lay": 95, "0cplrbulk": 95, "_epr_part_reg_1cplrbulk_lay": 95, "1cplrbulk": 95, "_epr_part_reg_2cplrbulk_lay": 95, "2cplrbulk": 95, "arg": [96, 123, 125, 153, 161, 163, 180, 186], "args_for_script": 96, "entri": [96, 161, 180, 207, 218], "consol": [96, 125, 173, 211, 218, 220], "pars": [98, 99, 100, 117, 123, 136, 138, 139, 140, 141, 165], "readi": [98, 100, 136, 138, 139, 140, 141], "dimension": [99, 136, 208, 222, 223], "thought": [99, 226], "model": [99, 117, 120, 121, 134, 136, 190, 221, 222, 223], "constant": [99, 121, 136, 184, 222], "intend": [99, 136, 223], "materi": [99, 117, 136, 221, 222], "material_dict": [99, 117, 136], "check": [99, 110, 127, 136, 158, 163, 180, 186, 189, 190, 215, 222, 227], "artifact": 99, "excit": [99, 114, 121, 122, 134, 136, 222], "bbox": [99, 153], "yet": [99, 190, 193], "relev": [99, 136, 179, 223], "dielectr": [99, 136, 223], "vacuum": [99, 116, 117, 118, 121, 133, 136, 223], "pec": [99, 114, 136], "perfect": [99, 136], "electr": [99, 121, 136], "permitt": [99, 116, 118, 136], "fulli": [99, 136, 190, 222], "dielectric_loss_tang": [99, 136], "permeabl": [99, 136], "magnetic_loss_tang": [99, 136], "partli": [99, 136, 222], "solver": [99, 114, 121, 136, 221, 222, 224], "extra_json_data": [99, 136], "store": [99, 136, 153, 180, 218, 222, 223], "virtual": [99, 136, 186, 190, 211], "refpoint_prefix": [102, 105, 109, 110, 150], "parameter_remap_funct": [102, 105, 109, 110], "callabl": [102, 105, 109, 110, 118, 137], "pointer": 105, "partition_region_funct": [105, 137], "could": [105, 125, 131, 163, 183, 185, 186, 221, 223], "_epr_part_reg_xxx_lay": 105, "differenti": [105, 116], "meant": [105, 215], "reus": [105, 120, 169], "compos": [105, 199, 206], "symmetr": [108, 121], "bool": [110, 113, 114, 120, 121, 123, 125, 130, 133, 134, 135, 136, 161, 162, 174, 180], "face_stack": [110, 136, 223], "face_bas": 110, "z": [110, 118, 133, 136, 186, 227], "mer": [110, 118], "postit": 110, "needed_paramet": 110, "stub": [110, 136, 141], "parit": 110, "recommend": [110, 116, 186, 189, 190, 198, 210, 211, 218, 221, 222], "suppos": [110, 218, 223], "But": 110, "qubit_a": 110, "result": [110, 114, 121, 150, 161, 162, 163, 186, 196, 219, 221, 222, 225], "metal_edge_dimens": [110, 133], "vertical_dimens": [110, 133], "bulk": [110, 189], "program": [111, 208, 217, 220], "hfss": [111, 114, 222, 223, 225], "q3d": [111, 114, 222, 223, 225], "write": [113, 120, 126, 131, 161, 184, 186, 187, 189, 190, 191, 211, 221, 223, 227], "json_filenam": [113, 120, 126, 135], "file_prefix": [113, 120, 126], "exit_after_run": 113, "execution_script": 113, "import_and_simul": 113, "use_rel_path": 113, "batch": [113, 135, 215, 224], "bat": [113, 126, 224], "electron": [113, 157, 222, 224, 225], "desktop": [113, 221, 222, 224, 225], "sequenc": [113, 120, 149, 162], "script_fold": [113, 120], "import_script": 113, "skip_error": [113, 120], "solution_param": [113, 114, 120, 121], "skip": [113, 120, 121, 163, 196], "caus": [113, 120, 137, 162, 163, 189, 190], "carefulli": [113, 120, 183, 223], "sens": [113, 120, 217], "wast": [113, 120], "bad": [113, 120], "ghz": [114, 121], "percentag": 114, "mesh": [114, 120, 121, 122, 131, 221], "refin": [114, 121, 122], "how": [114, 122, 136, 180, 184, 190, 194, 196, 197, 203, 204, 206, 211, 215, 219, 223], "mani": [114, 136, 182, 189, 190, 192, 197, 200, 203, 206, 208, 210, 211, 214, 215, 218, 221, 223], "meet": [114, 197], "criterion": [114, 121], "maxim": [114, 121], "templat": [114, 187, 208], "classvar": [114, 121, 128], "06": 114, "driven": 114, "softwar": [114, 121, 182, 186, 213, 224], "polynomi": [114, 121, 162], "basi": [114, 163, 184, 223], "solv": [114, 162, 222], "linear": [114, 121, 183], "converg": [114, 121], "energi": [114, 120, 121, 225], "magnet": [114, 127], "sheet": [114, 117, 118, 127, 136, 223], "liter": [114, 165], "broadband": 114, "101": 114, "interpol": [114, 121], "multifrequ": 114, "sweep": [114, 116, 121, 126, 131, 180, 221, 225], "lowest": [114, 136, 223], "highest": [114, 136], "fast": [114, 122, 183], "matric": [114, 222], "matrix": [114, 162, 221, 225], "nomin": 114, "moment": [114, 222], "eigenmod": [114, 225], "eigenfrequ": [114, 222], "voltag": [114, 121], "induct": [114, 121, 130, 134, 141, 179, 222], "pyacor": 116, "ma_permitt": 116, "ms_permitt": 116, "sa_permitt": 116, "ma_thick": [116, 118], "ms_thick": [116, 118], "sa_thick": [116, 118], "vertical_cul": 116, "mer_box": 116, "magnification_ord": 116, "sim_nam": 116, "sim_class": [116, 126, 223, 224], "p1": [116, 118, 136], "p2": [116, 118, 136], "air": 116, "thick": [116, 117, 118, 121, 136, 223], "cull": 116, "retain": 116, "_mer": 116, "suffix": [116, 117, 133, 161, 176], "increas": [116, 121, 122, 149, 186, 221], "magnif": [116, 192], "accomod": 116, "spacial": 116, "dbu": [116, 130, 131, 132, 133, 153], "10x": 116, "100x": 116, "oxid": 116, "xsectionsimul": 116, "cut_label": 116, "width_ratio": 116, "request": [116, 173, 180, 186, 190, 219, 221], "cross_section_cut": 116, "_1": 116, "_2": 116, "multipli": 116, "basic": [117, 136, 188, 189, 192, 198, 199, 215, 217, 226], "region_map": 117, "ma": [117, 118, 136], "m": [117, 118, 136, 190, 221], "sa": [117, 118, 136], "tls_layer_thick": [117, 136], "tls_layer_materi": [117, 136], "properli": [117, 184, 189, 191, 207], "source_sim": 117, "thicken": 117, "metal_height": [117, 118, 136, 223], "sheet_met": 117, "vacuum_part": 117, "tl": [117, 127, 136], "union": [117, 190], "cut_start": 117, "cut_end": 117, "cut_bottom": 117, "cut_top": 117, "introduc": [117, 136, 201, 223], "tls_sheet_approxim": [117, 136], "override_arg": 118, "ma_eps_r": 118, "ms_eps_r": 118, "sa_eps_r": 118, "0048": 118, "0003": 118, "0024": 118, "metal_edg": 118, "later": [118, 133, 151, 180, 191, 206, 207], "x_revers": 118, "closer": [118, 136, 162, 170], "z_revers": 118, "workflow": [120, 131, 186, 197, 198, 199, 208, 215, 216, 217, 221, 225], "mesh_reuse_nam": 120, "script_fil": 120, "compile_elmer_modul": 120, "launch": [120, 189, 210, 214, 218, 227], "compil": [120, 121, 190, 211, 219], "runtim": [120, 186], "005": 121, "001": 121, "factori": 121, "adapt": [121, 223], "fraction": 121, "outlier": 121, "big": [121, 218], "_": [121, 159, 206, 223], "larger": [121, 136, 221], "finer": 121, "divid": [121, 184, 190, 215, 221], "dim": [121, 133], "entiti": 121, "expans": [121, 133, 136, 162, 179], "slope": [121, 122], "symbol": [121, 186, 215, 217, 219, 221], "intersect": [121, 132], "complement": 121, "global_max": 121, "less": [121, 131, 184, 209, 211], "awai": [121, 133, 134, 136, 162, 165, 206], "forc": [121, 134, 136, 162, 222], "niter": 121, "dimtag": 121, "gmsh": [121, 122, 216, 219, 220, 224, 225], "netgen": 121, "vtu": [121, 186], "paraview": [121, 186, 220, 221, 224], "off": [121, 136, 217], "slightli": [121, 209], "faster": [121, 131, 180], "restart": [121, 189, 195, 207, 217, 227], "explicit": 121, "wave": [121, 136, 223], "equat": 121, "supercurr": 121, "flow": 121, "boundari": [121, 136, 222], "finit": [121, 186], "nedelec": 121, "kind": [121, 190, 205], "formul": [121, 137], "vectorhelmholtz": 121, "potenti": [121, 134], "v": [121, 130, 183], "nic": 121, "funet": 121, "fi": 121, "pub": 121, "sci": 121, "elmermodelsmanu": 121, "pdf": [121, 131], "warn": [121, 136, 173, 210], "experiment": [121, 226], "poor": [121, 221], "film": 121, "nest": [121, 136], "calc": 121, "wave_equ": [121, 222], "mg": 121, "09": 121, "ilu0": 121, "p": [121, 159], "multigrid": 121, "bicgstab": 121, "mention": [121, 136], "elmersolv": [121, 186, 221], "umfpack": 121, "mump": 121, "pardiso": 121, "superlu": 121, "redund": 121, "precondition": 121, "domain": [121, 133, 136, 223], "infin": [121, 163], "spheric": 121, "condit": [121, 127, 222], "xmin": [121, 130], "xmax": [121, 130], "ymin": [121, 130], "ymax": [121, 130], "just": [121, 184, 186, 189, 190, 204, 206, 207, 215, 223], "impend": 121, "1v": 121, "electrostat": 121, "epr_3d": [121, 222], "ignore_region": 122, "benefici": [122, 221], "suitabl": [122, 190, 209, 222, 223], "sure": [122, 189, 190, 191, 192, 197, 202, 204, 207, 217, 219, 224], "export_script": 123, "quiet": [123, 125], "export_onli": [123, 125], "basenam": [123, 219], "dialog": [123, 125, 195, 197, 207, 220], "describ": [123, 134, 136, 155, 160, 162, 167, 170, 185, 190, 197, 200, 202, 220, 222, 223, 225], "stdout": [123, 173], "print": [123, 163, 170, 171, 173, 218], "export_path_identifi": 123, "script_export_path": 123, "remote_host": 124, "singularity_remote_path": 124, "ssh_login": 125, "kqc_remote_tmp_path": [125, 219], "detach_simul": 125, "poll_interv": 125, "export_path_basenam": 125, "local": [125, 183, 186, 187, 190, 204, 207, 209, 217, 219], "remot": [125, 216, 221, 225], "host": [125, 188, 190, 219, 221], "froce": 125, "q": [125, 190, 196, 220], "ssh": [125, 219], "login": 125, "hostnam": 125, "tmp": [125, 186, 190, 215, 219, 221, 224], "detach": [125, 219], "wait": 125, "finish": [125, 196, 219, 221], "poll": [125, 219], "interv": [125, 219], "interpret": [125, 227], "export_tmp_dir": 125, "source_path": 126, "content": [126, 161, 207, 208, 221], "sh": [126, 186, 219, 221, 224], "json_data": 126, "json_file_path": 126, "sim_paramet": [126, 223], "vari": [126, 205, 221, 223], "sol_class": 126, "sol_paramet": 126, "analys": 127, "inconsist": 127, "met": 127, "ensur": [127, 163, 184, 206], "least": [127, 162, 165, 180, 189, 195, 205, 206, 211, 217], "london": [127, 222], "penetr": [127, 222], "depth": [127, 222], "presenc": 127, "don": [127, 184, 189, 190, 211], "overlap": [127, 136, 162, 164, 175, 206], "enforc": 127, "restrict": 127, "validation_typ": 127, "handl": [127, 153, 184, 194, 221, 225], "filename_templ": 130, "filename_output": 130, "rule": [130, 136, 187, 215], "nvertic": 130, "debugid": 130, "ilevel": 130, "mtype": 130, "filltyp": 130, "conmax": 130, "edge_mesh": 130, "sym": 130, "xwidth": 130, "ywidth": 130, "xcell": 130, "ycell": 130, "materials_typ": 130, "si": 130, "bt": 130, "port_ipoli": 130, "portnum": 130, "ipolygon": 130, "ivertex": 130, "port_typ": 130, "std": 130, "xcord": 130, "ycord": 130, "resist": [130, 134, 179], "react": 130, "capac": 130, "control_typ": 130, "fill_typ": [130, 131], "poli": 130, "detailed_reson": 131, "lower_accuraci": 131, "ab": 131, "staircas": 131, "simulation_safeti": 131, "son": [131, 224], "sonnetsoftwar": 131, "download": [131, 186, 210], "techdoc": 131, "enhanced_resonance_detection_featur": 131, "fine": [131, 177], "coars": 131, "accur": 131, "good": [131, 218], "everyth": [131, 192, 195, 202, 204], "term": [133, 136, 191, 222, 223], "scalar": [133, 136], "subregion": 133, "accept": [133, 155, 165, 183, 189, 222], "preview": [133, 136], "databas": [133, 162, 164, 226], "sign": 133, "metal_region": [133, 150], "etch_region": 133, "reactanc": [134, 179], "renorm": [134, 222], "ideal": 134, "rlc": [134, 222], "lump": [134, 136, 222, 223], "real": 134, "ohm": 134, "omega": 134, "imaginari": 134, "henri": 134, "farad": 134, "signal_loc": [134, 222, 223], "ground_loc": [134, 222, 223], "etch_width": 134, "deembed_len": [134, 179, 222], "embed": 134, "micron": [134, 169], "port_siz": [134, 136], "down": [134, 136, 195, 196, 206, 217], "repeat_for_each": 135, "data_file_prefix": 135, "cast": 136, "built": [136, 186, 187, 192, 203, 204, 207, 223, 227], "principl": [136, 165], "imagin": [136, 223], "surfac": [136, 222, 223], "touch": [136, 202], "lower_box_height": [136, 223], "account": [136, 168, 170, 184, 219, 221, 223], "pile": [136, 223], "That": [136, 222, 223], "leav": [136, 223], "substrate_height": [136, 223], "chip_dist": [136, 223], "infinit": [136, 163, 223], "thin": [136, 223], "insul": 136, "dielectric_height": [136, 223], "grid_siz": [136, 164], "expand": [136, 162], "resolut": 136, "list_or_const": 136, "ordin": 136, "short": [136, 192, 226], "duplic": [136, 162, 174, 189], "ascend": 136, "simplifi": 136, "polygon_toler": 136, "shrink": 136, "amount": [136, 162, 219, 221], "minimum_point_spac": 136, "z0": 136, "z1": 136, "split": [136, 162], "opp_i": 136, "come": [136, 189, 206], "quit": 136, "__init__": 136, "hole": [136, 164], "subtract_kei": 136, "port_kwarg": 136, "engin": 136, "infer": [136, 161, 180], "brought": [136, 179], "at_edg": 136, "signal_edg": 136, "ground_edg": 136, "member": [136, 163], "whatev": [136, 186, 211], "delet": [136, 171, 174, 197, 207], "access": [136, 190, 195, 209], "append": [136, 162, 173, 175, 176, 223], "dtext": 136, "ground_grid_box": 136, "use_port": 136, "upper_box_height": 136, "fixed_level_stackup": 136, "375": 136, "substrate_box": 136, "correspondingsubstr": 136, "substrate_materi": 136, "airbridge_height": 136, "metal_materi": 136, "dielectric_materi": 136, "vertical_over_etch": 136, "hollow_tsv": 136, "constructor": [136, 163, 223], "approxim": 136, "detach_tls_sheets_from_bodi": 136, "significantli": 136, "improv": [136, 190, 191, 210], "perform": [136, 180, 190, 221, 222], "small_shape_area": 136, "trigger": 136, "\u00b5m\u00b2": 136, "base_metal_addition_lay": 136, "element_class": 137, "ignore_port": [137, 223], "transformation_from_cent": 137, "sim_junction_typ": 137, "deembed": [137, 179], "convent": [137, 184, 191, 206, 210, 215], "port_refpoint": 137, "cross_section_nam": 137, "port_am": 137, "xs1": 138, "xs2": 138, "cpw_length": 139, "n_guid": 139, "guide_face_id": 139, "add_bump": 139, "port_termination_end": 139, "use_edge_port": 139, "etch_whole_opposite_fac": 139, "qubit_cel": 140, "center_x": 140, "center_i": 140, "wn": [140, 206], "en": 140, "sw": [140, 161], "se": [140, 161], "nw": [140, 161], "ne": [140, 161], "enable_flux_lin": 140, "enable_drive_lin": 140, "enable_transmission_lin": 140, "transmit": 140, "66": 141, "junction_induct": 141, "35e": 141, "junction_capacit": 141, "16": [141, 214], "num_cross": 144, "cross_width": 144, "cross_length": 144, "cross_spac": 144, "cross_box_dist": 144, "stripe_width": 148, "stripe_length": [148, 149], "stripe_spac": [148, 149], "min_stripe_width": 149, "stripe_step": 149, "widen": 149, "pads_region": 150, "pad_spacing_x": 150, "pad_spacing_i": 150, "connect_pad": 150, "refpoint_dist": 150, "resembl": 151, "fenc": 151, "profil": [151, 219, 221], "tsv_array_form": 151, "tileoutputreceiv": 153, "tilingprocessor": 153, "brief": [153, 159], "ix": 153, "ii": 153, "tile": 153, "obj": [153, 162], "clip": 153, "layer_info": 153, "rho": 153, "frac": 153, "pcell_class": 154, "isinst": 154, "pcell_declar": 154, "coupler_typ": 155, "element_kei": 155, "useless": 155, "latest": [157, 186, 190, 209, 210, 224], "instal": [157, 158, 186, 188, 192, 203, 204, 208, 215, 217, 220, 221, 224, 225, 227], "against": [158, 215], "txt": [158, 186, 189, 190, 221, 224], "upgrad": [158, 189, 190, 211], "stand": [158, 170, 215, 217, 225], "alon": [158, 170, 215, 217, 225], "pip": [158, 189, 190, 211, 220, 221, 224], "sync": [158, 190], "venv": [158, 186, 189, 190], "startup": [158, 165, 190], "plugin": [159, 178, 185, 189], "button": [159, 196, 217], "prio": 159, "__": 159, "pluginfactori": 159, "cell_index": [160, 167], "error_messag": 160, "error_posit": 160, "multilin": [160, 165], "flip_fac": 161, "default_probe_typ": 161, "default_probe_suffix": 161, "millimet": 161, "tell": 161, "site": [161, 211], "cell_fil": 161, "dir_nam": 161, "prompt": [161, 189, 190], "permiss": 161, "deni": 161, "tri": 161, "write_versions_fil": 161, "commit_refer": [161, 221], "git": [161, 183, 188, 189, 190, 209, 215], "revis": [161, 226], "written": [161, 224], "export_machine_vers": 161, "filepath": 161, "maco": [161, 188, 210, 211], "linux": [161, 186, 188, 190, 210, 211, 215, 218, 221, 224], "drc_script": 161, "name_drc_report": 161, "lyrdb": 161, "default_path_length_lay": 162, "sum": 162, "children": 162, "objectinstpath": 162, "outward": 162, "whenev": [162, 183, 217], "elimin": [162, 163], "simple_polygon": 162, "polygon_point": 162, "counterclockwis": 162, "283185307179586": 162, "pi": 162, "control_point": 162, "sample_point": 162, "startpoint": 162, "uniformli": 162, "cubic": 162, "subsequ": 162, "slide": 162, "unlik": 162, "bezier": 162, "guarante": [162, 163, 207], "kaihuai": 162, "qin": 162, "proceed": 162, "pacif": 162, "98": 162, "sixth": 162, "confer": 162, "singapor": 162, "1998": 162, "pp": 162, "37": 162, "43": [162, 184], "doi": [162, 182], "1109": 162, "pccga": 162, "731996": 162, "uniform": [162, 223], "prepend": 162, "tangent": 162, "third": [162, 209, 221], "fourth": 162, "try": [162, 163, 186, 189, 190, 211], "round_corn": 162, "problem": [162, 189, 190, 207, 211, 212, 222], "prevent": [162, 163], "pleas": [162, 183, 189, 190, 191, 212, 213, 223, 224], "apart": 162, "decreas": 162, "skipkei": 163, "ensure_ascii": 163, "check_circular": 163, "allow_nan": 163, "sort_kei": 163, "jsonencod": 163, "sensibl": 163, "typeerror": 163, "incom": 163, "ascii": 163, "escap": 163, "recursionerror": 163, "nan": 163, "compliant": 163, "javascript": 163, "decod": 163, "regress": 163, "dai": 163, "pretti": 163, "newlin": 163, "item_separ": 163, "key_separ": 163, "whitespac": 163, "serializ": 163, "def": [163, 203, 206, 223], "let": [163, 190, 206, 214], "jsondecod": 163, "object_hook": 163, "rpc": 163, "hint": 163, "object_pairs_hook": 163, "prioriti": [163, 193], "parse_float": 163, "num_str": 163, "datatyp": 163, "decim": 163, "parse_int": 163, "parse_const": 163, "invalid": 163, "encount": 163, "strict": [163, 184], "context": [163, 180], "parseabl": 163, "boundbox": 164, "avoid_region": 164, "grid_step": 164, "group_n": 164, "speed": [164, 169, 179, 191, 221], "box_siz": 165, "require_gui_editing_en": 165, "search": [165, 208], "captur": 165, "invers": 165, "treat": [165, 175, 184], "strip": 165, "namespac": [165, 177], "comma": [165, 170], "waveguide_inst": 165, "usabl": [165, 190], "x_corner": 165, "slow": [165, 217, 218], "clumsi": 165, "curat": 165, "node_editor_valid_el": 165, "kept": 165, "file_path": 166, "hold": [167, 203], "structrur": 167, "inst_data": 167, "enum": 168, "origin_offset": 168, "layer_protect": 168, "350": 168, "extent": 168, "nearest": 169, "lai": 169, "font_polygon": 169, "cach": 169, "print_waveguides_as_composit": 170, "add_instance_nam": 170, "refpoint_snap": 170, "grid_snap": 170, "output_format": 170, "include_import": 170, "create_cod": 170, "past": 170, "statement": [170, 204], "node_param": 170, "complet": [170, 187, 190, 207, 214, 221], "flatten": 170, "flush": 171, "ones": [171, 189, 190], "src_path": 171, "memori": [171, 186, 221], "_kqc_librari": 171, "class_nam": 171, "pascalcas": [171, 184], "word": [171, 204, 207], "lowercas": [171, 207], "module_nam": 171, "_to_module_nam": 171, "titl": [171, 182], "qualiti": 171, "loadlayoutopt": 172, "emploi": [172, 222], "cell_conflict_resolut": 172, "renamecel": 172, "savelayoutopt": 172, "set_format_from_filenam": 172, "write_context_info": 172, "lowest_visible_level": 173, "remove_old_handl": 173, "log": [173, 218], "logfil": 173, "monitor": 173, "handler": 173, "root": [173, 186, 191, 215], "logger": 173, "critic": 173, "cell_list": 174, "layer_1": 174, "layer_2": 174, "layer_merg": 174, "only_el": 174, "prune": 174, "contrast": 174, "convert_to_stat": 174, "descend": [174, 184], "anywher": [174, 207], "net": 175, "subcircuit": [175, 176], "terminologi": [175, 208, 216], "eda": 175, "resistor": 175, "pin": [175, 190, 196], "conceptu": 175, "analog": 175, "exactli": [175, 215], "subcircuit_id": [175, 176], "unconnect": 175, "cell_nam": [175, 176], "subcircuit_loc": 175, "_pya_typ": 175, "subcircuit_origin": 175, "breakdown": 175, "regadless": 175, "absolut": [175, 190, 215], "cell_map": 175, "internal_cel": 175, "network": 176, "networkx": 176, "graph": [176, 184, 215], "cell_typ": 176, "instance_nam": [176, 202], "obtain": [176, 223], "with_label": 176, "with_posit": 176, "figsiz": 176, "spring": 176, "figur": [176, 223], "matplotlib": 176, "interact": [176, 216], "plot": 176, "param_nam": [177, 187], "param_with_default_valu": 177, "wildcard": 177, "simplic": [177, 184], "grain": 177, "particularli": 177, "pcellparameterdeclar": 177, "data_typ": 177, "plain": [177, 184, 204], "docstr": [177, 185, 187, 194, 222], "sphinx": [177, 187], "owner": 177, "regist": [178, 184, 213, 215], "registr": 178, "happen": 178, "demand": 179, "builder": [179, 223], "ground_refpoint": 179, "port_squid_a": [179, 223], "port_squid_b": [179, 223], "separate_island_internal_port": 179, "commonli": [179, 203], "export_tuned_junct": 180, "class_typ": 180, "parent_nam": 180, "tuned_junction_paramet": 180, "qb1": 180, "testarray_nw": 180, "squid_0": 180, "squid_3": 180, "testarrai": 180, "schema": 180, "even": [180, 184, 186, 190, 211, 217], "quick": [180, 214], "jsonabl": 180, "exhaust": 180, "read": [180, 198, 206, 207, 209], "write_path": 180, "layer_str": 180, "visual": [180, 190, 215, 221], "again": [180, 189, 217, 218], "parameter_nam": 180, "parameter_start": 180, "parameter_step": 180, "parameter_end": 180, "swept": 180, "squid_index": 180, "mirror_tran": 181, "project": [182, 184, 191, 210, 219, 221], "public": [182, 183, 186, 191], "citat": 182, "bib": 182, "zenodo": 182, "click": [182, 189, 192, 193, 196, 197, 204, 206, 207, 210, 217, 218, 227], "badg": 182, "cucurachi": 182, "daniel": 182, "da": 182, "soumya": 182, "ranjan": 182, "giri": 182, "rakshyakar": 182, "gusenkova": 182, "daria": 182, "guthri": 182, "andrew": 182, "inel": 182, "sinan": 182, "janzs\u00f3": 182, "d\u00e1vid": 182, "jenei": 182, "m\u00e1t\u00e9": 182, "juliusson": 182, "kristinn": 182, "kotilahti": 182, "jann": 182, "landra": 182, "alessandro": 182, "moretti": 182, "roberto": 182, "myll\u00e4ri": 182, "tuoma": 182, "ockeloen": 182, "korppi": 182, "caspar": 182, "r\u00e4bin\u00e4": 182, "jukka": 182, "savola": 182, "niko": 182, "smirnov": 182, "pavel": 182, "takala": 182, "eeli": 182, "wubben": 182, "leon": 182, "month": 182, "jun": 182, "year": 182, "2021": 182, "publish": [182, 186], "5281": 182, "4944796": 182, "url": 182, "welcom": [183, 186], "commun": [183, 221], "contributor": 183, "expect": [183, 211], "licens": [183, 222], "agreement": 183, "websit": [183, 186], "review": [183, 190], "approv": 183, "pr": 183, "forward": [183, 221], "strategi": 183, "histori": 183, "organ": [183, 191, 214, 217], "commit": [183, 190], "meaning": [183, 202], "black": [183, 184, 185], "permit": [183, 200], "pep": [183, 184], "440": 183, "scheme": 183, "miniv": 183, "major": 183, "micro": 183, "offici": [183, 211], "releas": [183, 186, 221], "salt": [183, 189, 190, 199, 203, 204, 208, 209, 215], "incompat": 183, "backward": [183, 190], "break": [183, 186], "seriou": 183, "cosmet": 183, "affect": [183, 208, 211, 221], "explain": [184, 185, 189, 198, 203, 217, 224], "diagram": 184, "oval": 184, "concret": 184, "leaf": 184, "green": [184, 217, 223], "natur": 184, "ever": 184, "live": 184, "create_cel": 184, "variabl": [184, 186, 190, 203, 205, 214, 215, 217, 219, 221, 222], "descriptor": 184, "hierarch": 184, "transpar": 184, "caller": 184, "default_parameter_valu": 184, "technic": [184, 200, 202, 222], "intent": 184, "otherclass": 184, "param_a": 184, "param_b": 184, "myclass": 184, "param_c": 184, "42": 184, "param_d": 184, "41": 184, "syntax": [184, 223], "bit": [184, 196, 202, 210], "revers": 184, "why": [184, 185], "bodi": 184, "kqc_library_nam": 184, "downstream": 184, "discov": 184, "comment": [185, 194, 203, 214, 215, 217], "someth": [185, 193, 221], "feel": 185, "probabl": [185, 211], "rewritten": 185, "clearli": 185, "builtin": 185, "googl": 185, "dockerfil": 186, "addition": [186, 221, 223], "kl_file": 186, "md5": 186, "hash": [186, 190, 215], "kl_hash": 186, "klayout_0": 186, "1_amd64": 186, "deb": 186, "11953ce5009a0e83f9840b506f80df49": 186, "ubuntu": [186, 189, 210], "quickli": 186, "m00x": 186, "volum": 186, "pwd": 186, "ghcr": 186, "io": 186, "mount": 186, "run_script": 186, "nc": 186, "rx": [186, 215], "cours": [186, 190, 205], "wd": 186, "older": [186, 190, 196], "hyperv": 186, "backend": 186, "ram": 186, "1gb": 186, "entrypoint": 186, "branch": [186, 204, 207, 217], "pipelin": [186, 191], "pull": [186, 189, 190, 221], "registri": 186, "better": [186, 191, 223], "hpc": 186, "apptain": 186, "org": [186, 221, 224], "compat": [186, 190, 211], "sinular": 186, "subsystem": [186, 221], "wsl": [186, 190, 221], "substitut": [186, 190], "recent": [186, 207], "wget": 186, "apptainer_1": 186, "0_amd64": 186, "sudo": 186, "dpkg": 186, "uidmap": 186, "libexec": 186, "kqclib": [186, 221], "gb": 186, "pai": 186, "attent": 186, "clone": [186, 189, 190, 209], "ora": 186, "shell": [186, 220, 221], "exit": 186, "cd": [186, 189, 190, 191], "create_link": 186, "link": [186, 189, 207, 209, 211, 215, 217, 219, 221], "rather": [186, 209], "bin": [186, 219], "bashrc": [186, 221], "haven": 186, "setup": [186, 188, 197, 207, 208, 209, 214, 217, 219, 220, 221, 225, 227], "notic": [186, 211, 218], "Thats": 186, "waveguide_sim_compar": 186, "yourself": [186, 210, 211, 221], "pem": 186, "rsa": 186, "encrypt": 186, "successfulli": [186, 189, 190, 221, 227], "home": [186, 218], "singularity_priv": 186, "privat": [186, 191], "among": [186, 208], "elmersolver_mpi": 186, "elmergrid": [186, 221], "ride": 186, "waveguides_sim_compar": [186, 190, 220, 221], "python_execut": [186, 221], "difficult": 186, "bother": 186, "pvtu": 186, "nativ": 186, "rst": 187, "rebuild": 187, "clean": 187, "apidoc": 187, "sphinxext": 187, "make_pcell_imag": 187, "pcell_imag": 187, "markers_for_png": 187, "x_2": 187, "y_2": 187, "ruler": 187, "illustr": [187, 195, 223], "satisfactori": 187, "x2": 187, "y2": 187, "prerequisit": [188, 225], "unlink": 188, "secondari": 188, "symlink": 188, "reproduc": 188, "secur": [188, 221, 224], "exclus": 188, "pypi": [188, 215], "cli": 188, "docker": 188, "ci": [188, 191, 215], "singular": [188, 215, 219, 221], "contribut": [188, 190, 208], "pre": [189, 221, 223], "platform": [189, 190, 210, 211, 221], "lt": [189, 210], "python3": [189, 211], "setup_within_klayout": [189, 190, 215], "virtualenv": 189, "libpython": 189, "dll": 189, "known": [189, 207, 208, 209], "issu": [189, 207, 208, 209, 210, 212], "downgrad": [189, 207], "ask": 189, "afterward": [189, 190], "klayout_packag": [189, 190, 203, 215, 217, 219, 220, 221, 222, 224], "evolv": [189, 206], "realli": [189, 211, 218], "simultan": 189, "kqc_2nd": 189, "know": [189, 190, 211], "klayout_hom": 189, "klayout_alt": 189, "rememb": [189, 195], "mix": 189, "subsect": 189, "ln": 189, "path_to_kqcircuit": 189, "kqcircuits_script": [189, 215, 217, 218], "kqcircuits_requir": [189, 215], "administr": 189, "privileg": 189, "homepath": [189, 210], "mklink": 189, "powershel": 189, "ye": 189, "mayb": 189, "won": [189, 190], "win": [189, 190, 215], "mac": [189, 190, 210, 211, 215, 218], "debugg": [190, 216], "autom": [190, 208, 225], "viewer": [190, 224], "safe": 190, "interfer": 190, "dev": [190, 224], "bracket": 190, "trust": 190, "easier": [190, 205], "troubleshoot": 190, "subsitut": 190, "dep": 190, "rewrit": 190, "wipe": 190, "advanc": [190, 197, 199, 217], "categori": 190, "core": [190, 191, 221], "linter": 190, "publicli": 190, "abl": [190, 217], "upload": 190, "double_pads_sim": 190, "elsewher": [190, 218], "kqc_tmp_path": 190, "ipynb": 190, "tofu": 190, "rare": [190, 202], "verifi": [190, 210, 218], "legitim": 190, "constraint": 190, "unsaf": 190, "nice": [190, 194], "our": [190, 191, 203, 204], "polici": [190, 213], "gitlab": 190, "action": 190, "consult": [190, 223], "tox": 191, "pytest": [191, 215], "pylint": 191, "lint": 191, "ini": 191, "framework": [191, 208, 222, 225], "num": 191, "reflect": 191, "propos": 191, "test_load_librari": 191, "test_invalid_nam": 191, "approach": [191, 207, 221, 223], "u": [191, 206], "understand": [191, 217], "unfortun": 191, "repetit": 191, "consider": 191, "cov": 191, "comprehens": [191, 199], "happi": 191, "failur": 191, "similarli": [191, 223, 224], "bug": [191, 217], "fail": 191, "prior": 191, "wil": 191, "reintroduc": 191, "conftest": 191, "panel": [192, 196, 202], "drag": [192, 193, 196, 197, 200, 204, 217, 227], "press": [192, 196, 197, 204, 207, 217], "f2": [192, 195, 196, 204], "block": [192, 203], "toolbox": [192, 193], "toolbar": [193, 196, 197], "evok": 193, "anim": [193, 194], "bring": [193, 197], "few": [193, 221], "situat": 193, "accid": 193, "confus": 193, "l1500": 193, "l1000": 193, "211": 193, "222": 193, "233": 193, "244": 193, "evid": 193, "newer": 193, "export_cells_as_cod": 194, "nearbi": 194, "hardcod": [194, 203], "instruct": [194, 211], "x_port_a": 194, "x_port_a_corn": 194, "anywai": [194, 206], "navig": [195, 196], "shift": [195, 196, 197, 217, 218], "drop": [195, 196, 204, 227], "unhid": [195, 196], "1t1_ground_grid": 195, "arrang": 195, "minut": 195, "reload": [195, 203, 204, 216], "video": [195, 197], "anyth": 195, "learn": [196, 200, 217], "ok": 196, "now": [196, 204, 206, 217], "chiplibrari": 196, "menu": [196, 204, 207, 214, 217, 226], "still": [196, 211, 218], "mous": 196, "scroll": 196, "littl": 196, "esc": 196, "plan": 196, "fabric": [196, 208, 209], "essenti": [197, 222, 223], "power": 197, "confirm": 197, "del": 197, "flexibl": [197, 223], "highlight": [197, 198], "enter": 197, "mostli": [198, 206], "tutori": [198, 199, 216, 217], "introduct": 199, "topic": 199, "intuit": 200, "2nd": 200, "stackup": 200, "span": 200, "indium_bump": 200, "1t1_indium_bump": 200, "2b1_indium_bump": 200, "often": [200, 203, 217], "swap": 200, "electromagnet": 201, "tree": 202, "miscellan": [202, 204, 208, 216], "strictli": 202, "aptli": 202, "explan": [202, 203, 219], "wo": 202, "laid": 202, "encompass": 202, "plu": 202, "groud": 202, "formula": 202, "simplecross": 203, "len1": 203, "len2": 203, "cross_poli": 203, "simple_cross": 203, "scratch": 203, "especi": 203, "my_packag": [203, 204], "newchip1": [203, 206], "samplehold": [203, 214], "default_samplehold": [203, 214], "half_width": 203, "cross_cel": 203, "new_chip1": 203, "subfold": [204, 205], "f5": [204, 207, 217, 218], "my": 204, "my_el": 204, "myelement": [204, 205], "underscor": [204, 207, 215], "capit": 204, "ctrl": 204, "canva": 204, "discuss": [205, 212], "myelement2": 205, "multilay": 205, "myqubit": 205, "my_qubit": 205, "hide": 205, "follw": 205, "refpoint_nam": 206, "cap_refpoint": 206, "wn_port": 206, "wn_port_corn": 206, "port_b_corn": 206, "perhap": 206, "someel": 206, "refpoint_of_some_el": 206, "existing_ref": 206, "hard": 206, "port_name_corn": 206, "something_port": 206, "something_port_corn": 206, "wherev": 206, "easiest": [207, 215], "migrat": 207, "uninstal": 207, "safest": 207, "quirk": 207, "broken": 207, "reinstal": 207, "earlier": 207, "reloc": 207, "behind": 207, "tqdm": 207, "reduc": [208, 222], "effort": 208, "processor": 208, "instantli": 208, "exchang": 208, "qpu": 208, "assembl": 208, "trademark": 208, "page": [208, 215], "simplest": [209, 223], "instant": 209, "codebas": 209, "simulation_script": 209, "parti": 209, "mask_script": 209, "homebrew": 210, "brew": 210, "cask": 210, "becaus": [210, 217, 218], "app": 210, "finder": 210, "bugfix": 210, "stabil": 210, "17": 210, "29": 210, "microsoft": 210, "server": 210, "2022": 210, "talk": 210, "mental": 210, "appdata": [210, 220], "klayout_app": 210, "st": 211, "dynam": [211, 223], "sonoma": 211, "heavyweight": 211, "hw": 211, "bigsur": 211, "27": 211, "setuptool": 211, "_distutils_hack": 211, "v52": 211, "v57": 211, "sometim": [211, 217], "dir": 211, "binari": [211, 220, 221], "__path__": 211, "queri": 211, "sy": 211, "version_info": 211, "x86_64": 211, "modern": 211, "macbook": 211, "henc": [211, 224], "numpi": 211, "scipi": 211, "macosx_10_9_x86_64": 211, "fetch": 211, "macosx_10_9_arm64": 211, "question": 212, "idea": 212, "rf16": 214, "12000": 214, "layer_config_path": 214, "simpler": 214, "x_base_metal_gap_wo_grid": 214, "x_ground_grid_avoid": 214, "133": 214, "x_port": 214, "154": 214, "x_new_lay": 214, "999": 214, "new_lay": 214, "although": 214, "newli": 214, "default_layer_prop": 214, "mainli": [215, 223], "high": 215, "pictur": 215, "camelcas": 215, "adher": 215, "rubi": 215, "librair": 215, "variou": 215, "check_layer_prop": 215, "create_element_from_path": 215, "gdiff": 215, "get_klayout_python_info": 215, "netlist_as_graph": 215, "oas2dxf": 215, "dxf": 215, "rm": 215, "rd": 215, "element_path": 215, "And": 215, "incorpor": 215, "pycharm": 215, "studio": 215, "vim": 215, "neovim": 215, "demo_placing_a_pcel": 217, "icon": 217, "plai": 217, "exclam": 217, "task": [217, 221, 227], "toggl": 217, "breakpoint": 217, "red": 217, "f9": 217, "stage": 217, "pop": 217, "cancel": 217, "asterisk": 217, "caught": 217, "unrespons": 217, "heavi": 217, "though": 217, "demo_pya_bas": 217, "test_wgc_airbridg": 217, "photomask": 218, "product": 218, "effici": [218, 221], "observ": 218, "multiprocess": 218, "test_mask": 218, "de1": 218, "roughli": 218, "logging_setup": 218, "spcifi": 218, "de2": 218, "5700": 218, "dt1": 218, "qf1": 218, "my_chip": 218, "mcf": 218, "proper": 218, "complic": [218, 221, 227], "mdemo": 218, "ch2": 218, "45000": 218, "30000": 218, "ch1": 218, "sx1": 218, "jt1": 218, "ac1": 218, "st1": 218, "jt2": 218, "65000": 218, "interest": 218, "fragment": 218, "fragmet": 218, "centerd": 218, "exploit": 218, "slurm": [219, 221], "workload": [219, 221], "password": 219, "openmpi": 219, "install_softwar": 219, "mpi": [219, 221], "machin": [219, 221], "send": 219, "singularity_path": 219, "bash": 219, "sbatch_paramet": [219, 221], "kqc_remote_account": [219, 221], "sim_1": 219, "sim_2": 219, "sim_n": 219, "job": 219, "state": [219, 221], "sim_i_tmp_fold": 219, "nohup_runid": 219, "runid": 219, "watch": 219, "cat": 219, "liner": 220, "initialis": 220, "admin": 220, "priviledg": 220, "elmerfem": [221, 224], "elmercsc": [221, 224], "blog": 221, "suffic": 221, "period": 221, "waveguides_sim_elm": 221, "elmer_help": 221, "gmsh_helper": 221, "sif": 221, "capacitancematrix": 221, "electric_potenti": 221, "pvsm": 221, "waveguides_n_guides_1": 221, "waveguides_n_guides_2": 221, "prepar": 221, "n_worker": 221, "elmer_n_process": 221, "thread": 221, "openmp": 221, "elmer_n_thread": 221, "relationship": 221, "independentprocess": 221, "parallelizationsecond": 221, "ofparallel": 221, "sequenti": 221, "worker": 221, "floor": 221, "run_gmsh_gui": 221, "run_elmergrid": 221, "run_elm": 221, "run_paraview": 221, "omp": 221, "gmsh_n_thread": 221, "bsd": 221, "benefit": 221, "multithread": 221, "sbatch": 221, "max_threads_per_nod": 221, "max": 221, "elmer_mem": 221, "64g": 221, "elmer_tim": 221, "00": 221, "gmsh_mem": 221, "alloc": 221, "gmsh_time": 221, "env_setup_cmd": 221, "project_0": 221, "bill": 221, "simulation_mesh": 221, "afterok": 221, "sent": 221, "queue": 221, "scatter": 222, "snp": 222, "touchston": 222, "s1p": 222, "s2p": 222, "s3p": 222, "forth": 222, "estim": 222, "mutual": 222, "c_i_j": 222, "c_i_i": 222, "lifetim": 222, "eig": 222, "eigenvalu": 222, "export_epr": 222, "post_process_script": 222, "_epr": 222, "csv": 222, "offer": 222, "transvers": 222, "remain": 222, "accuraci": 222, "logic": 222, "cpw_cross_section_sim": 222, "waveguides_sim_cross_sect": 222, "swissmon_epr_sim": 222, "focus": 223, "distinguish": 223, "snippet": 223, "refp": 223, "mandatori": [223, 224], "100um": 223, "port_2": 223, "port_2_corn": 223, "port_3": 223, "port_3_corn": 223, "multipurpos": 223, "airbridge_flyov": 223, "joint": 223, "parameter": [223, 224], "purpl": 223, "troubl": 223, "port_cplr0": 223, "port_cplr1": 223, "port_cplr2": 223, "revert": 223, "swissmonsimul": 223, "port_cplr0_corn": 223, "port_cplr1_corn": 223, "port_cplr2_corn": 223, "squid_port_squid_a": 223, "squid_port_squid_b": 223, "portion": 223, "variat": 223, "procedur": 223, "eas": 223, "arm_length_500": 223, "gap_sweep": 223, "ansys_execut": 224, "swissmon_simulation_output": 224, "dir_path": 224, "export_paramet": 224, "ironpython": 224, "gdsii": 224, "meta": 224, "occurr": 224, "incomplet": 224, "manner": 224, "extractor": 225, "abil": 225, "until": 225, "guidanc": 225, "particip": 225, "summari": 226, "parameteriz": 226, "primit": 226, "emb": 226, "onto": 226, "archiv": 226, "traceabl": 226, "manipul": 227, "browser": 227}, "objects": {"": [[1, 0, 0, "-", "kqcircuits"]], "kqcircuits": [[2, 0, 0, "-", "chips"], [27, 0, 0, "-", "defaults"], [28, 0, 0, "-", "elements"], [70, 0, 0, "-", "junctions"], [78, 0, 0, "-", "klayout_view"], [79, 0, 0, "-", "layer_cluster"], [80, 0, 0, "-", "layer_config"], [83, 0, 0, "-", "masks"], [88, 0, 0, "-", "pya_resolver"], [89, 0, 0, "-", "qubits"], [96, 0, 0, "-", "run"], [97, 0, 0, "-", "simulations"], [142, 0, 0, "-", "test_structures"], [152, 0, 0, "-", "util"]], "kqcircuits.chips": [[3, 0, 0, "-", "airbridge_crossings"], [4, 0, 0, "-", "airbridge_dc_test"], [5, 0, 0, "-", "chip"], [6, 0, 0, "-", "crossing_twoface"], [7, 0, 0, "-", "daisy_woven"], [8, 0, 0, "-", "dc_test"], [9, 0, 0, "-", "demo"], [10, 0, 0, "-", "demo_twoface"], [11, 0, 0, "-", "empty"], [12, 0, 0, "-", "junction_test"], [13, 0, 0, "-", "junction_test2"], [14, 0, 0, "-", "launchers"], [15, 0, 0, "-", "lithography_test"], [16, 0, 0, "-", "lithography_test_twoface"], [17, 0, 0, "-", "munch_qubits"], [18, 0, 0, "-", "quality_factor"], [19, 0, 0, "-", "quality_factor_twoface"], [20, 0, 0, "-", "sample_holder_test"], [21, 0, 0, "-", "shaping"], [22, 0, 0, "-", "simple"], [23, 0, 0, "-", "single_xmons"], [24, 0, 0, "-", "stripes"], [25, 0, 0, "-", "tsv_test"], [26, 0, 0, "-", "xmons_direct_coupling"]], "kqcircuits.chips.airbridge_crossings": [[3, 1, 1, "", "AirbridgeCrossings"]], "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings": [[3, 2, 1, "", "build"]], "kqcircuits.chips.airbridge_dc_test": [[4, 1, 1, "", "AirbridgeDcTest"]], "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest": [[4, 2, 1, "", "build"]], "kqcircuits.chips.chip": [[5, 1, 1, "", "Chip"]], "kqcircuits.chips.chip.Chip": [[5, 3, 1, "", "LIBRARY_DESCRIPTION"], [5, 3, 1, "", "LIBRARY_NAME"], [5, 3, 1, "", "LIBRARY_PATH"], [5, 2, 1, "", "can_create_from_shape_impl"], [5, 2, 1, "", "display_text_impl"], [5, 2, 1, "", "get_box"], [5, 2, 1, "", "get_filter_regions"], [5, 2, 1, "", "get_ground_bump_locations"], [5, 2, 1, "", "get_ground_tsv_locations"], [5, 2, 1, "", "get_launcher_assignments"], [5, 2, 1, "", "insert_filtered_elements"], [5, 2, 1, "", "make_grid_locations"], [5, 2, 1, "", "merge_layout_layers"], [5, 2, 1, "", "merge_layout_layers_on_face"], [5, 2, 1, "", "parameters_from_shape_impl"], [5, 2, 1, "", "post_build"], [5, 2, 1, "", "produce_frame"], [5, 2, 1, "", "produce_ground_grid"], [5, 2, 1, "", "produce_ground_on_face_grid"], [5, 2, 1, "", "produce_junction_tests"], [5, 2, 1, "", "produce_launchers"], [5, 2, 1, "", "produce_n_launchers"], [5, 2, 1, "", "produce_opt_lit_tests"], [5, 2, 1, "", "produce_structures"], [5, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.chips.crossing_twoface": [[6, 1, 1, "", "CrossingTwoface"]], "kqcircuits.chips.crossing_twoface.CrossingTwoface": [[6, 2, 1, "", "build"]], "kqcircuits.chips.daisy_woven": [[7, 1, 1, "", "DaisyWoven"]], "kqcircuits.chips.daisy_woven.DaisyWoven": [[7, 2, 1, "", "build"]], "kqcircuits.chips.dc_test": [[8, 1, 1, "", "DcTest"]], "kqcircuits.chips.dc_test.DcTest": [[8, 2, 1, "", "build"]], "kqcircuits.chips.demo": [[9, 1, 1, "", "Demo"]], "kqcircuits.chips.demo.Demo": [[9, 2, 1, "", "build"], [9, 2, 1, "", "produce_control_lines"], [9, 2, 1, "", "produce_coupler"], [9, 2, 1, "", "produce_couplers"], [9, 2, 1, "", "produce_driveline"], [9, 2, 1, "", "produce_fluxline"], [9, 2, 1, "", "produce_junction_tests"], [9, 2, 1, "", "produce_probeline"], [9, 2, 1, "", "produce_probelines"], [9, 2, 1, "", "produce_qubit"], [9, 2, 1, "", "produce_qubits"], [9, 2, 1, "", "produce_readout_structure"], [9, 2, 1, "", "produce_readout_structures"]], "kqcircuits.chips.demo_twoface": [[10, 1, 1, "", "DemoTwoface"]], "kqcircuits.chips.demo_twoface.DemoTwoface": [[10, 2, 1, "", "build"], [10, 2, 1, "", "produce_control_lines"], [10, 2, 1, "", "produce_coupler"], [10, 2, 1, "", "produce_couplers"], [10, 2, 1, "", "produce_driveline"], [10, 2, 1, "", "produce_fluxline"], [10, 2, 1, "", "produce_probeline"], [10, 2, 1, "", "produce_probelines"], [10, 2, 1, "", "produce_qubit"], [10, 2, 1, "", "produce_qubits"], [10, 2, 1, "", "produce_readout_structure"], [10, 2, 1, "", "produce_readout_structures"]], "kqcircuits.chips.empty": [[11, 1, 1, "", "Empty"]], "kqcircuits.chips.empty.Empty": [[11, 2, 1, "", "build"], [11, 2, 1, "", "make_empty_area"]], "kqcircuits.chips.junction_test": [[12, 1, 1, "", "JunctionTest"]], "kqcircuits.chips.junction_test.JunctionTest": [[12, 2, 1, "", "build"]], "kqcircuits.chips.junction_test2": [[13, 1, 1, "", "JunctionTest2"]], "kqcircuits.chips.junction_test2.JunctionTest2": [[13, 2, 1, "", "build"]], "kqcircuits.chips.launchers": [[14, 1, 1, "", "Launchers"]], "kqcircuits.chips.launchers.Launchers": [[14, 2, 1, "", "build"]], "kqcircuits.chips.lithography_test": [[15, 1, 1, "", "LithographyTest"]], "kqcircuits.chips.lithography_test.LithographyTest": [[15, 2, 1, "", "build"], [15, 2, 1, "", "create_pattern"]], "kqcircuits.chips.lithography_test_twoface": [[16, 1, 1, "", "LithographyTestTwoface"]], "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface": [[16, 2, 1, "", "build"], [16, 2, 1, "", "create_pattern"]], "kqcircuits.chips.munch_qubits": [[17, 1, 1, "", "MunchQubits"]], "kqcircuits.chips.munch_qubits.MunchQubits": [[17, 2, 1, "", "build"], [17, 2, 1, "", "produce_coupler"], [17, 2, 1, "", "produce_drivelines"], [17, 2, 1, "", "produce_probeline"], [17, 2, 1, "", "produce_qubits"], [17, 2, 1, "", "produce_readout_resonators"]], "kqcircuits.chips.quality_factor": [[18, 1, 1, "", "QualityFactor"]], "kqcircuits.chips.quality_factor.QualityFactor": [[18, 2, 1, "", "build"]], "kqcircuits.chips.quality_factor_twoface": [[19, 1, 1, "", "QualityFactorTwoface"]], "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface": [[19, 2, 1, "", "build"], [19, 2, 1, "", "produce_resonator"]], "kqcircuits.chips.sample_holder_test": [[20, 1, 1, "", "SampleHolderTest"]], "kqcircuits.chips.sample_holder_test.SampleHolderTest": [[20, 2, 1, "", "build"]], "kqcircuits.chips.shaping": [[21, 1, 1, "", "Shaping"]], "kqcircuits.chips.shaping.Shaping": [[21, 2, 1, "", "build"]], "kqcircuits.chips.simple": [[22, 1, 1, "", "Simple"]], "kqcircuits.chips.simple.Simple": [[22, 2, 1, "", "build"]], "kqcircuits.chips.single_xmons": [[23, 1, 1, "", "SingleXmons"]], "kqcircuits.chips.single_xmons.SingleXmons": [[23, 2, 1, "", "build"], [23, 3, 1, "", "launchers"], [23, 3, 1, "", "qubits_refpoints"]], "kqcircuits.chips.stripes": [[24, 1, 1, "", "Stripes"]], "kqcircuits.chips.stripes.Stripes": [[24, 2, 1, "", "build"]], "kqcircuits.chips.tsv_test": [[25, 1, 1, "", "TsvTest"]], "kqcircuits.chips.tsv_test.TsvTest": [[25, 2, 1, "", "build"], [25, 2, 1, "", "create_xsection"]], "kqcircuits.chips.xmons_direct_coupling": [[26, 1, 1, "", "XMonsDirectCoupling"]], "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling": [[26, 2, 1, "", "build"], [26, 2, 1, "", "produce_qubits"], [26, 2, 1, "", "produce_readout_resonator"]], "kqcircuits.elements": [[29, 0, 0, "-", "airbridge_connection"], [30, 0, 0, "-", "airbridges"], [34, 0, 0, "-", "capacitive_x_coupler"], [35, 0, 0, "-", "chip_frame"], [36, 0, 0, "-", "circular_capacitor"], [37, 0, 0, "-", "element"], [38, 0, 0, "-", "finger_capacitor_square"], [39, 0, 0, "-", "finger_capacitor_taper"], [40, 0, 0, "-", "flip_chip_connectors"], [44, 0, 0, "-", "fluxlines"], [48, 0, 0, "-", "hanger_resonator"], [49, 0, 0, "-", "launcher"], [50, 0, 0, "-", "launcher_dc"], [51, 0, 0, "-", "markers"], [55, 0, 0, "-", "meander"], [56, 0, 0, "-", "quarter_wave_cpw_resonator"], [57, 0, 0, "-", "smooth_capacitor"], [58, 0, 0, "-", "spiral_capacitor"], [59, 0, 0, "-", "spiral_resonator_polygon"], [60, 0, 0, "-", "tsvs"], [64, 0, 0, "-", "waveguide_composite"], [65, 0, 0, "-", "waveguide_coplanar"], [66, 0, 0, "-", "waveguide_coplanar_curved"], [67, 0, 0, "-", "waveguide_coplanar_splitter"], [68, 0, 0, "-", "waveguide_coplanar_straight"], [69, 0, 0, "-", "waveguide_coplanar_taper"]], "kqcircuits.elements.airbridge_connection": [[29, 1, 1, "", "AirbridgeConnection"]], "kqcircuits.elements.airbridge_connection.AirbridgeConnection": [[29, 2, 1, "", "build"]], "kqcircuits.elements.airbridges": [[31, 0, 0, "-", "airbridge"], [32, 0, 0, "-", "airbridge_multi_face"], [33, 0, 0, "-", "airbridge_rectangular"]], "kqcircuits.elements.airbridges.airbridge": [[31, 1, 1, "", "Airbridge"]], "kqcircuits.elements.airbridges.airbridge.Airbridge": [[31, 2, 1, "", "create"], [31, 3, 1, "", "default_type"], [31, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[32, 1, 1, "", "AirbridgeMultiFace"]], "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace": [[32, 2, 1, "", "build"], [32, 3, 1, "", "default_type"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[33, 1, 1, "", "AirbridgeRectangular"]], "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular": [[33, 2, 1, "", "build"], [33, 3, 1, "", "default_type"]], "kqcircuits.elements.capacitive_x_coupler": [[34, 1, 1, "", "CapacitiveXCoupler"]], "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler": [[34, 2, 1, "", "build"], [34, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.chip_frame": [[35, 1, 1, "", "ChipFrame"]], "kqcircuits.elements.chip_frame.ChipFrame": [[35, 2, 1, "", "build"]], "kqcircuits.elements.circular_capacitor": [[36, 1, 1, "", "CircularCapacitor"]], "kqcircuits.elements.circular_capacitor.CircularCapacitor": [[36, 2, 1, "", "build"], [36, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.element": [[37, 1, 1, "", "Element"], [37, 4, 1, "", "get_refpoints"], [37, 4, 1, "", "insert_cell_into"], [37, 4, 1, "", "parameter_order_key"], [37, 4, 1, "", "resolve_face"]], "kqcircuits.elements.element.Element": [[37, 3, 1, "", "LIBRARY_DESCRIPTION"], [37, 3, 1, "", "LIBRARY_NAME"], [37, 3, 1, "", "LIBRARY_PATH"], [37, 2, 1, "", "add_element"], [37, 2, 1, "", "add_port"], [37, 2, 1, "", "add_protection"], [37, 2, 1, "", "build"], [37, 2, 1, "", "copy_port"], [37, 2, 1, "", "create"], [37, 2, 1, "", "create_cell_from_shape"], [37, 2, 1, "", "create_subtype"], [37, 2, 1, "", "create_with_refpoints"], [37, 2, 1, "", "display_text_impl"], [37, 2, 1, "", "etch_opposite_face_impl"], [37, 2, 1, "", "face"], [37, 2, 1, "", "get_layer"], [37, 2, 1, "", "get_refpoints"], [37, 2, 1, "", "get_schema"], [37, 2, 1, "", "get_sim_ports"], [37, 2, 1, "", "insert_cell"], [37, 2, 1, "", "pcell_params_by_name"], [37, 2, 1, "", "post_build"], [37, 2, 1, "", "produce_impl"], [37, 2, 1, "", "raise_error_on_cell"]], "kqcircuits.elements.finger_capacitor_square": [[38, 1, 1, "", "FingerCapacitorSquare"], [38, 4, 1, "", "eval_a2"], [38, 4, 1, "", "eval_b2"]], "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare": [[38, 2, 1, "", "add_waveguides"], [38, 2, 1, "", "build"], [38, 2, 1, "", "can_create_from_shape_impl"], [38, 2, 1, "", "cut_region"], [38, 2, 1, "", "finger_area_length"], [38, 2, 1, "", "finger_area_width"], [38, 2, 1, "", "get_ground_region"], [38, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.finger_capacitor_taper": [[39, 1, 1, "", "FingerCapacitorTaper"]], "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper": [[39, 2, 1, "", "build"], [39, 2, 1, "", "can_create_from_shape_impl"]], "kqcircuits.elements.flip_chip_connectors": [[41, 0, 0, "-", "flip_chip_connector"], [42, 0, 0, "-", "flip_chip_connector_dc"], [43, 0, 0, "-", "flip_chip_connector_rf"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[41, 1, 1, "", "FlipChipConnector"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector": [[41, 2, 1, "", "create"], [41, 3, 1, "", "default_type"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[42, 1, 1, "", "FlipChipConnectorDc"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc": [[42, 2, 1, "", "build"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[43, 1, 1, "", "FlipChipConnectorRf"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf": [[43, 2, 1, "", "build"], [43, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.fluxlines": [[45, 0, 0, "-", "fluxline"], [46, 0, 0, "-", "fluxline_standard"], [47, 0, 0, "-", "fluxline_straight"]], "kqcircuits.elements.fluxlines.fluxline": [[45, 1, 1, "", "Fluxline"]], "kqcircuits.elements.fluxlines.fluxline.Fluxline": [[45, 2, 1, "", "create"], [45, 3, 1, "", "default_type"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[46, 1, 1, "", "FluxlineStandard"]], "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard": [[46, 2, 1, "", "build"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[47, 1, 1, "", "FluxlineStraight"]], "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight": [[47, 2, 1, "", "build"]], "kqcircuits.elements.hanger_resonator": [[48, 1, 1, "", "HangerResonator"]], "kqcircuits.elements.hanger_resonator.HangerResonator": [[48, 2, 1, "", "build"], [48, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.launcher": [[49, 1, 1, "", "Launcher"]], "kqcircuits.elements.launcher.Launcher": [[49, 2, 1, "", "build"]], "kqcircuits.elements.launcher_dc": [[50, 1, 1, "", "LauncherDC"]], "kqcircuits.elements.launcher_dc.LauncherDC": [[50, 2, 1, "", "build"]], "kqcircuits.elements.markers": [[52, 0, 0, "-", "marker"], [53, 0, 0, "-", "marker_standard"], [54, 0, 0, "-", "mask_marker_fc"]], "kqcircuits.elements.markers.marker": [[52, 1, 1, "", "Marker"]], "kqcircuits.elements.markers.marker.Marker": [[52, 2, 1, "", "create"], [52, 3, 1, "", "default_type"], [52, 2, 1, "", "get_marker_locations"], [52, 2, 1, "", "get_marker_region"], [52, 2, 1, "", "produce_geometry"]], "kqcircuits.elements.markers.marker_standard": [[53, 1, 1, "", "MarkerStandard"]], "kqcircuits.elements.markers.marker_standard.MarkerStandard": [[53, 2, 1, "", "build"]], "kqcircuits.elements.markers.mask_marker_fc": [[54, 1, 1, "", "MaskMarkerFc"]], "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc": [[54, 2, 1, "", "build"], [54, 2, 1, "", "create_cross"], [54, 2, 1, "", "get_marker_locations"], [54, 2, 1, "", "get_marker_region"]], "kqcircuits.elements.meander": [[55, 1, 1, "", "Meander"]], "kqcircuits.elements.meander.Meander": [[55, 2, 1, "", "build"], [55, 2, 1, "", "can_create_from_shape_impl"], [55, 2, 1, "", "parameters_from_shape_impl"]], "kqcircuits.elements.quarter_wave_cpw_resonator": [[56, 1, 1, "", "QuarterWaveCpwResonator"]], "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator": [[56, 2, 1, "", "build"], [56, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.smooth_capacitor": [[57, 1, 1, "", "SmoothCapacitor"], [57, 4, 1, "", "segment_points"], [57, 4, 1, "", "unit_vector"]], "kqcircuits.elements.smooth_capacitor.SmoothCapacitor": [[57, 2, 1, "", "build"], [57, 2, 1, "", "can_create_from_shape_impl"], [57, 2, 1, "", "finger_polygon"], [57, 2, 1, "", "get_finger_regions"], [57, 2, 1, "", "get_sim_ports"], [57, 2, 1, "", "insert_wg_joint"], [57, 2, 1, "", "middle_gap_fill"], [57, 2, 1, "", "super_smoothen_region"], [57, 2, 1, "", "t_poly"]], "kqcircuits.elements.spiral_capacitor": [[58, 1, 1, "", "SpiralCapacitor"]], "kqcircuits.elements.spiral_capacitor.SpiralCapacitor": [[58, 2, 1, "", "build"], [58, 2, 1, "", "can_create_from_shape_impl"], [58, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.spiral_resonator_polygon": [[59, 1, 1, "", "SpiralResonatorPolygon"], [59, 4, 1, "", "rectangular_parameters"]], "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon": [[59, 2, 1, "", "build"]], "kqcircuits.elements.tsvs": [[61, 0, 0, "-", "tsv"], [62, 0, 0, "-", "tsv_ellipse"], [63, 0, 0, "-", "tsv_standard"]], "kqcircuits.elements.tsvs.tsv": [[61, 1, 1, "", "Tsv"]], "kqcircuits.elements.tsvs.tsv.Tsv": [[61, 2, 1, "", "create"], [61, 3, 1, "", "default_type"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[62, 1, 1, "", "TsvEllipse"]], "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse": [[62, 2, 1, "", "create_tsv_connector"], [62, 2, 1, "", "produce_impl"]], "kqcircuits.elements.tsvs.tsv_standard": [[63, 1, 1, "", "TsvStandard"]], "kqcircuits.elements.tsvs.tsv_standard.TsvStandard": [[63, 2, 1, "", "build"]], "kqcircuits.elements.waveguide_composite": [[64, 1, 1, "", "Node"], [64, 1, 1, "", "WaveguideComposite"], [64, 4, 1, "", "produce_fixed_length_bend"]], "kqcircuits.elements.waveguide_composite.Node": [[64, 3, 1, "", "align"], [64, 3, 1, "", "angle"], [64, 2, 1, "", "deserialize"], [64, 3, 1, "", "element"], [64, 3, 1, "", "inst_name"], [64, 3, 1, "", "length_before"], [64, 3, 1, "", "length_increment"], [64, 3, 1, "", "meander_direction"], [64, 2, 1, "", "nodes_from_string"], [64, 3, 1, "", "position"]], "kqcircuits.elements.waveguide_composite.WaveguideComposite": [[64, 2, 1, "", "build"], [64, 2, 1, "", "check_node_type"], [64, 2, 1, "", "coerce_parameters_impl"], [64, 2, 1, "", "create"], [64, 2, 1, "", "get_segment_cells"], [64, 2, 1, "", "get_segment_lengths"], [64, 2, 1, "", "produce_fixed_length_waveguide"], [64, 2, 1, "", "snap_point"]], "kqcircuits.elements.waveguide_coplanar": [[65, 1, 1, "", "WaveguideCoplanar"]], "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar": [[65, 2, 1, "", "build"], [65, 2, 1, "", "can_create_from_shape_impl"], [65, 2, 1, "", "get_corner_data"], [65, 2, 1, "", "is_continuous"], [65, 2, 1, "", "parameters_from_shape_impl"], [65, 2, 1, "", "produce_end_termination"], [65, 2, 1, "", "produce_waveguide"], [65, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.elements.waveguide_coplanar_curved": [[66, 1, 1, "", "WaveguideCoplanarCurved"], [66, 4, 1, "", "arc"]], "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved": [[66, 2, 1, "", "build"], [66, 2, 1, "", "build_geometry"], [66, 2, 1, "", "coerce_parameters_impl"], [66, 2, 1, "", "create_curve_arcs"], [66, 2, 1, "", "produce_curve_termination"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[67, 1, 1, "", "WaveguideCoplanarSplitter"], [67, 4, 1, "", "t_cross_parameters"]], "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter": [[67, 2, 1, "", "build"]], "kqcircuits.elements.waveguide_coplanar_straight": [[68, 1, 1, "", "WaveguideCoplanarStraight"]], "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight": [[68, 2, 1, "", "add_waveguide_path"], [68, 2, 1, "", "build"], [68, 2, 1, "", "build_geometry"]], "kqcircuits.elements.waveguide_coplanar_taper": [[69, 1, 1, "", "WaveguideCoplanarTaper"]], "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper": [[69, 2, 1, "", "build"]], "kqcircuits.junctions": [[71, 0, 0, "-", "junction"], [72, 0, 0, "-", "manhattan"], [73, 0, 0, "-", "manhattan_single_junction"], [74, 0, 0, "-", "no_squid"], [75, 0, 0, "-", "sim"], [76, 0, 0, "-", "squid"], [77, 0, 0, "-", "super_inductor"]], "kqcircuits.junctions.junction": [[71, 1, 1, "", "Junction"]], "kqcircuits.junctions.junction.Junction": [[71, 3, 1, "", "LIBRARY_DESCRIPTION"], [71, 3, 1, "", "LIBRARY_NAME"], [71, 3, 1, "", "LIBRARY_PATH"], [71, 2, 1, "", "create"], [71, 3, 1, "", "default_type"]], "kqcircuits.junctions.manhattan": [[72, 1, 1, "", "Manhattan"]], "kqcircuits.junctions.manhattan.Manhattan": [[72, 2, 1, "", "build"], [72, 2, 1, "", "produce_contact_pads"], [72, 2, 1, "", "produce_manhattan_squid"], [72, 2, 1, "", "produce_tp_large"], [72, 2, 1, "", "produce_tp_small"]], "kqcircuits.junctions.manhattan_single_junction": [[73, 1, 1, "", "ManhattanSingleJunction"]], "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction": [[73, 2, 1, "", "build"], [73, 2, 1, "", "produce_manhattan_junction"]], "kqcircuits.junctions.no_squid": [[74, 1, 1, "", "NoSquid"]], "kqcircuits.junctions.no_squid.NoSquid": [[74, 2, 1, "", "build"]], "kqcircuits.junctions.sim": [[75, 1, 1, "", "Sim"]], "kqcircuits.junctions.sim.Sim": [[75, 2, 1, "", "build"]], "kqcircuits.junctions.squid": [[76, 1, 1, "", "Squid"]], "kqcircuits.junctions.super_inductor": [[77, 1, 1, "", "SuperInductor"]], "kqcircuits.junctions.super_inductor.SuperInductor": [[77, 2, 1, "", "build"], [77, 2, 1, "", "produce_super_inductor"]], "kqcircuits.klayout_view": [[78, 1, 1, "", "KLayoutView"], [78, 6, 1, "", "MissingUILibraryException"], [78, 4, 1, "", "resolve_default_layer_info"]], "kqcircuits.klayout_view.KLayoutView": [[78, 5, 1, "", "active_cell"], [78, 2, 1, "", "add_default_layers"], [78, 5, 1, "", "cell_view"], [78, 2, 1, "", "clear_layers"], [78, 2, 1, "", "close"], [78, 2, 1, "", "create_top_cell"], [78, 2, 1, "", "export_all_layers_bitmap"], [78, 2, 1, "", "export_layers_bitmaps"], [78, 2, 1, "", "export_pcell_png"], [78, 2, 1, "", "focus"], [78, 2, 1, "", "get_active_cell"], [78, 2, 1, "", "get_active_cell_view"], [78, 2, 1, "", "get_active_layout"], [78, 2, 1, "", "get_pixels"], [78, 2, 1, "", "insert_cell"], [78, 5, 1, "", "layout"], [78, 3, 1, "", "layout_view"], [78, 2, 1, "", "load_layout"], [78, 2, 1, "", "save_layout"], [78, 2, 1, "", "show"], [78, 5, 1, "", "top_cell"]], "kqcircuits.layer_cluster": [[79, 1, 1, "", "LayerCluster"]], "kqcircuits.layer_cluster.LayerCluster": [[79, 2, 1, "", "all_layers"], [79, 3, 1, "", "extra_layers"], [79, 3, 1, "", "face_id"], [79, 3, 1, "", "main_layers"]], "kqcircuits.layer_config": [[81, 0, 0, "-", "default_layer_config"], [82, 0, 0, "-", "example_layer_config"]], "kqcircuits.masks": [[84, 0, 0, "-", "mask_export"], [85, 0, 0, "-", "mask_layout"], [86, 0, 0, "-", "mask_set"], [87, 0, 0, "-", "multi_face_mask_layout"]], "kqcircuits.masks.mask_export": [[84, 4, 1, "", "export_bitmaps"], [84, 4, 1, "", "export_chip"], [84, 4, 1, "", "export_designs"], [84, 4, 1, "", "export_docs"], [84, 4, 1, "", "export_junction_parameters"], [84, 4, 1, "", "export_mask"], [84, 4, 1, "", "export_mask_set"], [84, 4, 1, "", "export_masks_of_face"], [84, 4, 1, "", "get_mask_layout_full_name"]], "kqcircuits.masks.mask_layout": [[85, 1, 1, "", "MaskLayout"]], "kqcircuits.masks.mask_layout.MaskLayout": [[85, 2, 1, "", "add_chips_map"], [85, 3, 1, "", "added_chips"], [85, 3, 1, "", "align_to"], [85, 3, 1, "", "bbox_face_ids"], [85, 2, 1, "", "build"], [85, 3, 1, "", "chip_box_offset"], [85, 3, 1, "", "chip_copies"], [85, 3, 1, "", "chip_size"], [85, 3, 1, "", "chip_trans"], [85, 3, 1, "", "chips_map"], [85, 3, 1, "", "chips_map_legend"], [85, 3, 1, "", "chips_map_offset"], [85, 3, 1, "", "chips_placed_by_position_label"], [85, 3, 1, "", "covered_region_excluded_layers"], [85, 3, 1, "", "dice_width"], [85, 3, 1, "", "edge_clearance"], [85, 3, 1, "", "extra_chips"], [85, 3, 1, "", "extra_id"], [85, 2, 1, "", "face"], [85, 3, 1, "", "face_id"], [85, 2, 1, "", "generate_and_insert_chip_copy_labels"], [85, 2, 1, "", "generate_position_label"], [85, 2, 1, "", "insert_chip_copy_labels"], [85, 2, 1, "", "insert_chips"], [85, 3, 1, "", "layers_to_mask"], [85, 3, 1, "", "layout"], [85, 3, 1, "", "mask_export_density_layers"], [85, 3, 1, "", "mask_export_layers"], [85, 3, 1, "", "mask_marker_offset"], [85, 3, 1, "", "mask_markers_dict"], [85, 3, 1, "", "mask_name_box_margin"], [85, 3, 1, "", "mask_name_offset"], [85, 3, 1, "", "mask_name_scale"], [85, 3, 1, "", "mask_text_scale"], [85, 3, 1, "", "mirror_labels"], [85, 3, 1, "", "name"], [85, 2, 1, "", "position_label_to_two_coordinates"], [85, 3, 1, "", "remove_chips"], [85, 3, 1, "", "submasks"], [85, 3, 1, "", "text_margin"], [85, 3, 1, "", "top_cell"], [85, 2, 1, "", "two_coordinates_to_position_label"], [85, 3, 1, "", "version"], [85, 3, 1, "", "wafer_bottom_flat_length"], [85, 3, 1, "", "wafer_center"], [85, 3, 1, "", "wafer_rad"], [85, 3, 1, "", "wafer_top_flat_length"], [85, 3, 1, "", "with_grid"]], "kqcircuits.masks.mask_set": [[86, 1, 1, "", "MaskSet"]], "kqcircuits.masks.mask_set.MaskSet": [[86, 2, 1, "", "add_chip"], [86, 2, 1, "", "add_mask_layout"], [86, 2, 1, "", "add_multi_face_mask_layout"], [86, 2, 1, "", "build"], [86, 2, 1, "", "chips_map_from_box_map"], [86, 3, 1, "", "chips_map_legend"], [86, 2, 1, "", "export"], [86, 3, 1, "", "export_drc"], [86, 3, 1, "", "export_path"], [86, 3, 1, "", "layout"], [86, 3, 1, "", "mask_export_layers"], [86, 3, 1, "", "mask_layouts"], [86, 3, 1, "", "name"], [86, 3, 1, "", "used_chips"], [86, 3, 1, "", "version"], [86, 3, 1, "", "view"], [86, 3, 1, "", "with_grid"]], "kqcircuits.masks.multi_face_mask_layout": [[87, 1, 1, "", "MultiFaceMaskLayout"]], "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout": [[87, 2, 1, "", "add_chips_map"], [87, 3, 1, "", "face_ids"], [87, 3, 1, "", "mask_layouts"]], "kqcircuits.pya_resolver": [[88, 4, 1, "", "is_standalone_session"], [88, 4, 1, "", "klayout_executable_command"]], "kqcircuits.qubits": [[90, 0, 0, "-", "circular_transmon_single_island"], [91, 0, 0, "-", "concentric_transmon"], [92, 0, 0, "-", "double_pads"], [93, 0, 0, "-", "double_pads_splines"], [94, 0, 0, "-", "qubit"], [95, 0, 0, "-", "swissmon"]], "kqcircuits.qubits.circular_transmon_single_island": [[90, 1, 1, "", "CircularTransmonSingleIsland"]], "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland": [[90, 2, 1, "", "build"], [90, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.concentric_transmon": [[91, 1, 1, "", "ConcentricTransmon"]], "kqcircuits.qubits.concentric_transmon.ConcentricTransmon": [[91, 2, 1, "", "build"], [91, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.double_pads": [[92, 1, 1, "", "DoublePads"]], "kqcircuits.qubits.double_pads.DoublePads": [[92, 2, 1, "", "build"], [92, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.double_pads_splines": [[93, 1, 1, "", "DoublePadsSplines"]], "kqcircuits.qubits.qubit": [[94, 1, 1, "", "Qubit"]], "kqcircuits.qubits.qubit.Qubit": [[94, 3, 1, "", "LIBRARY_DESCRIPTION"], [94, 3, 1, "", "LIBRARY_NAME"], [94, 3, 1, "", "LIBRARY_PATH"], [94, 2, 1, "", "produce_fluxline"], [94, 2, 1, "", "produce_squid"]], "kqcircuits.qubits.swissmon": [[95, 1, 1, "", "Swissmon"]], "kqcircuits.qubits.swissmon.Swissmon": [[95, 2, 1, "", "build"], [95, 2, 1, "", "get_sim_ports"]], "kqcircuits.run": [[96, 4, 1, "", "argument_parser"], [96, 4, 1, "", "run"], [96, 4, 1, "", "run_kqc"]], "kqcircuits.simulations": [[98, 0, 0, "-", "airbridges_sim"], [99, 0, 0, "-", "cross_section_simulation"], [100, 0, 0, "-", "empty_simulation"], [111, 0, 0, "-", "export"], [133, 0, 0, "-", "partition_region"], [134, 0, 0, "-", "port"], [135, 0, 0, "-", "post_process"], [136, 0, 0, "-", "simulation"], [137, 0, 0, "-", "single_element_simulation"], [138, 0, 0, "-", "single_xmons_full_chip_sim"], [139, 0, 0, "-", "waveguides_sim"], [140, 0, 0, "-", "xmons_direct_coupling_full_chip_sim"], [141, 0, 0, "-", "xmons_direct_coupling_sim"]], "kqcircuits.simulations.airbridges_sim": [[98, 1, 1, "", "AirbridgesSim"]], "kqcircuits.simulations.airbridges_sim.AirbridgesSim": [[98, 2, 1, "", "build"]], "kqcircuits.simulations.cross_section_simulation": [[99, 1, 1, "", "CrossSectionSimulation"]], "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation": [[99, 3, 1, "", "LIBRARY_NAME"], [99, 2, 1, "", "build"], [99, 2, 1, "", "check_material_dict"], [99, 2, 1, "", "get_layers"], [99, 2, 1, "", "get_material_dict"], [99, 2, 1, "", "get_parameters"], [99, 2, 1, "", "get_schema"], [99, 2, 1, "", "get_simulation_data"], [99, 2, 1, "", "get_unfilled_region"], [99, 2, 1, "", "insert_layer"], [99, 2, 1, "", "is_metal"], [99, 2, 1, "", "process_layers"], [99, 2, 1, "", "restrict_layer_regions"]], "kqcircuits.simulations.empty_simulation": [[100, 1, 1, "", "EmptySimulation"]], "kqcircuits.simulations.empty_simulation.EmptySimulation": [[100, 2, 1, "", "build"]], "kqcircuits.simulations.epr": [[102, 0, 0, "-", "circular_capacitor"], [103, 0, 0, "-", "circular_transmon_single_island"], [104, 0, 0, "-", "double_pads"], [105, 0, 0, "-", "example"], [106, 0, 0, "-", "gui_config"], [107, 0, 0, "-", "smooth_capacitor"], [108, 0, 0, "-", "spiral_capacitor"], [109, 0, 0, "-", "swissmon"], [110, 0, 0, "-", "util"]], "kqcircuits.simulations.epr.circular_capacitor": [[102, 4, 1, "", "correction_cuts"], [102, 4, 1, "", "extract_circular_capacitor_from"], [102, 4, 1, "", "partition_regions"]], "kqcircuits.simulations.epr.circular_transmon_single_island": [[103, 4, 1, "", "correction_cuts"], [103, 4, 1, "", "partition_regions"]], "kqcircuits.simulations.epr.double_pads": [[104, 4, 1, "", "correction_cuts"], [104, 4, 1, "", "partition_regions"]], "kqcircuits.simulations.epr.example": [[105, 4, 1, "", "correction_cuts"], [105, 4, 1, "", "extract_from"], [105, 4, 1, "", "partition_regions"]], "kqcircuits.simulations.epr.smooth_capacitor": [[107, 4, 1, "", "correction_cuts"], [107, 4, 1, "", "partition_regions"]], "kqcircuits.simulations.epr.spiral_capacitor": [[108, 4, 1, "", "correction_cuts"], [108, 4, 1, "", "partition_regions"]], "kqcircuits.simulations.epr.swissmon": [[109, 4, 1, "", "correction_cuts"], [109, 4, 1, "", "extract_swissmon_from"], [109, 4, 1, "", "partition_regions"]], "kqcircuits.simulations.epr.util": [[110, 4, 1, "", "create_bulk_and_mer_partition_regions"], [110, 4, 1, "", "extract_child_simulation"], [110, 4, 1, "", "get_mer_z"], [110, 4, 1, "", "in_gui"]], "kqcircuits.simulations.export": [[112, 0, 0, "-", "ansys"], [115, 0, 0, "-", "cross_section"], [119, 0, 0, "-", "elmer"], [123, 0, 0, "-", "export_and_run"], [124, 0, 0, "-", "export_singularity"], [125, 0, 0, "-", "remote_export_and_run"], [126, 0, 0, "-", "simulation_export"], [127, 0, 0, "-", "simulation_validate"], [128, 0, 0, "-", "solution"], [129, 0, 0, "-", "sonnet"], [132, 0, 0, "-", "util"]], "kqcircuits.simulations.export.ansys": [[113, 0, 0, "-", "ansys_export"], [114, 0, 0, "-", "ansys_solution"]], "kqcircuits.simulations.export.ansys.ansys_export": [[113, 4, 1, "", "export_ansys"], [113, 4, 1, "", "export_ansys_bat"], [113, 4, 1, "", "export_ansys_json"]], "kqcircuits.simulations.export.ansys.ansys_solution": [[114, 1, 1, "", "AnsysCrossSectionSolution"], [114, 1, 1, "", "AnsysCurrentSolution"], [114, 1, 1, "", "AnsysEigenmodeSolution"], [114, 1, 1, "", "AnsysHfssSolution"], [114, 1, 1, "", "AnsysHfssTerminalSolution"], [114, 1, 1, "", "AnsysQ3dSolution"], [114, 1, 1, "", "AnsysSolution"], [114, 1, 1, "", "AnsysVoltageSolution"], [114, 4, 1, "", "get_ansys_solution"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution": [[114, 3, 1, "", "ansys_tool"], [114, 3, 1, "", "frequency"], [114, 2, 1, "", "get_solution_data"], [114, 3, 1, "", "integrate_energies"], [114, 3, 1, "", "percent_error"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution": [[114, 3, 1, "", "ansys_tool"], [114, 3, 1, "", "frequency"], [114, 2, 1, "", "get_solution_data"], [114, 3, 1, "", "max_delta_e"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution": [[114, 3, 1, "", "ansys_tool"], [114, 3, 1, "", "basis_order"], [114, 2, 1, "", "get_solution_data"], [114, 3, 1, "", "integrate_energies"], [114, 3, 1, "", "integrate_magnetic_flux"], [114, 3, 1, "", "max_delta_f"], [114, 3, 1, "", "min_frequency"], [114, 3, 1, "", "n_modes"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution": [[114, 3, 1, "", "ansys_tool"], [114, 3, 1, "", "capacitance_export"], [114, 3, 1, "", "frequency"], [114, 2, 1, "", "get_solution_data"], [114, 3, 1, "", "max_delta_s"], [114, 3, 1, "", "sweep_count"], [114, 3, 1, "", "sweep_enabled"], [114, 3, 1, "", "sweep_end"], [114, 3, 1, "", "sweep_start"], [114, 3, 1, "", "sweep_type"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssTerminalSolution": [[114, 3, 1, "", "basis_order"], [114, 2, 1, "", "get_solution_data"], [114, 3, 1, "", "integrate_energies"], [114, 3, 1, "", "integrate_magnetic_flux"], [114, 3, 1, "", "iterative_residual"], [114, 3, 1, "", "use_iterative_solver"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution": [[114, 3, 1, "", "ansys_tool"], [114, 3, 1, "", "frequency"], [114, 2, 1, "", "get_solution_data"], [114, 3, 1, "", "percent_error"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution": [[114, 3, 1, "", "ansys_project_template"], [114, 3, 1, "", "ansys_tool"], [114, 3, 1, "", "frequency_units"], [114, 2, 1, "", "get_solution_data"], [114, 3, 1, "", "maximum_passes"], [114, 3, 1, "", "mesh_size"], [114, 3, 1, "", "minimum_converged_passes"], [114, 3, 1, "", "minimum_passes"], [114, 3, 1, "", "percent_refinement"], [114, 3, 1, "", "simulation_flags"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution": [[114, 3, 1, "", "ansys_tool"], [114, 3, 1, "", "frequency"], [114, 2, 1, "", "get_solution_data"], [114, 3, 1, "", "max_delta_e"]], "kqcircuits.simulations.export.cross_section": [[116, 0, 0, "-", "cross_section_export"], [117, 0, 0, "-", "cut_simulation"], [118, 0, 0, "-", "epr_correction_export"]], "kqcircuits.simulations.export.cross_section.cross_section_export": [[116, 4, 1, "", "create_cross_sections_from_simulations"], [116, 4, 1, "", "visualise_cross_section_cut_on_original_layout"]], "kqcircuits.simulations.export.cross_section.cut_simulation": [[117, 1, 1, "", "CutSimulation"]], "kqcircuits.simulations.export.cross_section.cut_simulation.CutSimulation": [[117, 2, 1, "", "apply_partition_regions"], [117, 2, 1, "", "build"], [117, 2, 1, "", "get_material_dict"], [117, 2, 1, "", "get_metals_vacuums_substrates"], [117, 2, 1, "", "get_parameters"], [117, 2, 1, "", "get_partition_regions"], [117, 2, 1, "", "insert_cross_section_layers"], [117, 2, 1, "", "insert_sheet_metals"], [117, 2, 1, "", "insert_tls_layers"], [117, 2, 1, "", "limited_region"], [117, 2, 1, "", "process_geometry"], [117, 2, 1, "", "regroup_layers"], [117, 2, 1, "", "subtract_region"], [117, 2, 1, "", "sum_region"]], "kqcircuits.simulations.export.cross_section.epr_correction_export": [[118, 4, 1, "", "get_epr_correction_elmer_solution"], [118, 4, 1, "", "get_epr_correction_simulations"]], "kqcircuits.simulations.export.elmer": [[120, 0, 0, "-", "elmer_export"], [121, 0, 0, "-", "elmer_solution"], [122, 0, 0, "-", "mesh_size_helpers"]], "kqcircuits.simulations.export.elmer.elmer_export": [[120, 4, 1, "", "export_elmer"], [120, 4, 1, "", "export_elmer_json"], [120, 4, 1, "", "export_elmer_script"]], "kqcircuits.simulations.export.elmer.elmer_solution": [[121, 1, 1, "", "ElmerCapacitanceSolution"], [121, 1, 1, "", "ElmerCrossSectionSolution"], [121, 1, 1, "", "ElmerEPR3DSolution"], [121, 1, 1, "", "ElmerSolution"], [121, 1, 1, "", "ElmerVectorHelmholtzSolution"], [121, 4, 1, "", "get_elmer_solution"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution": [[121, 3, 1, "", "convergence_tolerance"], [121, 3, 1, "", "electric_infinity_bc"], [121, 3, 1, "", "integrate_energies"], [121, 3, 1, "", "linear_system_method"], [121, 3, 1, "", "linear_system_preconditioning"], [121, 3, 1, "", "max_iterations"], [121, 3, 1, "", "p_element_order"], [121, 3, 1, "", "tool"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution": [[121, 3, 1, "", "boundary_conditions"], [121, 3, 1, "", "convergence_tolerance"], [121, 3, 1, "", "electric_infinity_bc"], [121, 3, 1, "", "integrate_energies"], [121, 3, 1, "", "linear_system_method"], [121, 3, 1, "", "linear_system_preconditioning"], [121, 3, 1, "", "max_iterations"], [121, 3, 1, "", "p_element_order"], [121, 3, 1, "", "run_inductance_sim"], [121, 3, 1, "", "tool"], [121, 3, 1, "", "voltage_excitations"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution": [[121, 3, 1, "", "convergence_tolerance"], [121, 3, 1, "", "electric_infinity_bc"], [121, 3, 1, "", "linear_system_method"], [121, 3, 1, "", "linear_system_preconditioning"], [121, 3, 1, "", "max_iterations"], [121, 3, 1, "", "p_element_order"], [121, 3, 1, "", "tool"], [121, 3, 1, "", "voltage_excitations"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution": [[121, 2, 1, "", "get_solution_data"], [121, 3, 1, "", "is_axisymmetric"], [121, 3, 1, "", "max_error_scale"], [121, 3, 1, "", "max_outlier_fraction"], [121, 3, 1, "", "maximum_passes"], [121, 3, 1, "", "mesh_levels"], [121, 3, 1, "", "mesh_optimizer"], [121, 3, 1, "", "mesh_size"], [121, 3, 1, "", "minimum_passes"], [121, 3, 1, "", "percent_error"], [121, 3, 1, "", "save_elmer_data"], [121, 3, 1, "", "tool"], [121, 3, 1, "", "vtu_output"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution": [[121, 3, 1, "", "conductivity"], [121, 3, 1, "", "convergence_tolerance"], [121, 3, 1, "", "frequency"], [121, 3, 1, "", "frequency_batch"], [121, 3, 1, "", "london_penetration_depth"], [121, 3, 1, "", "max_delta_s"], [121, 3, 1, "", "max_iterations"], [121, 3, 1, "", "nested_iteration"], [121, 3, 1, "", "quadratic_approximation"], [121, 3, 1, "", "second_kind_basis"], [121, 3, 1, "", "sweep_type"], [121, 3, 1, "", "tool"], [121, 3, 1, "", "use_av"]], "kqcircuits.simulations.export.elmer.mesh_size_helpers": [[122, 4, 1, "", "refine_metal_edges"]], "kqcircuits.simulations.export.export_and_run": [[123, 4, 1, "", "export_and_run"], [123, 4, 1, "", "run_export_script"], [123, 4, 1, "", "run_simulations"]], "kqcircuits.simulations.export.export_singularity": [[124, 4, 1, "", "export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[125, 4, 1, "", "remote_export_and_run"], [125, 4, 1, "", "remote_run_only"]], "kqcircuits.simulations.export.simulation_export": [[126, 4, 1, "", "copy_content_into_directory"], [126, 4, 1, "", "cross_combine"], [126, 4, 1, "", "cross_sweep_simulation"], [126, 4, 1, "", "cross_sweep_solution"], [126, 4, 1, "", "export_simulation_json"], [126, 4, 1, "", "export_simulation_oas"], [126, 4, 1, "", "get_combined_parameters"], [126, 4, 1, "", "get_post_process_command_lines"], [126, 4, 1, "", "sweep_simulation"], [126, 4, 1, "", "sweep_solution"]], "kqcircuits.simulations.export.simulation_validate": [[127, 6, 1, "", "ValidateSimError"], [127, 4, 1, "", "check_partition_region_naming"], [127, 4, 1, "", "check_tls_sheet_generation"], [127, 4, 1, "", "check_tls_sheets_by_solution"], [127, 4, 1, "", "flux_integration_layer_exists_if_needed"], [127, 4, 1, "", "get_port_names"], [127, 4, 1, "", "has_edgeport_when_forbidden"], [127, 4, 1, "", "has_no_ports_when_required"], [127, 4, 1, "", "london_penetration_depth_with_ansys"], [127, 4, 1, "", "recursive_all"], [127, 4, 1, "", "simulation_and_solution_types_match"], [127, 4, 1, "", "validate_simulation"]], "kqcircuits.simulations.export.solution": [[128, 1, 1, "", "Solution"]], "kqcircuits.simulations.export.solution.Solution": [[128, 2, 1, "", "get_parameters"], [128, 3, 1, "", "name"]], "kqcircuits.simulations.export.sonnet": [[130, 0, 0, "-", "parser"], [131, 0, 0, "-", "sonnet_export"]], "kqcircuits.simulations.export.sonnet.parser": [[130, 4, 1, "", "apply_template"], [130, 4, 1, "", "box"], [130, 4, 1, "", "control"], [130, 4, 1, "", "polygon_head"], [130, 4, 1, "", "polygons"], [130, 4, 1, "", "port"], [130, 4, 1, "", "refplane"], [130, 4, 1, "", "refplanes"], [130, 4, 1, "", "symmetry"], [130, 4, 1, "", "via"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[131, 4, 1, "", "export_sonnet"], [131, 4, 1, "", "export_sonnet_son"], [131, 4, 1, "", "poly_and_edge_indices"]], "kqcircuits.simulations.export.util": [[132, 4, 1, "", "find_edge_from_point_in_polygons"], [132, 4, 1, "", "get_enclosing_polygon"]], "kqcircuits.simulations.partition_region": [[133, 1, 1, "", "PartitionRegion"], [133, 4, 1, "", "get_list_of_two"]], "kqcircuits.simulations.partition_region.PartitionRegion": [[133, 2, 1, "", "limit_box"], [133, 2, 1, "", "limit_face"]], "kqcircuits.simulations.port": [[134, 1, 1, "", "EdgePort"], [134, 1, 1, "", "InternalPort"], [134, 1, 1, "", "Port"]], "kqcircuits.simulations.port.InternalPort": [[134, 2, 1, "", "get_etch_polygon"]], "kqcircuits.simulations.port.Port": [[134, 2, 1, "", "as_dict"]], "kqcircuits.simulations.post_process": [[135, 1, 1, "", "PostProcess"]], "kqcircuits.simulations.post_process.PostProcess": [[135, 2, 1, "", "get_command_line"]], "kqcircuits.simulations.simulation": [[136, 1, 1, "", "Simulation"], [136, 4, 1, "", "get_simulation_layer_by_name"], [136, 4, 1, "", "to_1d_list"]], "kqcircuits.simulations.simulation.Simulation": [[136, 3, 1, "", "LIBRARY_NAME"], [136, 2, 1, "", "add_element"], [136, 2, 1, "", "build"], [136, 2, 1, "", "check_material_dict"], [136, 2, 1, "", "create_simulation_layers"], [136, 2, 1, "", "delete_instances"], [136, 2, 1, "", "etched_line"], [136, 2, 1, "", "face"], [136, 2, 1, "", "face_stack_list_of_lists"], [136, 2, 1, "", "face_z_levels"], [136, 2, 1, "", "from_cell"], [136, 2, 1, "", "get_layer"], [136, 2, 1, "", "get_layers"], [136, 2, 1, "", "get_material_dict"], [136, 2, 1, "", "get_parameters"], [136, 2, 1, "", "get_partition_regions"], [136, 2, 1, "", "get_port_data"], [136, 2, 1, "", "get_refpoints"], [136, 2, 1, "", "get_schema"], [136, 2, 1, "", "get_simulation_data"], [136, 2, 1, "", "ground_grid_region"], [136, 2, 1, "", "insert_cell"], [136, 2, 1, "", "insert_layer"], [136, 2, 1, "", "insert_layers_between_faces"], [136, 2, 1, "", "insert_stacked_up_layers"], [136, 2, 1, "", "is_metal"], [136, 2, 1, "", "ith_value"], [136, 2, 1, "", "pcell_params_by_name"], [136, 3, 1, "", "ports"], [136, 2, 1, "", "produce_layers"], [136, 2, 1, "", "produce_waveguide_to_port"], [136, 2, 1, "", "region_from_layer"], [136, 2, 1, "", "simplified_region"], [136, 2, 1, "", "split_metal_layers_by_excitation"], [136, 2, 1, "", "visualise_region"], [136, 2, 1, "", "warn_of_small_shapes"]], "kqcircuits.simulations.single_element_simulation": [[137, 4, 1, "", "get_single_element_sim_class"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[138, 1, 1, "", "SingleXmonsFullChipSim"]], "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim": [[138, 2, 1, "", "build"]], "kqcircuits.simulations.waveguides_sim": [[139, 1, 1, "", "WaveGuidesSim"]], "kqcircuits.simulations.waveguides_sim.WaveGuidesSim": [[139, 2, 1, "", "build"], [139, 2, 1, "", "produce_ground_bumps"], [139, 2, 1, "", "produce_guides"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[140, 1, 1, "", "XMonsDirectCouplingFullChipSim"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim": [[140, 2, 1, "", "build"], [140, 2, 1, "", "produce_launcher"], [140, 2, 1, "", "produce_launchers_SMA8"], [140, 2, 1, "", "produce_qubit"], [140, 2, 1, "", "produce_readout_resonator"], [140, 2, 1, "", "produce_waveguide"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[141, 1, 1, "", "XMonsDirectCouplingSim"]], "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim": [[141, 2, 1, "", "build"], [141, 2, 1, "", "produce_qubits"]], "kqcircuits.test_structures": [[143, 0, 0, "-", "airbridge_dc"], [144, 0, 0, "-", "cross_test"], [145, 0, 0, "-", "junction_test_pads"], [148, 0, 0, "-", "stripes_test"], [149, 0, 0, "-", "stripes_test_increasing_width"], [150, 0, 0, "-", "test_structure"], [151, 0, 0, "-", "tsv_test_pattern"]], "kqcircuits.test_structures.airbridge_dc": [[143, 1, 1, "", "AirbridgeDC"]], "kqcircuits.test_structures.airbridge_dc.AirbridgeDC": [[143, 2, 1, "", "build"]], "kqcircuits.test_structures.cross_test": [[144, 1, 1, "", "CrossTest"]], "kqcircuits.test_structures.cross_test.CrossTest": [[144, 2, 1, "", "build"]], "kqcircuits.test_structures.junction_test_pads": [[146, 0, 0, "-", "junction_test_pads"], [147, 0, 0, "-", "junction_test_pads_simple"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[146, 1, 1, "", "JunctionTestPads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads": [[146, 2, 1, "", "create"], [146, 3, 1, "", "default_type"], [146, 2, 1, "", "produce_squid"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[147, 1, 1, "", "JunctionTestPadsSimple"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple": [[147, 2, 1, "", "build"]], "kqcircuits.test_structures.stripes_test": [[148, 1, 1, "", "StripesTest"]], "kqcircuits.test_structures.stripes_test.StripesTest": [[148, 2, 1, "", "build"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[149, 1, 1, "", "StripesTestIncreasingWidth"]], "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth": [[149, 2, 1, "", "build"]], "kqcircuits.test_structures.test_structure": [[150, 1, 1, "", "TestStructure"]], "kqcircuits.test_structures.test_structure.TestStructure": [[150, 3, 1, "", "LIBRARY_DESCRIPTION"], [150, 3, 1, "", "LIBRARY_NAME"], [150, 3, 1, "", "LIBRARY_PATH"], [150, 2, 1, "", "produce_etched_region"], [150, 2, 1, "", "produce_four_point_pads"], [150, 2, 1, "", "produce_pad"]], "kqcircuits.test_structures.tsv_test_pattern": [[151, 1, 1, "", "TsvTestPattern"]], "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern": [[151, 2, 1, "", "build"]], "kqcircuits.util": [[153, 0, 0, "-", "area"], [154, 0, 0, "-", "count_instances"], [155, 0, 0, "-", "coupler_lib"], [156, 0, 0, "-", "deep_delete"], [157, 0, 0, "-", "defaults_helper"], [158, 0, 0, "-", "dependencies"], [159, 0, 0, "-", "edit_node_plugin"], [160, 0, 0, "-", "error_on_cell"], [161, 0, 0, "-", "export_helper"], [162, 0, 0, "-", "geometry_helper"], [163, 0, 0, "-", "geometry_json_encoder"], [164, 0, 0, "-", "groundgrid"], [165, 0, 0, "-", "gui_helper"], [166, 0, 0, "-", "import_helper"], [167, 0, 0, "-", "instance_hierarchy_helpers"], [168, 0, 0, "-", "label"], [169, 0, 0, "-", "label_polygons"], [170, 0, 0, "-", "layout_to_code"], [171, 0, 0, "-", "library_helper"], [172, 0, 0, "-", "load_save_layout"], [173, 0, 0, "-", "log_router"], [174, 0, 0, "-", "merge"], [175, 0, 0, "-", "netlist_extraction"], [176, 0, 0, "-", "netlist_graph"], [177, 0, 0, "-", "parameters"], [178, 0, 0, "-", "plugin_startup"], [179, 0, 0, "-", "refpoints"], [180, 0, 0, "-", "replace_junctions"], [181, 0, 0, "-", "symmetric_polygons"]], "kqcircuits.util.area": [[153, 1, 1, "", "AreaReceiver"], [153, 4, 1, "", "get_area_and_density"]], "kqcircuits.util.area.AreaReceiver": [[153, 2, 1, "", "put"]], "kqcircuits.util.count_instances": [[154, 4, 1, "", "count_instances_in_cell"]], "kqcircuits.util.coupler_lib": [[155, 4, 1, "", "cap_params"]], "kqcircuits.util.deep_delete": [[156, 4, 1, "", "deep_delete_all"], [156, 4, 1, "", "deep_delete_pcells"]], "kqcircuits.util.defaults_helper": [[157, 4, 1, "", "find_ansys_executable"]], "kqcircuits.util.dependencies": [[158, 4, 1, "", "install_kqc_gui_dependencies"]], "kqcircuits.util.edit_node_plugin": [[159, 1, 1, "", "EditNodePlugin"], [159, 1, 1, "", "EditNodePluginFactory"]], "kqcircuits.util.edit_node_plugin.EditNodePlugin": [[159, 2, 1, "", "activated"], [159, 2, 1, "", "create_dialog"], [159, 2, 1, "", "deactivated"], [159, 2, 1, "", "deselect"], [159, 2, 1, "", "has_tracking_position"], [159, 2, 1, "", "mouse_click_event"], [159, 2, 1, "", "mouse_moved_event"], [159, 2, 1, "", "select"], [159, 2, 1, "", "tracking_position"], [159, 2, 1, "", "update"], [159, 2, 1, "", "update_form_from_node"], [159, 2, 1, "", "update_node_from_form"]], "kqcircuits.util.edit_node_plugin.EditNodePluginFactory": [[159, 2, 1, "", "create_plugin"]], "kqcircuits.util.error_on_cell": [[160, 4, 1, "", "find_cells_with_error"], [160, 4, 1, "", "formatted_errors_on_cells"]], "kqcircuits.util.export_helper": [[161, 4, 1, "", "create_or_empty_tmp_directory"], [161, 4, 1, "", "export_drc_report"], [161, 4, 1, "", "generate_probepoints_from_file"], [161, 4, 1, "", "generate_probepoints_json"], [161, 4, 1, "", "get_active_or_new_layout"], [161, 4, 1, "", "get_klayout_version"], [161, 4, 1, "", "get_simulation_directory"], [161, 4, 1, "", "open_with_klayout_or_default_application"], [161, 4, 1, "", "write_commit_reference_file"], [161, 4, 1, "", "write_export_machine_versions_file"]], "kqcircuits.util.geometry_helper": [[162, 4, 1, "", "arc_points"], [162, 4, 1, "", "bezier_points"], [162, 4, 1, "", "bspline_points"], [162, 4, 1, "", "circle_polygon"], [162, 4, 1, "", "force_rounded_corners"], [162, 4, 1, "", "get_angle"], [162, 4, 1, "", "get_cell_path_length"], [162, 4, 1, "", "get_direction"], [162, 4, 1, "", "get_object_path_length"], [162, 4, 1, "", "is_clockwise"], [162, 4, 1, "", "merge_points_and_match_on_edges"], [162, 4, 1, "", "point_shift_along_vector"], [162, 4, 1, "", "region_with_merged_points"], [162, 4, 1, "", "region_with_merged_polygons"], [162, 4, 1, "", "simple_region"], [162, 4, 1, "", "vector_length_and_direction"]], "kqcircuits.util.geometry_json_encoder": [[163, 1, 1, "", "GeometryJsonDecoder"], [163, 1, 1, "", "GeometryJsonEncoder"], [163, 4, 1, "", "decode_dict_as_python_obj"], [163, 4, 1, "", "encode_python_obj_as_dict"]], "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder": [[163, 2, 1, "", "default"]], "kqcircuits.util.groundgrid": [[164, 4, 1, "", "make_grid"]], "kqcircuits.util.gui_helper": [[165, 4, 1, "", "get_all_node_elements"], [165, 4, 1, "", "get_nodes_near_position"], [165, 4, 1, "", "get_valid_node_elements"], [165, 4, 1, "", "node_from_text"], [165, 4, 1, "", "node_to_text"], [165, 4, 1, "", "replace_node"]], "kqcircuits.util.import_helper": [[166, 4, 1, "", "module_from_file"]], "kqcircuits.util.instance_hierarchy_helpers": [[167, 1, 1, "", "InstanceHierarchy"], [167, 4, 1, "", "formatted_cell_instance_hierarchy"], [167, 4, 1, "", "get_cell_instance_hierarchy"]], "kqcircuits.util.instance_hierarchy_helpers.InstanceHierarchy": [[167, 3, 1, "", "instance"], [167, 3, 1, "", "parent_instances"], [167, 3, 1, "", "top_cell"], [167, 3, 1, "", "trans"]], "kqcircuits.util.label": [[168, 1, 1, "", "LabelOrigin"], [168, 4, 1, "", "produce_label"]], "kqcircuits.util.label.LabelOrigin": [[168, 3, 1, "", "BOTTOMLEFT"], [168, 3, 1, "", "BOTTOMRIGHT"], [168, 3, 1, "", "TOPLEFT"], [168, 3, 1, "", "TOPRIGHT"]], "kqcircuits.util.label_polygons": [[169, 4, 1, "", "get_text_polygon"], [169, 4, 1, "", "load_font_polygons"]], "kqcircuits.util.layout_to_code": [[170, 4, 1, "", "convert_cells_to_code"], [170, 4, 1, "", "extract_pcell_data_from_views"], [170, 4, 1, "", "get_node_params"], [170, 4, 1, "", "restore_pcells_to_views"]], "kqcircuits.util.library_helper": [[171, 4, 1, "", "delete_all_libraries"], [171, 4, 1, "", "delete_library"], [171, 4, 1, "", "element_by_class_name"], [171, 4, 1, "", "get_library_paths"], [171, 4, 1, "", "load_libraries"], [171, 4, 1, "", "to_library_name"], [171, 4, 1, "", "to_module_name"]], "kqcircuits.util.load_save_layout": [[172, 4, 1, "", "load_layout"], [172, 4, 1, "", "save_layout"]], "kqcircuits.util.log_router": [[173, 4, 1, "", "route_log"]], "kqcircuits.util.merge": [[174, 4, 1, "", "convert_child_instances_to_static"], [174, 4, 1, "", "merge_layers"], [174, 4, 1, "", "merge_layout_layers_on_face"]], "kqcircuits.util.netlist_extraction": [[175, 4, 1, "", "export_cell_netlist"], [175, 4, 1, "", "extract_circuits"], [175, 4, 1, "", "extract_nets"]], "kqcircuits.util.netlist_graph": [[176, 4, 1, "", "draw_graph"], [176, 4, 1, "", "network_as_graph"]], "kqcircuits.util.parameters": [[177, 1, 1, "", "Param"], [177, 4, 1, "", "add_parameter"], [177, 4, 1, "", "add_parameters_from"], [177, 1, 1, "", "pdt"]], "kqcircuits.util.parameters.Param": [[177, 2, 1, "", "get_all"]], "kqcircuits.util.parameters.pdt": [[177, 3, 1, "", "TypeBoolean"], [177, 3, 1, "", "TypeDouble"], [177, 3, 1, "", "TypeInt"], [177, 3, 1, "", "TypeLayer"], [177, 3, 1, "", "TypeList"], [177, 3, 1, "", "TypeNone"], [177, 3, 1, "", "TypeShape"], [177, 3, 1, "", "TypeString"]], "kqcircuits.util.plugin_startup": [[178, 4, 1, "", "register_plugins"]], "kqcircuits.util.refpoints": [[179, 1, 1, "", "JunctionSimPort"], [179, 1, 1, "", "RefpointToEdgePort"], [179, 1, 1, "", "RefpointToInternalPort"], [179, 1, 1, "", "RefpointToSimPort"], [179, 1, 1, "", "Refpoints"], [179, 1, 1, "", "WaveguideToSimPort"]], "kqcircuits.util.refpoints.JunctionSimPort": [[179, 3, 1, "", "face"], [179, 3, 1, "", "floating"], [179, 3, 1, "", "other_refpoint"], [179, 3, 1, "", "refpoint"]], "kqcircuits.util.refpoints.RefpointToSimPort": [[179, 3, 1, "", "face"], [179, 3, 1, "", "refpoint"]], "kqcircuits.util.refpoints.Refpoints": [[179, 3, 1, "", "cell"], [179, 2, 1, "", "dict"], [179, 2, 1, "", "items"], [179, 2, 1, "", "keys"], [179, 3, 1, "", "layer"], [179, 3, 1, "", "rec_levels"], [179, 3, 1, "", "trans"], [179, 2, 1, "", "values"]], "kqcircuits.util.refpoints.WaveguideToSimPort": [[179, 3, 1, "", "a"], [179, 3, 1, "", "airbridge"], [179, 3, 1, "", "b"], [179, 3, 1, "", "deembed_cross_section"], [179, 3, 1, "", "face"], [179, 3, 1, "", "over_etching"], [179, 3, 1, "", "refpoint"], [179, 3, 1, "", "side"], [179, 3, 1, "", "term1"], [179, 3, 1, "", "towards"], [179, 3, 1, "", "turn_radius"], [179, 3, 1, "", "use_internal_ports"], [179, 3, 1, "", "waveguide_length"]], "kqcircuits.util.replace_junctions": [[180, 1, 1, "", "JunctionEntry"], [180, 4, 1, "", "check_static_cell_has_junctions"], [180, 4, 1, "", "convert_cells_to_static"], [180, 4, 1, "", "copy_one_layer_of_cell"], [180, 4, 1, "", "extract_junctions"], [180, 4, 1, "", "get_tuned_junction_json"], [180, 4, 1, "", "place_junctions"], [180, 4, 1, "", "replace_squid"], [180, 4, 1, "", "replace_squids"]], "kqcircuits.util.symmetric_polygons": [[181, 4, 1, "", "polygon_with_hsym"], [181, 4, 1, "", "polygon_with_sym"], [181, 4, 1, "", "polygon_with_vsym"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": 0, "api": 1, "document": [1, 187, 208], "modul": [1, 2, 28, 30, 40, 44, 51, 60, 70, 80, 83, 89, 97, 111, 112, 115, 119, 129, 142, 145, 152, 190], "content": [1, 2, 28, 30, 40, 44, 51, 60, 70, 80, 83, 89, 97, 111, 112, 115, 119, 129, 142, 145, 152], "kqcircuit": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 190, 195, 202, 207], "chip": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 196, 203, 204, 215, 218], "airbridge_cross": 3, "airbridge_dc_test": 4, "crossing_twofac": 6, "daisy_woven": 7, "dc_test": 8, "demo": [9, 196], "demo_twofac": 10, "empti": 11, "junction_test": 12, "junction_test2": 13, "launcher": [14, 49], "lithography_test": 15, "lithography_test_twofac": 16, "munch_qubit": 17, "quality_factor": 18, "quality_factor_twofac": 19, "sample_holder_test": 20, "shape": [21, 196, 200], "simpl": 22, "single_xmon": 23, "stripe": 24, "tsv_test": 25, "xmons_direct_coupl": 26, "default": 27, "element": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 184, 192, 193, 194, 196, 200, 203, 204, 205, 215, 223], "airbridge_connect": 29, "airbridg": [30, 31, 32, 33], "airbridge_multi_fac": 32, "airbridge_rectangular": 33, "capacitive_x_coupl": 34, "chip_fram": 35, "circular_capacitor": [36, 102], "finger_capacitor_squar": 38, "finger_capacitor_tap": 39, "flip_chip_connector": [40, 41, 42, 43], "flip_chip_connector_dc": 42, "flip_chip_connector_rf": 43, "fluxlin": [44, 45, 46, 47], "fluxline_standard": 46, "fluxline_straight": 47, "hanger_reson": 48, "launcher_dc": 50, "marker": [51, 52, 53, 54], "marker_standard": 53, "mask_marker_fc": 54, "meander": 55, "quarter_wave_cpw_reson": 56, "smooth_capacitor": [57, 107], "spiral_capacitor": [58, 108], "spiral_resonator_polygon": 59, "tsv": [60, 61, 62, 63], "tsv_ellips": 62, "tsv_standard": 63, "waveguide_composit": 64, "waveguide_coplanar": 65, "waveguide_coplanar_curv": 66, "waveguide_coplanar_splitt": 67, "waveguide_coplanar_straight": 68, "waveguide_coplanar_tap": 69, "junction": [70, 71, 72, 73, 74, 75, 76, 77], "manhattan": 72, "manhattan_single_junct": 73, "no_squid": 74, "sim": 75, "squid": 76, "super_inductor": 77, "klayout_view": 78, "layer_clust": 79, "layer_config": [80, 81, 82], "default_layer_config": 81, "example_layer_config": 82, "mask": [83, 84, 85, 86, 87, 218], "mask_export": 84, "mask_layout": 85, "mask_set": 86, "multi_face_mask_layout": 87, "pya_resolv": 88, "qubit": [89, 90, 91, 92, 93, 94, 95], "circular_transmon_single_island": [90, 103], "concentric_transmon": 91, "double_pad": [92, 104], "double_pads_splin": 93, "swissmon": [95, 109], "run": [96, 217, 220], "simul": [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 219, 221, 222, 223, 225], "airbridges_sim": 98, "cross_section_simul": 99, "empty_simul": 100, "epr": [101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "exampl": [105, 203, 217], "gui_config": 106, "util": [110, 132, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 215], "export": [111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 218, 220, 221, 224], "ansi": [112, 113, 114, 224], "ansys_export": 113, "ansys_solut": 114, "cross_sect": [115, 116, 117, 118], "cross_section_export": 116, "cut_simul": 117, "epr_correction_export": 118, "elmer": [119, 120, 121, 122, 219, 221, 224], "elmer_export": 120, "elmer_solut": 121, "mesh_size_help": 122, "export_and_run": 123, "export_singular": 124, "remote_export_and_run": 125, "simulation_export": 126, "simulation_valid": 127, "solut": 128, "sonnet": [129, 130, 131, 224], "parser": 130, "sonnet_export": 131, "partition_region": 133, "port": [134, 206, 223], "post_process": 135, "single_element_simul": 137, "single_xmons_full_chip_sim": 138, "waveguides_sim": 139, "xmons_direct_coupling_full_chip_sim": 140, "xmons_direct_coupling_sim": 141, "test_structur": [142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "airbridge_dc": 143, "cross_test": 144, "junction_test_pad": [145, 146, 147], "junction_test_pads_simpl": 147, "stripes_test": 148, "stripes_test_increasing_width": 149, "tsv_test_pattern": 151, "area": 153, "count_inst": 154, "coupler_lib": 155, "deep_delet": 156, "defaults_help": 157, "depend": [158, 189, 190], "edit_node_plugin": 159, "error_on_cel": 160, "export_help": 161, "geometry_help": 162, "geometry_json_encod": 163, "groundgrid": 164, "gui_help": 165, "import_help": 166, "instance_hierarchy_help": 167, "label": 168, "label_polygon": 169, "layout_to_cod": 170, "library_help": 171, "load_save_layout": 172, "log_rout": 173, "merg": 174, "netlist_extract": 175, "netlist_graph": 176, "paramet": [177, 184, 193, 196, 205, 222], "plugin_startup": 178, "refpoint": [179, 206], "replace_junct": 180, "symmetric_polygon": 181, "cite": 182, "contribut": 183, "version": [183, 211], "architectur": 184, "pcell": 184, "librari": [184, 205, 217], "pya": 184, "resolv": 184, "code": [185, 194, 205], "style": 185, "contain": 186, "cli": 186, "usag": [186, 190, 227], "docker": 186, "ci": 186, "singular": 186, "develop": [188, 189, 190, 217], "guid": [188, 216], "gui": [189, 194, 198, 224], "setup": [189, 190], "prerequisit": [189, 190, 221], "python": [189, 190, 201, 211], "sourc": 189, "instal": [189, 190, 207, 209, 210, 211], "unlink": 189, "updat": [189, 190], "secondari": 189, "manual": [189, 196, 211], "symlink": 189, "linux": 189, "maco": 189, "window": 189, "standalon": 190, "1": 190, "basic": [190, 218], "2": 190, "reproduc": 190, "secur": 190, "3": 190, "exclus": 190, "environ": 190, "extens": 190, "pypi": 190, "jupyt": 190, "notebook": 190, "requir": 190, "test": 191, "unit": 191, "first": [192, 217], "look": 192, "around": 192, "introduct": 192, "place": [193, 194, 200], "modifi": [193, 196, 197, 218], "convert": [194, 196], "us": [195, 197, 200, 206, 217], "command": 195, "hotkei": 195, "menu": 195, "workflow": [196, 201, 219], "tutori": [196, 218], "gener": [196, 215, 223], "cell": 196, "static": 196, "chang": 196, "waveguid": [196, 197], "locat": 196, "an": [196, 203, 215], "add": 196, "new": [196, 214, 217], "ad": [196, 214, 218], "ground": [196, 218], "grid": [196, 218], "edit": 197, "waveguidecomposit": 197, "node": 197, "featur": [198, 222], "get": [199, 204], "start": [199, 204], "face": [200, 214, 218, 223], "creat": [200, 217], "layer": [202, 214], "detail": 203, "defin": [203, 204], "insert": 203, "custom": [204, 214], "structur": [205, 215, 221], "class": [205, 223], "build": 205, "salt": 207, "packag": [207, 211], "set": 207, "up": 207, "user": [207, 216], "directori": 207, "upgrad": 207, "remov": 207, "releas": 207, "note": 207, "kqc": 208, "logo": 208, "indic": 208, "tabl": 208, "klayout": [210, 211, 217, 224], "known": 211, "issu": 211, "differ": 211, "support": 212, "trademark": 213, "configur": 214, "sampl": 214, "holder": 214, "file": [214, 215], "miscellan": 215, "system": 215, "hierarchi": 215, "open": 215, "from": [215, 224], "id": 215, "macro": 217, "script": [217, 218], "interact": 217, "applic": 217, "panel": 217, "access": 217, "current": 217, "activ": 217, "klayoutview": 217, "debugg": 217, "reload": 217, "multi": 218, "composit": 218, "map": 218, "remot": 219, "one": 220, "line": 220, "gmsh": 221, "parallel": 221, "": 222, "matrix": 222, "capacit": 222, "eigenmod": 222, "energi": 222, "integr": 222, "particip": 222, "ratio": 222, "cross": 222, "section": 222, "object": 223, "The": 223, "box": 223, "stack": 223, "subclass": 223, "singl": 223, "geometri": [223, 224], "sweep": 223, "function": 224, "extern": 225, "tool": 225, "terminologi": 226}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"About": [[0, "about"]], "API documentation": [[1, "api-documentation"]], "Module contents": [[1, "module-kqcircuits"], [2, "module-kqcircuits.chips"], [28, "module-kqcircuits.elements"], [30, "module-kqcircuits.elements.airbridges"], [40, "module-kqcircuits.elements.flip_chip_connectors"], [44, "module-kqcircuits.elements.fluxlines"], [51, "module-kqcircuits.elements.markers"], [60, "module-kqcircuits.elements.tsvs"], [70, "module-kqcircuits.junctions"], [80, "module-kqcircuits.layer_config"], [83, "module-kqcircuits.masks"], [89, "module-kqcircuits.qubits"], [97, "module-kqcircuits.simulations"], [111, "module-kqcircuits.simulations.export"], [112, "module-kqcircuits.simulations.export.ansys"], [115, "module-kqcircuits.simulations.export.cross_section"], [119, "module-kqcircuits.simulations.export.elmer"], [129, "module-kqcircuits.simulations.export.sonnet"], [142, "module-kqcircuits.test_structures"], [145, "module-kqcircuits.test_structures.junction_test_pads"], [152, "module-kqcircuits.util"]], "kqcircuits.chips": [[2, "kqcircuits-chips"]], "kqcircuits.chips.airbridge_crossings": [[3, "module-kqcircuits.chips.airbridge_crossings"]], "kqcircuits.chips.airbridge_dc_test": [[4, "module-kqcircuits.chips.airbridge_dc_test"]], "kqcircuits.chips.chip": [[5, "module-kqcircuits.chips.chip"]], "kqcircuits.chips.crossing_twoface": [[6, "module-kqcircuits.chips.crossing_twoface"]], "kqcircuits.chips.daisy_woven": [[7, "module-kqcircuits.chips.daisy_woven"]], "kqcircuits.chips.dc_test": [[8, "module-kqcircuits.chips.dc_test"]], "kqcircuits.chips.demo": [[9, "module-kqcircuits.chips.demo"]], "kqcircuits.chips.demo_twoface": [[10, "module-kqcircuits.chips.demo_twoface"]], "kqcircuits.chips.empty": [[11, "module-kqcircuits.chips.empty"]], "kqcircuits.chips.junction_test": [[12, "module-kqcircuits.chips.junction_test"]], "kqcircuits.chips.junction_test2": [[13, "module-kqcircuits.chips.junction_test2"]], "kqcircuits.chips.launchers": [[14, "module-kqcircuits.chips.launchers"]], "kqcircuits.chips.lithography_test": [[15, "module-kqcircuits.chips.lithography_test"]], "kqcircuits.chips.lithography_test_twoface": [[16, "module-kqcircuits.chips.lithography_test_twoface"]], "kqcircuits.chips.munch_qubits": [[17, "module-kqcircuits.chips.munch_qubits"]], "kqcircuits.chips.quality_factor": [[18, "module-kqcircuits.chips.quality_factor"]], "kqcircuits.chips.quality_factor_twoface": [[19, "module-kqcircuits.chips.quality_factor_twoface"]], "kqcircuits.chips.sample_holder_test": [[20, "module-kqcircuits.chips.sample_holder_test"]], "kqcircuits.chips.shaping": [[21, "module-kqcircuits.chips.shaping"]], "kqcircuits.chips.simple": [[22, "module-kqcircuits.chips.simple"]], "kqcircuits.chips.single_xmons": [[23, "module-kqcircuits.chips.single_xmons"]], "kqcircuits.chips.stripes": [[24, "module-kqcircuits.chips.stripes"]], "kqcircuits.chips.tsv_test": [[25, "module-kqcircuits.chips.tsv_test"]], "kqcircuits.chips.xmons_direct_coupling": [[26, "module-kqcircuits.chips.xmons_direct_coupling"]], "kqcircuits.defaults": [[27, "module-kqcircuits.defaults"]], "kqcircuits.elements": [[28, "kqcircuits-elements"]], "kqcircuits.elements.airbridge_connection": [[29, "module-kqcircuits.elements.airbridge_connection"]], "kqcircuits.elements.airbridges": [[30, "kqcircuits-elements-airbridges"]], "kqcircuits.elements.airbridges.airbridge": [[31, "module-kqcircuits.elements.airbridges.airbridge"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[32, "module-kqcircuits.elements.airbridges.airbridge_multi_face"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[33, "module-kqcircuits.elements.airbridges.airbridge_rectangular"]], "kqcircuits.elements.capacitive_x_coupler": [[34, "module-kqcircuits.elements.capacitive_x_coupler"]], "kqcircuits.elements.chip_frame": [[35, "module-kqcircuits.elements.chip_frame"]], "kqcircuits.elements.circular_capacitor": [[36, "module-kqcircuits.elements.circular_capacitor"]], "kqcircuits.elements.element": [[37, "module-kqcircuits.elements.element"]], "kqcircuits.elements.finger_capacitor_square": [[38, "module-kqcircuits.elements.finger_capacitor_square"]], "kqcircuits.elements.finger_capacitor_taper": [[39, "module-kqcircuits.elements.finger_capacitor_taper"]], "kqcircuits.elements.flip_chip_connectors": [[40, "kqcircuits-elements-flip-chip-connectors"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[43, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"]], "kqcircuits.elements.fluxlines": [[44, "kqcircuits-elements-fluxlines"]], "kqcircuits.elements.fluxlines.fluxline": [[45, "module-kqcircuits.elements.fluxlines.fluxline"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[46, "module-kqcircuits.elements.fluxlines.fluxline_standard"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[47, "module-kqcircuits.elements.fluxlines.fluxline_straight"]], "kqcircuits.elements.hanger_resonator": [[48, "module-kqcircuits.elements.hanger_resonator"]], "kqcircuits.elements.launcher": [[49, "module-kqcircuits.elements.launcher"]], "kqcircuits.elements.launcher_dc": [[50, "module-kqcircuits.elements.launcher_dc"]], "kqcircuits.elements.markers": [[51, "kqcircuits-elements-markers"]], "kqcircuits.elements.markers.marker": [[52, "module-kqcircuits.elements.markers.marker"]], "kqcircuits.elements.markers.marker_standard": [[53, "module-kqcircuits.elements.markers.marker_standard"]], "kqcircuits.elements.markers.mask_marker_fc": [[54, "module-kqcircuits.elements.markers.mask_marker_fc"]], "kqcircuits.elements.meander": [[55, "module-kqcircuits.elements.meander"]], "kqcircuits.elements.quarter_wave_cpw_resonator": [[56, "module-kqcircuits.elements.quarter_wave_cpw_resonator"]], "kqcircuits.elements.smooth_capacitor": [[57, "module-kqcircuits.elements.smooth_capacitor"]], "kqcircuits.elements.spiral_capacitor": [[58, "module-kqcircuits.elements.spiral_capacitor"]], "kqcircuits.elements.spiral_resonator_polygon": [[59, "module-kqcircuits.elements.spiral_resonator_polygon"]], "kqcircuits.elements.tsvs": [[60, "kqcircuits-elements-tsvs"]], "kqcircuits.elements.tsvs.tsv": [[61, "module-kqcircuits.elements.tsvs.tsv"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[62, "module-kqcircuits.elements.tsvs.tsv_ellipse"]], "kqcircuits.elements.tsvs.tsv_standard": [[63, "module-kqcircuits.elements.tsvs.tsv_standard"]], "kqcircuits.elements.waveguide_composite": [[64, "module-kqcircuits.elements.waveguide_composite"]], "kqcircuits.elements.waveguide_coplanar": [[65, "module-kqcircuits.elements.waveguide_coplanar"]], "kqcircuits.elements.waveguide_coplanar_curved": [[66, "module-kqcircuits.elements.waveguide_coplanar_curved"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[67, "module-kqcircuits.elements.waveguide_coplanar_splitter"]], "kqcircuits.elements.waveguide_coplanar_straight": [[68, "module-kqcircuits.elements.waveguide_coplanar_straight"]], "kqcircuits.elements.waveguide_coplanar_taper": [[69, "module-kqcircuits.elements.waveguide_coplanar_taper"]], "kqcircuits.junctions": [[70, "kqcircuits-junctions"]], "kqcircuits.junctions.junction": [[71, "module-kqcircuits.junctions.junction"]], "kqcircuits.junctions.manhattan": [[72, "module-kqcircuits.junctions.manhattan"]], "kqcircuits.junctions.manhattan_single_junction": [[73, "module-kqcircuits.junctions.manhattan_single_junction"]], "kqcircuits.junctions.no_squid": [[74, "module-kqcircuits.junctions.no_squid"]], "kqcircuits.junctions.sim": [[75, "module-kqcircuits.junctions.sim"]], "kqcircuits.junctions.squid": [[76, "module-kqcircuits.junctions.squid"]], "kqcircuits.junctions.super_inductor": [[77, "module-kqcircuits.junctions.super_inductor"]], "kqcircuits.klayout_view": [[78, "module-kqcircuits.klayout_view"]], "kqcircuits.layer_cluster": [[79, "module-kqcircuits.layer_cluster"]], "kqcircuits.layer_config": [[80, "kqcircuits-layer-config"]], "kqcircuits.layer_config.default_layer_config": [[81, "module-kqcircuits.layer_config.default_layer_config"]], "kqcircuits.layer_config.example_layer_config": [[82, "module-kqcircuits.layer_config.example_layer_config"]], "kqcircuits.masks": [[83, "kqcircuits-masks"]], "kqcircuits.masks.mask_export": [[84, "module-kqcircuits.masks.mask_export"]], "kqcircuits.masks.mask_layout": [[85, "module-kqcircuits.masks.mask_layout"]], "kqcircuits.masks.mask_set": [[86, "module-kqcircuits.masks.mask_set"]], "kqcircuits.masks.multi_face_mask_layout": [[87, "module-kqcircuits.masks.multi_face_mask_layout"]], "kqcircuits.pya_resolver": [[88, "module-kqcircuits.pya_resolver"]], "kqcircuits.qubits": [[89, "kqcircuits-qubits"]], "kqcircuits.qubits.circular_transmon_single_island": [[90, "module-kqcircuits.qubits.circular_transmon_single_island"]], "kqcircuits.qubits.concentric_transmon": [[91, "module-kqcircuits.qubits.concentric_transmon"]], "kqcircuits.qubits.double_pads": [[92, "module-kqcircuits.qubits.double_pads"]], "kqcircuits.qubits.double_pads_splines": [[93, "module-kqcircuits.qubits.double_pads_splines"]], "kqcircuits.qubits.qubit": [[94, "module-kqcircuits.qubits.qubit"]], "kqcircuits.qubits.swissmon": [[95, "module-kqcircuits.qubits.swissmon"]], "kqcircuits.run": [[96, "module-kqcircuits.run"]], "kqcircuits.simulations": [[97, "kqcircuits-simulations"]], "kqcircuits.simulations.airbridges_sim": [[98, "module-kqcircuits.simulations.airbridges_sim"]], "kqcircuits.simulations.cross_section_simulation": [[99, "module-kqcircuits.simulations.cross_section_simulation"]], "kqcircuits.simulations.empty_simulation": [[100, "module-kqcircuits.simulations.empty_simulation"]], "kqcircuits.simulations.epr": [[101, "kqcircuits-simulations-epr"]], "kqcircuits.simulations.epr.circular_capacitor": [[102, "module-kqcircuits.simulations.epr.circular_capacitor"]], "kqcircuits.simulations.epr.circular_transmon_single_island": [[103, "module-kqcircuits.simulations.epr.circular_transmon_single_island"]], "kqcircuits.simulations.epr.double_pads": [[104, "module-kqcircuits.simulations.epr.double_pads"]], "kqcircuits.simulations.epr.example": [[105, "module-kqcircuits.simulations.epr.example"]], "kqcircuits.simulations.epr.gui_config": [[106, "module-kqcircuits.simulations.epr.gui_config"]], "kqcircuits.simulations.epr.smooth_capacitor": [[107, "module-kqcircuits.simulations.epr.smooth_capacitor"]], "kqcircuits.simulations.epr.spiral_capacitor": [[108, "module-kqcircuits.simulations.epr.spiral_capacitor"]], "kqcircuits.simulations.epr.swissmon": [[109, "module-kqcircuits.simulations.epr.swissmon"]], "kqcircuits.simulations.epr.util": [[110, "module-kqcircuits.simulations.epr.util"]], "kqcircuits.simulations.export": [[111, "kqcircuits-simulations-export"]], "kqcircuits.simulations.export.ansys": [[112, "kqcircuits-simulations-export-ansys"]], "kqcircuits.simulations.export.ansys.ansys_export": [[113, "module-kqcircuits.simulations.export.ansys.ansys_export"]], "kqcircuits.simulations.export.ansys.ansys_solution": [[114, "module-kqcircuits.simulations.export.ansys.ansys_solution"]], "kqcircuits.simulations.export.cross_section": [[115, "kqcircuits-simulations-export-cross-section"]], "kqcircuits.simulations.export.cross_section.cross_section_export": [[116, "module-kqcircuits.simulations.export.cross_section.cross_section_export"]], "kqcircuits.simulations.export.cross_section.cut_simulation": [[117, "module-kqcircuits.simulations.export.cross_section.cut_simulation"]], "kqcircuits.simulations.export.cross_section.epr_correction_export": [[118, "module-kqcircuits.simulations.export.cross_section.epr_correction_export"]], "kqcircuits.simulations.export.elmer": [[119, "kqcircuits-simulations-export-elmer"]], "kqcircuits.simulations.export.elmer.elmer_export": [[120, "module-kqcircuits.simulations.export.elmer.elmer_export"]], "kqcircuits.simulations.export.elmer.elmer_solution": [[121, "module-kqcircuits.simulations.export.elmer.elmer_solution"]], "kqcircuits.simulations.export.elmer.mesh_size_helpers": [[122, "module-kqcircuits.simulations.export.elmer.mesh_size_helpers"]], "kqcircuits.simulations.export.export_and_run": [[123, "module-kqcircuits.simulations.export.export_and_run"]], "kqcircuits.simulations.export.export_singularity": [[124, "module-kqcircuits.simulations.export.export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[125, "module-kqcircuits.simulations.export.remote_export_and_run"]], "kqcircuits.simulations.export.simulation_export": [[126, "module-kqcircuits.simulations.export.simulation_export"]], "kqcircuits.simulations.export.simulation_validate": [[127, "module-kqcircuits.simulations.export.simulation_validate"]], "kqcircuits.simulations.export.solution": [[128, "module-kqcircuits.simulations.export.solution"]], "kqcircuits.simulations.export.sonnet": [[129, "kqcircuits-simulations-export-sonnet"]], "kqcircuits.simulations.export.sonnet.parser": [[130, "module-kqcircuits.simulations.export.sonnet.parser"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[131, "module-kqcircuits.simulations.export.sonnet.sonnet_export"]], "kqcircuits.simulations.export.util": [[132, "module-kqcircuits.simulations.export.util"]], "kqcircuits.simulations.partition_region": [[133, "module-kqcircuits.simulations.partition_region"]], "kqcircuits.simulations.port": [[134, "module-kqcircuits.simulations.port"]], "kqcircuits.simulations.post_process": [[135, "module-kqcircuits.simulations.post_process"]], "kqcircuits.simulations.simulation": [[136, "module-kqcircuits.simulations.simulation"]], "kqcircuits.simulations.single_element_simulation": [[137, "module-kqcircuits.simulations.single_element_simulation"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[138, "module-kqcircuits.simulations.single_xmons_full_chip_sim"]], "kqcircuits.simulations.waveguides_sim": [[139, "module-kqcircuits.simulations.waveguides_sim"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[140, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[141, "module-kqcircuits.simulations.xmons_direct_coupling_sim"]], "kqcircuits.test_structures": [[142, "kqcircuits-test-structures"]], "kqcircuits.test_structures.airbridge_dc": [[143, "module-kqcircuits.test_structures.airbridge_dc"]], "kqcircuits.test_structures.cross_test": [[144, "module-kqcircuits.test_structures.cross_test"]], "kqcircuits.test_structures.junction_test_pads": [[145, "kqcircuits-test-structures-junction-test-pads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[146, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[147, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"]], "kqcircuits.test_structures.stripes_test": [[148, "module-kqcircuits.test_structures.stripes_test"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[149, "module-kqcircuits.test_structures.stripes_test_increasing_width"]], "kqcircuits.test_structures.test_structure": [[150, "module-kqcircuits.test_structures.test_structure"]], "kqcircuits.test_structures.tsv_test_pattern": [[151, "module-kqcircuits.test_structures.tsv_test_pattern"]], "kqcircuits.util": [[152, "kqcircuits-util"]], "kqcircuits.util.area": [[153, "module-kqcircuits.util.area"]], "kqcircuits.util.count_instances": [[154, "module-kqcircuits.util.count_instances"]], "kqcircuits.util.coupler_lib": [[155, "module-kqcircuits.util.coupler_lib"]], "kqcircuits.util.deep_delete": [[156, "module-kqcircuits.util.deep_delete"]], "kqcircuits.util.defaults_helper": [[157, "module-kqcircuits.util.defaults_helper"]], "kqcircuits.util.dependencies": [[158, "module-kqcircuits.util.dependencies"]], "kqcircuits.util.edit_node_plugin": [[159, "module-kqcircuits.util.edit_node_plugin"]], "kqcircuits.util.error_on_cell": [[160, "module-kqcircuits.util.error_on_cell"]], "kqcircuits.util.export_helper": [[161, "module-kqcircuits.util.export_helper"]], "kqcircuits.util.geometry_helper": [[162, "module-kqcircuits.util.geometry_helper"]], "kqcircuits.util.geometry_json_encoder": [[163, "module-kqcircuits.util.geometry_json_encoder"]], "kqcircuits.util.groundgrid": [[164, "module-kqcircuits.util.groundgrid"]], "kqcircuits.util.gui_helper": [[165, "module-kqcircuits.util.gui_helper"]], "kqcircuits.util.import_helper": [[166, "module-kqcircuits.util.import_helper"]], "kqcircuits.util.instance_hierarchy_helpers": [[167, "module-kqcircuits.util.instance_hierarchy_helpers"]], "kqcircuits.util.label": [[168, "module-kqcircuits.util.label"]], "kqcircuits.util.label_polygons": [[169, "module-kqcircuits.util.label_polygons"]], "kqcircuits.util.layout_to_code": [[170, "module-kqcircuits.util.layout_to_code"]], "kqcircuits.util.library_helper": [[171, "module-kqcircuits.util.library_helper"]], "kqcircuits.util.load_save_layout": [[172, "module-kqcircuits.util.load_save_layout"]], "kqcircuits.util.log_router": [[173, "module-kqcircuits.util.log_router"]], "kqcircuits.util.merge": [[174, "module-kqcircuits.util.merge"]], "kqcircuits.util.netlist_extraction": [[175, "module-kqcircuits.util.netlist_extraction"]], "kqcircuits.util.netlist_graph": [[176, "module-kqcircuits.util.netlist_graph"]], "kqcircuits.util.parameters": [[177, "module-kqcircuits.util.parameters"]], "kqcircuits.util.plugin_startup": [[178, "module-kqcircuits.util.plugin_startup"]], "kqcircuits.util.refpoints": [[179, "module-kqcircuits.util.refpoints"]], "kqcircuits.util.replace_junctions": [[180, "module-kqcircuits.util.replace_junctions"]], "kqcircuits.util.symmetric_polygons": [[181, "module-kqcircuits.util.symmetric_polygons"]], "Citing": [[182, "citing"]], "Contributing": [[183, "contributing"]], "Versioning": [[183, "versioning"]], "Architecture": [[184, "architecture"]], "Elements": [[184, "elements"]], "PCell parameters": [[184, "pcell-parameters"]], "Libraries": [[184, "libraries"], [205, "libraries"]], "pya resolver": [[184, "pya-resolver"]], "Coding Style": [[185, "coding-style"]], "Containers": [[186, "containers"]], "CLI usage": [[186, "cli-usage"]], "Docker CI usage": [[186, "docker-ci-usage"]], "Singularity usage": [[186, "singularity-usage"]], "Documentation": [[187, "documentation"], [208, "documentation"]], "Developer Guide": [[188, "developer-guide"]], "Developer GUI Setup": [[189, "developer-gui-setup"]], "Prerequisites": [[189, "prerequisites"], [190, "prerequisites"], [221, "prerequisites"]], "Python": [[189, "python"]], "Sources": [[189, "sources"]], "Install": [[189, "install"]], "Unlinking": [[189, "unlinking"]], "Update": [[189, "update"]], "Secondary install": [[189, "secondary-install"]], "Manual installation": [[189, "manual-installation"]], "Symlinks in Linux or MacOS": [[189, "symlinks-in-linux-or-macos"]], "Symlinks in Windows": [[189, "symlinks-in-windows"]], "Installing dependencies": [[189, "installing-dependencies"]], "Developer Standalone module Setup": [[190, "developer-standalone-module-setup"]], "Installation": [[190, "installation"], [209, "installation"]], "1. Basic installation": [[190, "basic-installation"]], "2. Reproducible, Secure Installation": [[190, "reproducible-secure-installation"]], "3. KQCircuits exclusive python environment": [[190, "kqcircuits-exclusive-python-environment"]], "Dependency extensions": [[190, "dependency-extensions"]], "PyPI Installation": [[190, "pypi-installation"]], "Usage": [[190, "usage"], [227, "usage"]], "Jupyter notebook usage": [[190, "jupyter-notebook-usage"]], "Updating the required dependencies": [[190, "updating-the-required-dependencies"]], "Testing": [[191, "testing"]], "Unit tests": [[191, "unit-tests"]], "First look around": [[192, "first-look-around"]], "Introduction to Elements": [[192, "introduction-to-elements"]], "Placing Elements": [[193, "placing-elements"]], "Modifying Element parameters": [[193, "modifying-element-parameters"]], "Converting elements placed in GUI into code": [[194, "converting-elements-placed-in-gui-into-code"]], "Useful commands": [[195, "useful-commands"]], "Hotkeys": [[195, "hotkeys"]], "KQCircuits menu": [[195, "kqcircuits-menu"]], "Manual workflow tutorial": [[196, "manual-workflow-tutorial"]], "Generate Demo chip": [[196, "generate-demo-chip"]], "Convert the chip cell to static": [[196, "convert-the-chip-cell-to-static"]], "Change the shape of a waveguide": [[196, "change-the-shape-of-a-waveguide"]], "Change the location of an element": [[196, "change-the-location-of-an-element"]], "Modify element parameters": [[196, "modify-element-parameters"]], "Add new elements": [[196, "add-new-elements"]], "Adding ground grid": [[196, "adding-ground-grid"]], "Using waveguides": [[197, "using-waveguides"]], "Modifying waveguides": [[197, "modifying-waveguides"]], "Editing WaveguideComposite Nodes": [[197, "editing-waveguidecomposite-nodes"]], "GUI Features": [[198, "gui-features"]], "Getting started": [[199, "getting-started"], [204, "getting-started"]], "Faces": [[200, "faces"]], "Using faces": [[200, "using-faces"]], "Creating shapes in faces": [[200, "creating-shapes-in-faces"]], "Placing elements on faces": [[200, "placing-elements-on-faces"]], "Python workflow": [[201, "python-workflow"]], "KQCircuits Layers": [[202, "kqcircuits-layers"]], "Detailed examples": [[203, "detailed-examples"]], "Example of defining an Element": [[203, "example-of-defining-an-element"]], "Example of defining a Chip and inserting elements into it": [[203, "example-of-defining-a-chip-and-inserting-elements-into-it"]], "Defining a custom element": [[204, "defining-a-custom-element"]], "Defining a custom chip": [[204, "defining-a-custom-chip"]], "Structure of Element code": [[205, "structure-of-element-code"]], "Element class": [[205, "element-class"]], "Parameters": [[205, "parameters"]], "Build": [[205, "build"]], "Refpoints": [[206, "refpoints"]], "Using refpoints": [[206, "using-refpoints"]], "Port refpoints": [[206, "port-refpoints"]], "KQCircuits Salt package": [[207, "kqcircuits-salt-package"]], "Installing KQCircuits Salt Package": [[207, "installing-kqcircuits-salt-package"]], "Setting up a user package directory": [[207, "setting-up-a-user-package-directory"]], "Upgrading or Removing Salt Package": [[207, "upgrading-or-removing-salt-package"]], "Release Notes": [[207, "release-notes"]], "KQC logo": [[208, "logo"]], "Indices and tables": [[208, "indices-and-tables"]], "Installing KLayout": [[210, "installing-klayout"]], "Known installation issues": [[211, "known-installation-issues"]], "Installing different Python package versions to KLayout manually": [[211, "installing-different-python-package-versions-to-klayout-manually"]], "Support": [[212, "support"]], "Trademarks": [[213, "trademarks"]], "Custom configuration": [[214, "custom-configuration"]], "Configuring sample holders": [[214, "configuring-sample-holders"]], "Configuring faces": [[214, "configuring-faces"]], "Layer configuration files": [[214, "layer-configuration-files"]], "Adding a new face": [[214, "adding-a-new-face"]], "General Structure and Miscellaneous Utilities": [[215, "general-structure-and-miscellaneous-utilities"]], "File system hierarchy": [[215, "file-system-hierarchy"]], "Miscellaneous Utilities": [[215, "miscellaneous-utilities"]], "Opening Element or Chip from an IDE": [[215, "opening-element-or-chip-from-an-ide"]], "User Guide": [[216, "user-guide"]], "Macro and script development": [[217, "macro-and-script-development"]], "Running the first example": [[217, "running-the-first-example"]], "Interacting with the KLayout application": [[217, "interacting-with-the-klayout-application"]], "Creating a new panel": [[217, "creating-a-new-panel"]], "Accessing the currently active panel": [[217, "accessing-the-currently-active-panel"]], "Using KLayoutView": [[217, "using-klayoutview"]], "Debugger": [[217, "debugger"]], "Reloading libraries": [[217, "reloading-libraries"]], "Examples": [[217, "examples"]], "Mask export": [[218, "mask-export"]], "Tutorial": [[218, "tutorial"]], "Basic mask script and export": [[218, "basic-mask-script-and-export"]], "Ground grid": [[218, "ground-grid"]], "Adding and modifying chips": [[218, "adding-and-modifying-chips"]], "Multi-face masks": [[218, "multi-face-masks"]], "Composite mask maps": [[218, "composite-mask-maps"]], "Elmer remote simulations workflow": [[219, "elmer-remote-simulations-workflow"]], "Run and export in one line": [[220, "run-and-export-in-one-line"]], "Gmsh/Elmer export": [[221, "gmsh-elmer-export"]], "Exported simulation structure": [[221, "exported-simulation-structure"]], "Parallelization": [[221, "parallelization"]], "Simulation features": [[222, "simulation-features"]], "S-parameter matrix": [[222, "s-parameter-matrix"]], "Capacitance matrix": [[222, "capacitance-matrix"]], "Eigenmode": [[222, "eigenmode"]], "Energy integrals and participation ratio": [[222, "energy-integrals-and-participation-ratio"]], "Cross-section simulations": [[222, "cross-section-simulations"]], "Simulation objects": [[223, "simulation-objects"]], "The Simulation class": [[223, "the-simulation-class"]], "Box": [[223, "box"]], "Ports": [[223, "ports"]], "Face stack": [[223, "face-stack"]], "Simulation subclass": [[223, "simulation-subclass"]], "Single element subclass": [[223, "single-element-subclass"]], "General subclass": [[223, "general-subclass"]], "Geometry sweeps": [[223, "geometry-sweeps"]], "Export functions": [[224, "export-functions"]], "Ansys export": [[224, "ansys-export"]], "Elmer export": [[224, "elmer-export"]], "Sonnet export": [[224, "sonnet-export"]], "Geometry from Klayout GUI": [[224, "geometry-from-klayout-gui"]], "External simulation tools": [[225, "external-simulation-tools"]], "Terminology": [[226, "terminology"]]}, "indexentries": {"kqcircuits": [[1, "module-kqcircuits"]], "module": [[1, "module-kqcircuits"], [2, "module-kqcircuits.chips"], [3, "module-kqcircuits.chips.airbridge_crossings"], [4, "module-kqcircuits.chips.airbridge_dc_test"], [5, "module-kqcircuits.chips.chip"], [6, "module-kqcircuits.chips.crossing_twoface"], [7, "module-kqcircuits.chips.daisy_woven"], [8, "module-kqcircuits.chips.dc_test"], [9, "module-kqcircuits.chips.demo"], [10, "module-kqcircuits.chips.demo_twoface"], [11, "module-kqcircuits.chips.empty"], [12, "module-kqcircuits.chips.junction_test"], [13, "module-kqcircuits.chips.junction_test2"], [14, "module-kqcircuits.chips.launchers"], [15, "module-kqcircuits.chips.lithography_test"], [16, "module-kqcircuits.chips.lithography_test_twoface"], [17, "module-kqcircuits.chips.munch_qubits"], [18, "module-kqcircuits.chips.quality_factor"], [19, "module-kqcircuits.chips.quality_factor_twoface"], [20, "module-kqcircuits.chips.sample_holder_test"], [21, "module-kqcircuits.chips.shaping"], [22, "module-kqcircuits.chips.simple"], [23, "module-kqcircuits.chips.single_xmons"], [24, "module-kqcircuits.chips.stripes"], [25, "module-kqcircuits.chips.tsv_test"], [26, "module-kqcircuits.chips.xmons_direct_coupling"], [27, "module-kqcircuits.defaults"], [28, "module-kqcircuits.elements"], [29, "module-kqcircuits.elements.airbridge_connection"], [30, "module-kqcircuits.elements.airbridges"], [31, "module-kqcircuits.elements.airbridges.airbridge"], [32, "module-kqcircuits.elements.airbridges.airbridge_multi_face"], [33, "module-kqcircuits.elements.airbridges.airbridge_rectangular"], [34, "module-kqcircuits.elements.capacitive_x_coupler"], [35, "module-kqcircuits.elements.chip_frame"], [36, "module-kqcircuits.elements.circular_capacitor"], [37, "module-kqcircuits.elements.element"], [38, "module-kqcircuits.elements.finger_capacitor_square"], [39, "module-kqcircuits.elements.finger_capacitor_taper"], [40, "module-kqcircuits.elements.flip_chip_connectors"], [41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"], [42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"], [43, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"], [44, "module-kqcircuits.elements.fluxlines"], [45, "module-kqcircuits.elements.fluxlines.fluxline"], [46, "module-kqcircuits.elements.fluxlines.fluxline_standard"], [47, "module-kqcircuits.elements.fluxlines.fluxline_straight"], [48, "module-kqcircuits.elements.hanger_resonator"], [49, "module-kqcircuits.elements.launcher"], [50, "module-kqcircuits.elements.launcher_dc"], [51, "module-kqcircuits.elements.markers"], [52, "module-kqcircuits.elements.markers.marker"], [53, "module-kqcircuits.elements.markers.marker_standard"], [54, "module-kqcircuits.elements.markers.mask_marker_fc"], [55, "module-kqcircuits.elements.meander"], [56, "module-kqcircuits.elements.quarter_wave_cpw_resonator"], [57, "module-kqcircuits.elements.smooth_capacitor"], [58, "module-kqcircuits.elements.spiral_capacitor"], [59, "module-kqcircuits.elements.spiral_resonator_polygon"], [60, "module-kqcircuits.elements.tsvs"], [61, "module-kqcircuits.elements.tsvs.tsv"], [62, "module-kqcircuits.elements.tsvs.tsv_ellipse"], [63, "module-kqcircuits.elements.tsvs.tsv_standard"], [64, "module-kqcircuits.elements.waveguide_composite"], [65, "module-kqcircuits.elements.waveguide_coplanar"], [66, "module-kqcircuits.elements.waveguide_coplanar_curved"], [67, "module-kqcircuits.elements.waveguide_coplanar_splitter"], [68, "module-kqcircuits.elements.waveguide_coplanar_straight"], [69, "module-kqcircuits.elements.waveguide_coplanar_taper"], [70, "module-kqcircuits.junctions"], [71, "module-kqcircuits.junctions.junction"], [72, "module-kqcircuits.junctions.manhattan"], [73, "module-kqcircuits.junctions.manhattan_single_junction"], [74, "module-kqcircuits.junctions.no_squid"], [75, "module-kqcircuits.junctions.sim"], [76, "module-kqcircuits.junctions.squid"], [77, "module-kqcircuits.junctions.super_inductor"], [78, "module-kqcircuits.klayout_view"], [79, "module-kqcircuits.layer_cluster"], [80, "module-kqcircuits.layer_config"], [81, "module-kqcircuits.layer_config.default_layer_config"], [82, "module-kqcircuits.layer_config.example_layer_config"], [83, "module-kqcircuits.masks"], [84, "module-kqcircuits.masks.mask_export"], [85, "module-kqcircuits.masks.mask_layout"], [86, "module-kqcircuits.masks.mask_set"], [87, "module-kqcircuits.masks.multi_face_mask_layout"], [88, "module-kqcircuits.pya_resolver"], [89, "module-kqcircuits.qubits"], [90, "module-kqcircuits.qubits.circular_transmon_single_island"], [91, "module-kqcircuits.qubits.concentric_transmon"], [92, "module-kqcircuits.qubits.double_pads"], [93, "module-kqcircuits.qubits.double_pads_splines"], [94, "module-kqcircuits.qubits.qubit"], [95, "module-kqcircuits.qubits.swissmon"], [96, "module-kqcircuits.run"], [97, "module-kqcircuits.simulations"], [98, "module-kqcircuits.simulations.airbridges_sim"], [99, "module-kqcircuits.simulations.cross_section_simulation"], [100, "module-kqcircuits.simulations.empty_simulation"], [102, "module-kqcircuits.simulations.epr.circular_capacitor"], [103, "module-kqcircuits.simulations.epr.circular_transmon_single_island"], [104, "module-kqcircuits.simulations.epr.double_pads"], [105, "module-kqcircuits.simulations.epr.example"], [106, "module-kqcircuits.simulations.epr.gui_config"], [107, "module-kqcircuits.simulations.epr.smooth_capacitor"], [108, "module-kqcircuits.simulations.epr.spiral_capacitor"], [109, "module-kqcircuits.simulations.epr.swissmon"], [110, "module-kqcircuits.simulations.epr.util"], [111, "module-kqcircuits.simulations.export"], [112, "module-kqcircuits.simulations.export.ansys"], [113, "module-kqcircuits.simulations.export.ansys.ansys_export"], [114, "module-kqcircuits.simulations.export.ansys.ansys_solution"], [115, "module-kqcircuits.simulations.export.cross_section"], [116, "module-kqcircuits.simulations.export.cross_section.cross_section_export"], [117, "module-kqcircuits.simulations.export.cross_section.cut_simulation"], [118, "module-kqcircuits.simulations.export.cross_section.epr_correction_export"], [119, "module-kqcircuits.simulations.export.elmer"], [120, "module-kqcircuits.simulations.export.elmer.elmer_export"], [121, "module-kqcircuits.simulations.export.elmer.elmer_solution"], [122, "module-kqcircuits.simulations.export.elmer.mesh_size_helpers"], [123, "module-kqcircuits.simulations.export.export_and_run"], [124, "module-kqcircuits.simulations.export.export_singularity"], [125, "module-kqcircuits.simulations.export.remote_export_and_run"], [126, "module-kqcircuits.simulations.export.simulation_export"], [127, "module-kqcircuits.simulations.export.simulation_validate"], [128, "module-kqcircuits.simulations.export.solution"], [129, "module-kqcircuits.simulations.export.sonnet"], [130, "module-kqcircuits.simulations.export.sonnet.parser"], [131, "module-kqcircuits.simulations.export.sonnet.sonnet_export"], [132, "module-kqcircuits.simulations.export.util"], [133, "module-kqcircuits.simulations.partition_region"], [134, "module-kqcircuits.simulations.port"], [135, "module-kqcircuits.simulations.post_process"], [136, "module-kqcircuits.simulations.simulation"], [137, "module-kqcircuits.simulations.single_element_simulation"], [138, "module-kqcircuits.simulations.single_xmons_full_chip_sim"], [139, "module-kqcircuits.simulations.waveguides_sim"], [140, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"], [141, "module-kqcircuits.simulations.xmons_direct_coupling_sim"], [142, "module-kqcircuits.test_structures"], [143, "module-kqcircuits.test_structures.airbridge_dc"], [144, "module-kqcircuits.test_structures.cross_test"], [145, "module-kqcircuits.test_structures.junction_test_pads"], [146, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"], [147, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"], [148, "module-kqcircuits.test_structures.stripes_test"], [149, "module-kqcircuits.test_structures.stripes_test_increasing_width"], [150, "module-kqcircuits.test_structures.test_structure"], [151, "module-kqcircuits.test_structures.tsv_test_pattern"], [152, "module-kqcircuits.util"], [153, "module-kqcircuits.util.area"], [154, "module-kqcircuits.util.count_instances"], [155, "module-kqcircuits.util.coupler_lib"], [156, "module-kqcircuits.util.deep_delete"], [157, "module-kqcircuits.util.defaults_helper"], [158, "module-kqcircuits.util.dependencies"], [159, "module-kqcircuits.util.edit_node_plugin"], [160, "module-kqcircuits.util.error_on_cell"], [161, "module-kqcircuits.util.export_helper"], [162, "module-kqcircuits.util.geometry_helper"], [163, "module-kqcircuits.util.geometry_json_encoder"], [164, "module-kqcircuits.util.groundgrid"], [165, "module-kqcircuits.util.gui_helper"], [166, "module-kqcircuits.util.import_helper"], [167, "module-kqcircuits.util.instance_hierarchy_helpers"], [168, "module-kqcircuits.util.label"], [169, "module-kqcircuits.util.label_polygons"], [170, "module-kqcircuits.util.layout_to_code"], [171, "module-kqcircuits.util.library_helper"], [172, "module-kqcircuits.util.load_save_layout"], [173, "module-kqcircuits.util.log_router"], [174, "module-kqcircuits.util.merge"], [175, "module-kqcircuits.util.netlist_extraction"], [176, "module-kqcircuits.util.netlist_graph"], [177, "module-kqcircuits.util.parameters"], [178, "module-kqcircuits.util.plugin_startup"], [179, "module-kqcircuits.util.refpoints"], [180, "module-kqcircuits.util.replace_junctions"], [181, "module-kqcircuits.util.symmetric_polygons"]], "kqcircuits.chips": [[2, "module-kqcircuits.chips"]], "airbridgecrossings (class in kqcircuits.chips.airbridge_crossings)": [[3, "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings"]], "build() (kqcircuits.chips.airbridge_crossings.airbridgecrossings method)": [[3, "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings.build"]], "kqcircuits.chips.airbridge_crossings": [[3, "module-kqcircuits.chips.airbridge_crossings"]], "airbridgedctest (class in kqcircuits.chips.airbridge_dc_test)": [[4, "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest"]], "build() (kqcircuits.chips.airbridge_dc_test.airbridgedctest method)": [[4, "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest.build"]], "kqcircuits.chips.airbridge_dc_test": [[4, "module-kqcircuits.chips.airbridge_dc_test"]], "chip (class in kqcircuits.chips.chip)": [[5, "kqcircuits.chips.chip.Chip"]], "library_description (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_NAME"]], "library_path (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_PATH"]], "can_create_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.can_create_from_shape_impl"]], "display_text_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.display_text_impl"]], "get_box() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_box"]], "get_filter_regions() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_filter_regions"]], "get_ground_bump_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_ground_bump_locations"]], "get_ground_tsv_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_ground_tsv_locations"]], "get_launcher_assignments() (kqcircuits.chips.chip.chip static method)": [[5, "kqcircuits.chips.chip.Chip.get_launcher_assignments"]], "insert_filtered_elements() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.insert_filtered_elements"]], "kqcircuits.chips.chip": [[5, "module-kqcircuits.chips.chip"]], "make_grid_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.make_grid_locations"]], "merge_layout_layers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.merge_layout_layers"]], "merge_layout_layers_on_face() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.merge_layout_layers_on_face"]], "parameters_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.parameters_from_shape_impl"]], "post_build() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.post_build"]], "produce_frame() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_frame"]], "produce_ground_grid() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_ground_grid"]], "produce_ground_on_face_grid() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_ground_on_face_grid"]], "produce_junction_tests() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_junction_tests"]], "produce_launchers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_launchers"]], "produce_n_launchers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_n_launchers"]], "produce_opt_lit_tests() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_opt_lit_tests"]], "produce_structures() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_structures"]], "transformation_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.transformation_from_shape_impl"]], "crossingtwoface (class in kqcircuits.chips.crossing_twoface)": [[6, "kqcircuits.chips.crossing_twoface.CrossingTwoface"]], "build() (kqcircuits.chips.crossing_twoface.crossingtwoface method)": [[6, "kqcircuits.chips.crossing_twoface.CrossingTwoface.build"]], "kqcircuits.chips.crossing_twoface": [[6, "module-kqcircuits.chips.crossing_twoface"]], "daisywoven (class in kqcircuits.chips.daisy_woven)": [[7, "kqcircuits.chips.daisy_woven.DaisyWoven"]], "build() (kqcircuits.chips.daisy_woven.daisywoven method)": [[7, "kqcircuits.chips.daisy_woven.DaisyWoven.build"]], "kqcircuits.chips.daisy_woven": [[7, "module-kqcircuits.chips.daisy_woven"]], "dctest (class in kqcircuits.chips.dc_test)": [[8, "kqcircuits.chips.dc_test.DcTest"]], "build() (kqcircuits.chips.dc_test.dctest method)": [[8, "kqcircuits.chips.dc_test.DcTest.build"]], "kqcircuits.chips.dc_test": [[8, "module-kqcircuits.chips.dc_test"]], "demo (class in kqcircuits.chips.demo)": [[9, "kqcircuits.chips.demo.Demo"]], "build() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.build"]], "kqcircuits.chips.demo": [[9, "module-kqcircuits.chips.demo"]], "produce_control_lines() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_control_lines"]], "produce_coupler() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_coupler"]], "produce_couplers() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_couplers"]], "produce_driveline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_driveline"]], "produce_fluxline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_fluxline"]], "produce_junction_tests() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_junction_tests"]], "produce_probeline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_probeline"]], "produce_probelines() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_probelines"]], "produce_qubit() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_qubit"]], "produce_qubits() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_qubits"]], "produce_readout_structure() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_readout_structure"]], "produce_readout_structures() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_readout_structures"]], "demotwoface (class in kqcircuits.chips.demo_twoface)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface"]], "build() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.build"]], "kqcircuits.chips.demo_twoface": [[10, "module-kqcircuits.chips.demo_twoface"]], "produce_control_lines() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_control_lines"]], "produce_coupler() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_coupler"]], "produce_couplers() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_couplers"]], "produce_driveline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_driveline"]], "produce_fluxline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_fluxline"]], "produce_probeline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_probeline"]], "produce_probelines() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_probelines"]], "produce_qubit() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_qubit"]], "produce_qubits() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_qubits"]], "produce_readout_structure() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_readout_structure"]], "produce_readout_structures() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_readout_structures"]], "empty (class in kqcircuits.chips.empty)": [[11, "kqcircuits.chips.empty.Empty"]], "build() (kqcircuits.chips.empty.empty method)": [[11, "kqcircuits.chips.empty.Empty.build"]], "kqcircuits.chips.empty": [[11, "module-kqcircuits.chips.empty"]], "make_empty_area() (kqcircuits.chips.empty.empty method)": [[11, "kqcircuits.chips.empty.Empty.make_empty_area"]], "junctiontest (class in kqcircuits.chips.junction_test)": [[12, "kqcircuits.chips.junction_test.JunctionTest"]], "build() (kqcircuits.chips.junction_test.junctiontest method)": [[12, "kqcircuits.chips.junction_test.JunctionTest.build"]], "kqcircuits.chips.junction_test": [[12, "module-kqcircuits.chips.junction_test"]], "junctiontest2 (class in kqcircuits.chips.junction_test2)": [[13, "kqcircuits.chips.junction_test2.JunctionTest2"]], "build() (kqcircuits.chips.junction_test2.junctiontest2 method)": [[13, "kqcircuits.chips.junction_test2.JunctionTest2.build"]], "kqcircuits.chips.junction_test2": [[13, "module-kqcircuits.chips.junction_test2"]], "launchers (class in kqcircuits.chips.launchers)": [[14, "kqcircuits.chips.launchers.Launchers"]], "build() (kqcircuits.chips.launchers.launchers method)": [[14, "kqcircuits.chips.launchers.Launchers.build"]], "kqcircuits.chips.launchers": [[14, "module-kqcircuits.chips.launchers"]], "lithographytest (class in kqcircuits.chips.lithography_test)": [[15, "kqcircuits.chips.lithography_test.LithographyTest"]], "build() (kqcircuits.chips.lithography_test.lithographytest method)": [[15, "kqcircuits.chips.lithography_test.LithographyTest.build"]], "create_pattern() (kqcircuits.chips.lithography_test.lithographytest method)": [[15, "kqcircuits.chips.lithography_test.LithographyTest.create_pattern"]], "kqcircuits.chips.lithography_test": [[15, "module-kqcircuits.chips.lithography_test"]], "lithographytesttwoface (class in kqcircuits.chips.lithography_test_twoface)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface"]], "build() (kqcircuits.chips.lithography_test_twoface.lithographytesttwoface method)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface.build"]], "create_pattern() (kqcircuits.chips.lithography_test_twoface.lithographytesttwoface method)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface.create_pattern"]], "kqcircuits.chips.lithography_test_twoface": [[16, "module-kqcircuits.chips.lithography_test_twoface"]], "munchqubits (class in kqcircuits.chips.munch_qubits)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits"]], "build() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.build"]], "kqcircuits.chips.munch_qubits": [[17, "module-kqcircuits.chips.munch_qubits"]], "produce_coupler() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_coupler"]], "produce_drivelines() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_drivelines"]], "produce_probeline() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_probeline"]], "produce_qubits() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_qubits"]], "produce_readout_resonators() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_readout_resonators"]], "qualityfactor (class in kqcircuits.chips.quality_factor)": [[18, "kqcircuits.chips.quality_factor.QualityFactor"]], "build() (kqcircuits.chips.quality_factor.qualityfactor method)": [[18, "kqcircuits.chips.quality_factor.QualityFactor.build"]], "kqcircuits.chips.quality_factor": [[18, "module-kqcircuits.chips.quality_factor"]], "qualityfactortwoface (class in kqcircuits.chips.quality_factor_twoface)": [[19, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface"]], "build() (kqcircuits.chips.quality_factor_twoface.qualityfactortwoface method)": [[19, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface.build"]], "kqcircuits.chips.quality_factor_twoface": [[19, "module-kqcircuits.chips.quality_factor_twoface"]], "produce_resonator() (kqcircuits.chips.quality_factor_twoface.qualityfactortwoface method)": [[19, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface.produce_resonator"]], "sampleholdertest (class in kqcircuits.chips.sample_holder_test)": [[20, "kqcircuits.chips.sample_holder_test.SampleHolderTest"]], "build() (kqcircuits.chips.sample_holder_test.sampleholdertest method)": [[20, "kqcircuits.chips.sample_holder_test.SampleHolderTest.build"]], "kqcircuits.chips.sample_holder_test": [[20, "module-kqcircuits.chips.sample_holder_test"]], "shaping (class in kqcircuits.chips.shaping)": [[21, "kqcircuits.chips.shaping.Shaping"]], "build() (kqcircuits.chips.shaping.shaping method)": [[21, "kqcircuits.chips.shaping.Shaping.build"]], "kqcircuits.chips.shaping": [[21, "module-kqcircuits.chips.shaping"]], "simple (class in kqcircuits.chips.simple)": [[22, "kqcircuits.chips.simple.Simple"]], "build() (kqcircuits.chips.simple.simple method)": [[22, "kqcircuits.chips.simple.Simple.build"]], "kqcircuits.chips.simple": [[22, "module-kqcircuits.chips.simple"]], "singlexmons (class in kqcircuits.chips.single_xmons)": [[23, "kqcircuits.chips.single_xmons.SingleXmons"]], "build() (kqcircuits.chips.single_xmons.singlexmons method)": [[23, "kqcircuits.chips.single_xmons.SingleXmons.build"]], "kqcircuits.chips.single_xmons": [[23, "module-kqcircuits.chips.single_xmons"]], "launchers (kqcircuits.chips.single_xmons.singlexmons attribute)": [[23, "kqcircuits.chips.single_xmons.SingleXmons.launchers"]], "qubits_refpoints (kqcircuits.chips.single_xmons.singlexmons attribute)": [[23, "kqcircuits.chips.single_xmons.SingleXmons.qubits_refpoints"]], "stripes (class in kqcircuits.chips.stripes)": [[24, "kqcircuits.chips.stripes.Stripes"]], "build() (kqcircuits.chips.stripes.stripes method)": [[24, "kqcircuits.chips.stripes.Stripes.build"]], "kqcircuits.chips.stripes": [[24, "module-kqcircuits.chips.stripes"]], "tsvtest (class in kqcircuits.chips.tsv_test)": [[25, "kqcircuits.chips.tsv_test.TsvTest"]], "build() (kqcircuits.chips.tsv_test.tsvtest method)": [[25, "kqcircuits.chips.tsv_test.TsvTest.build"]], "create_xsection() (kqcircuits.chips.tsv_test.tsvtest method)": [[25, "kqcircuits.chips.tsv_test.TsvTest.create_xsection"]], "kqcircuits.chips.tsv_test": [[25, "module-kqcircuits.chips.tsv_test"]], "xmonsdirectcoupling (class in kqcircuits.chips.xmons_direct_coupling)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling"]], "build() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.build"]], "kqcircuits.chips.xmons_direct_coupling": [[26, "module-kqcircuits.chips.xmons_direct_coupling"]], "produce_qubits() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.produce_qubits"]], "produce_readout_resonator() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.produce_readout_resonator"]], "kqcircuits.defaults": [[27, "module-kqcircuits.defaults"]], "kqcircuits.elements": [[28, "module-kqcircuits.elements"]], "airbridgeconnection (class in kqcircuits.elements.airbridge_connection)": [[29, "kqcircuits.elements.airbridge_connection.AirbridgeConnection"]], "build() (kqcircuits.elements.airbridge_connection.airbridgeconnection method)": [[29, "kqcircuits.elements.airbridge_connection.AirbridgeConnection.build"]], "kqcircuits.elements.airbridge_connection": [[29, "module-kqcircuits.elements.airbridge_connection"]], "kqcircuits.elements.airbridges": [[30, "module-kqcircuits.elements.airbridges"]], "airbridge (class in kqcircuits.elements.airbridges.airbridge)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge"]], "create() (kqcircuits.elements.airbridges.airbridge.airbridge class method)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge.create"]], "default_type (kqcircuits.elements.airbridges.airbridge.airbridge attribute)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge.default_type"]], "kqcircuits.elements.airbridges.airbridge": [[31, "module-kqcircuits.elements.airbridges.airbridge"]], "transformation_from_shape_impl() (kqcircuits.elements.airbridges.airbridge.airbridge method)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge.transformation_from_shape_impl"]], "airbridgemultiface (class in kqcircuits.elements.airbridges.airbridge_multi_face)": [[32, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace"]], "build() (kqcircuits.elements.airbridges.airbridge_multi_face.airbridgemultiface method)": [[32, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace.build"]], "default_type (kqcircuits.elements.airbridges.airbridge_multi_face.airbridgemultiface attribute)": [[32, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace.default_type"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[32, "module-kqcircuits.elements.airbridges.airbridge_multi_face"]], "airbridgerectangular (class in kqcircuits.elements.airbridges.airbridge_rectangular)": [[33, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular"]], "build() (kqcircuits.elements.airbridges.airbridge_rectangular.airbridgerectangular method)": [[33, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular.build"]], "default_type (kqcircuits.elements.airbridges.airbridge_rectangular.airbridgerectangular attribute)": [[33, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular.default_type"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[33, "module-kqcircuits.elements.airbridges.airbridge_rectangular"]], "capacitivexcoupler (class in kqcircuits.elements.capacitive_x_coupler)": [[34, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler"]], "build() (kqcircuits.elements.capacitive_x_coupler.capacitivexcoupler method)": [[34, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler.build"]], "get_sim_ports() (kqcircuits.elements.capacitive_x_coupler.capacitivexcoupler class method)": [[34, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler.get_sim_ports"]], "kqcircuits.elements.capacitive_x_coupler": [[34, "module-kqcircuits.elements.capacitive_x_coupler"]], "chipframe (class in kqcircuits.elements.chip_frame)": [[35, "kqcircuits.elements.chip_frame.ChipFrame"]], "build() (kqcircuits.elements.chip_frame.chipframe method)": [[35, "kqcircuits.elements.chip_frame.ChipFrame.build"]], "kqcircuits.elements.chip_frame": [[35, "module-kqcircuits.elements.chip_frame"]], "circularcapacitor (class in kqcircuits.elements.circular_capacitor)": [[36, "kqcircuits.elements.circular_capacitor.CircularCapacitor"]], "build() (kqcircuits.elements.circular_capacitor.circularcapacitor method)": [[36, "kqcircuits.elements.circular_capacitor.CircularCapacitor.build"]], "get_sim_ports() (kqcircuits.elements.circular_capacitor.circularcapacitor class method)": [[36, "kqcircuits.elements.circular_capacitor.CircularCapacitor.get_sim_ports"]], "kqcircuits.elements.circular_capacitor": [[36, "module-kqcircuits.elements.circular_capacitor"]], "element (class in kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.Element"]], "library_description (kqcircuits.elements.element.element attribute)": [[37, "kqcircuits.elements.element.Element.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.elements.element.element attribute)": [[37, "kqcircuits.elements.element.Element.LIBRARY_NAME"]], "library_path (kqcircuits.elements.element.element attribute)": [[37, "kqcircuits.elements.element.Element.LIBRARY_PATH"]], "add_element() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.add_element"]], "add_port() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.add_port"]], "add_protection() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.add_protection"]], "build() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.build"]], "copy_port() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.copy_port"]], "create() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.create"]], "create_cell_from_shape() (kqcircuits.elements.element.element static method)": [[37, "kqcircuits.elements.element.Element.create_cell_from_shape"]], "create_subtype() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.create_subtype"]], "create_with_refpoints() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.create_with_refpoints"]], "display_text_impl() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.display_text_impl"]], "etch_opposite_face_impl() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.etch_opposite_face_impl"]], "face() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.face"]], "get_layer() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.get_layer"]], "get_refpoints() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.get_refpoints"]], "get_refpoints() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.get_refpoints"]], "get_schema() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.get_schema"]], "get_sim_ports() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.get_sim_ports"]], "insert_cell() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.insert_cell"]], "insert_cell_into() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.insert_cell_into"]], "kqcircuits.elements.element": [[37, "module-kqcircuits.elements.element"]], "parameter_order_key() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.parameter_order_key"]], "pcell_params_by_name() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.pcell_params_by_name"]], "post_build() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.post_build"]], "produce_impl() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.produce_impl"]], "raise_error_on_cell() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.raise_error_on_cell"]], "resolve_face() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.resolve_face"]], "fingercapacitorsquare (class in kqcircuits.elements.finger_capacitor_square)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare"]], "add_waveguides() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.add_waveguides"]], "build() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.build"]], "can_create_from_shape_impl() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.can_create_from_shape_impl"]], "cut_region() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.cut_region"]], "eval_a2() (in module kqcircuits.elements.finger_capacitor_square)": [[38, "kqcircuits.elements.finger_capacitor_square.eval_a2"]], "eval_b2() (in module kqcircuits.elements.finger_capacitor_square)": [[38, "kqcircuits.elements.finger_capacitor_square.eval_b2"]], "finger_area_length() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.finger_area_length"]], "finger_area_width() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.finger_area_width"]], "get_ground_region() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.get_ground_region"]], "get_sim_ports() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare class method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.get_sim_ports"]], "kqcircuits.elements.finger_capacitor_square": [[38, "module-kqcircuits.elements.finger_capacitor_square"]], "fingercapacitortaper (class in kqcircuits.elements.finger_capacitor_taper)": [[39, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper"]], "build() (kqcircuits.elements.finger_capacitor_taper.fingercapacitortaper method)": [[39, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper.build"]], "can_create_from_shape_impl() (kqcircuits.elements.finger_capacitor_taper.fingercapacitortaper method)": [[39, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper.can_create_from_shape_impl"]], "kqcircuits.elements.finger_capacitor_taper": [[39, "module-kqcircuits.elements.finger_capacitor_taper"]], "kqcircuits.elements.flip_chip_connectors": [[40, "module-kqcircuits.elements.flip_chip_connectors"]], "flipchipconnector (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector"]], "create() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector.flipchipconnector class method)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector.create"]], "default_type (kqcircuits.elements.flip_chip_connectors.flip_chip_connector.flipchipconnector attribute)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector.default_type"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"]], "flipchipconnectordc (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc)": [[42, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc"]], "build() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.flipchipconnectordc method)": [[42, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc.build"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"]], "flipchipconnectorrf (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf)": [[43, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf"]], "build() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.flipchipconnectorrf method)": [[43, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf.build"]], "get_sim_ports() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.flipchipconnectorrf class method)": [[43, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf.get_sim_ports"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[43, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"]], "kqcircuits.elements.fluxlines": [[44, "module-kqcircuits.elements.fluxlines"]], "fluxline (class in kqcircuits.elements.fluxlines.fluxline)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline"]], "create() (kqcircuits.elements.fluxlines.fluxline.fluxline class method)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline.create"]], "default_type (kqcircuits.elements.fluxlines.fluxline.fluxline attribute)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline.default_type"]], "kqcircuits.elements.fluxlines.fluxline": [[45, "module-kqcircuits.elements.fluxlines.fluxline"]], "fluxlinestandard (class in kqcircuits.elements.fluxlines.fluxline_standard)": [[46, "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard"]], "build() (kqcircuits.elements.fluxlines.fluxline_standard.fluxlinestandard method)": [[46, "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard.build"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[46, "module-kqcircuits.elements.fluxlines.fluxline_standard"]], "fluxlinestraight (class in kqcircuits.elements.fluxlines.fluxline_straight)": [[47, "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight"]], "build() (kqcircuits.elements.fluxlines.fluxline_straight.fluxlinestraight method)": [[47, "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight.build"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[47, "module-kqcircuits.elements.fluxlines.fluxline_straight"]], "hangerresonator (class in kqcircuits.elements.hanger_resonator)": [[48, "kqcircuits.elements.hanger_resonator.HangerResonator"]], "build() (kqcircuits.elements.hanger_resonator.hangerresonator method)": [[48, "kqcircuits.elements.hanger_resonator.HangerResonator.build"]], "get_sim_ports() (kqcircuits.elements.hanger_resonator.hangerresonator class method)": [[48, "kqcircuits.elements.hanger_resonator.HangerResonator.get_sim_ports"]], "kqcircuits.elements.hanger_resonator": [[48, "module-kqcircuits.elements.hanger_resonator"]], "launcher (class in kqcircuits.elements.launcher)": [[49, "kqcircuits.elements.launcher.Launcher"]], "build() (kqcircuits.elements.launcher.launcher method)": [[49, "kqcircuits.elements.launcher.Launcher.build"]], "kqcircuits.elements.launcher": [[49, "module-kqcircuits.elements.launcher"]], "launcherdc (class in kqcircuits.elements.launcher_dc)": [[50, "kqcircuits.elements.launcher_dc.LauncherDC"]], "build() (kqcircuits.elements.launcher_dc.launcherdc method)": [[50, "kqcircuits.elements.launcher_dc.LauncherDC.build"]], "kqcircuits.elements.launcher_dc": [[50, "module-kqcircuits.elements.launcher_dc"]], "kqcircuits.elements.markers": [[51, "module-kqcircuits.elements.markers"]], "marker (class in kqcircuits.elements.markers.marker)": [[52, "kqcircuits.elements.markers.marker.Marker"]], "create() (kqcircuits.elements.markers.marker.marker class method)": [[52, "kqcircuits.elements.markers.marker.Marker.create"]], "default_type (kqcircuits.elements.markers.marker.marker attribute)": [[52, "kqcircuits.elements.markers.marker.Marker.default_type"]], "get_marker_locations() (kqcircuits.elements.markers.marker.marker class method)": [[52, "kqcircuits.elements.markers.marker.Marker.get_marker_locations"]], "get_marker_region() (kqcircuits.elements.markers.marker.marker class method)": [[52, "kqcircuits.elements.markers.marker.Marker.get_marker_region"]], "kqcircuits.elements.markers.marker": [[52, "module-kqcircuits.elements.markers.marker"]], "produce_geometry() (kqcircuits.elements.markers.marker.marker method)": [[52, "kqcircuits.elements.markers.marker.Marker.produce_geometry"]], "markerstandard (class in kqcircuits.elements.markers.marker_standard)": [[53, "kqcircuits.elements.markers.marker_standard.MarkerStandard"]], "build() (kqcircuits.elements.markers.marker_standard.markerstandard method)": [[53, "kqcircuits.elements.markers.marker_standard.MarkerStandard.build"]], "kqcircuits.elements.markers.marker_standard": [[53, "module-kqcircuits.elements.markers.marker_standard"]], "maskmarkerfc (class in kqcircuits.elements.markers.mask_marker_fc)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc"]], "build() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.build"]], "create_cross() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc static method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.create_cross"]], "get_marker_locations() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc class method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.get_marker_locations"]], "get_marker_region() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc class method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.get_marker_region"]], "kqcircuits.elements.markers.mask_marker_fc": [[54, "module-kqcircuits.elements.markers.mask_marker_fc"]], "meander (class in kqcircuits.elements.meander)": [[55, "kqcircuits.elements.meander.Meander"]], "build() (kqcircuits.elements.meander.meander method)": [[55, "kqcircuits.elements.meander.Meander.build"]], "can_create_from_shape_impl() (kqcircuits.elements.meander.meander method)": [[55, "kqcircuits.elements.meander.Meander.can_create_from_shape_impl"]], "kqcircuits.elements.meander": [[55, "module-kqcircuits.elements.meander"]], "parameters_from_shape_impl() (kqcircuits.elements.meander.meander method)": [[55, "kqcircuits.elements.meander.Meander.parameters_from_shape_impl"]], "quarterwavecpwresonator (class in kqcircuits.elements.quarter_wave_cpw_resonator)": [[56, "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator"]], "build() (kqcircuits.elements.quarter_wave_cpw_resonator.quarterwavecpwresonator method)": [[56, "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator.build"]], "get_sim_ports() (kqcircuits.elements.quarter_wave_cpw_resonator.quarterwavecpwresonator class method)": [[56, "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator.get_sim_ports"]], "kqcircuits.elements.quarter_wave_cpw_resonator": [[56, "module-kqcircuits.elements.quarter_wave_cpw_resonator"]], "smoothcapacitor (class in kqcircuits.elements.smooth_capacitor)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor"]], "build() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.build"]], "can_create_from_shape_impl() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.can_create_from_shape_impl"]], "finger_polygon() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.finger_polygon"]], "get_finger_regions() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.get_finger_regions"]], "get_sim_ports() (kqcircuits.elements.smooth_capacitor.smoothcapacitor class method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.get_sim_ports"]], "insert_wg_joint() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.insert_wg_joint"]], "kqcircuits.elements.smooth_capacitor": [[57, "module-kqcircuits.elements.smooth_capacitor"]], "middle_gap_fill() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.middle_gap_fill"]], "segment_points() (in module kqcircuits.elements.smooth_capacitor)": [[57, "kqcircuits.elements.smooth_capacitor.segment_points"]], "super_smoothen_region() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.super_smoothen_region"]], "t_poly() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.t_poly"]], "unit_vector() (in module kqcircuits.elements.smooth_capacitor)": [[57, "kqcircuits.elements.smooth_capacitor.unit_vector"]], "spiralcapacitor (class in kqcircuits.elements.spiral_capacitor)": [[58, "kqcircuits.elements.spiral_capacitor.SpiralCapacitor"]], "build() (kqcircuits.elements.spiral_capacitor.spiralcapacitor method)": [[58, "kqcircuits.elements.spiral_capacitor.SpiralCapacitor.build"]], "can_create_from_shape_impl() (kqcircuits.elements.spiral_capacitor.spiralcapacitor method)": [[58, "kqcircuits.elements.spiral_capacitor.SpiralCapacitor.can_create_from_shape_impl"]], "get_sim_ports() (kqcircuits.elements.spiral_capacitor.spiralcapacitor class method)": [[58, "kqcircuits.elements.spiral_capacitor.SpiralCapacitor.get_sim_ports"]], "kqcircuits.elements.spiral_capacitor": [[58, "module-kqcircuits.elements.spiral_capacitor"]], "spiralresonatorpolygon (class in kqcircuits.elements.spiral_resonator_polygon)": [[59, "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon"]], "build() (kqcircuits.elements.spiral_resonator_polygon.spiralresonatorpolygon method)": [[59, "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon.build"]], "kqcircuits.elements.spiral_resonator_polygon": [[59, "module-kqcircuits.elements.spiral_resonator_polygon"]], "rectangular_parameters() (in module kqcircuits.elements.spiral_resonator_polygon)": [[59, "kqcircuits.elements.spiral_resonator_polygon.rectangular_parameters"]], "kqcircuits.elements.tsvs": [[60, "module-kqcircuits.elements.tsvs"]], "tsv (class in kqcircuits.elements.tsvs.tsv)": [[61, "kqcircuits.elements.tsvs.tsv.Tsv"]], "create() (kqcircuits.elements.tsvs.tsv.tsv class method)": [[61, "kqcircuits.elements.tsvs.tsv.Tsv.create"]], "default_type (kqcircuits.elements.tsvs.tsv.tsv attribute)": [[61, "kqcircuits.elements.tsvs.tsv.Tsv.default_type"]], "kqcircuits.elements.tsvs.tsv": [[61, "module-kqcircuits.elements.tsvs.tsv"]], "tsvellipse (class in kqcircuits.elements.tsvs.tsv_ellipse)": [[62, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse"]], "create_tsv_connector() (kqcircuits.elements.tsvs.tsv_ellipse.tsvellipse method)": [[62, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse.create_tsv_connector"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[62, "module-kqcircuits.elements.tsvs.tsv_ellipse"]], "produce_impl() (kqcircuits.elements.tsvs.tsv_ellipse.tsvellipse method)": [[62, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse.produce_impl"]], "tsvstandard (class in kqcircuits.elements.tsvs.tsv_standard)": [[63, "kqcircuits.elements.tsvs.tsv_standard.TsvStandard"]], "build() (kqcircuits.elements.tsvs.tsv_standard.tsvstandard method)": [[63, "kqcircuits.elements.tsvs.tsv_standard.TsvStandard.build"]], "kqcircuits.elements.tsvs.tsv_standard": [[63, "module-kqcircuits.elements.tsvs.tsv_standard"]], "node (class in kqcircuits.elements.waveguide_composite)": [[64, "kqcircuits.elements.waveguide_composite.Node"]], "waveguidecomposite (class in kqcircuits.elements.waveguide_composite)": [[64, "kqcircuits.elements.waveguide_composite.WaveguideComposite"]], "align (kqcircuits.elements.waveguide_composite.node attribute)": [[64, "kqcircuits.elements.waveguide_composite.Node.align"]], "angle (kqcircuits.elements.waveguide_composite.node attribute)": [[64, "kqcircuits.elements.waveguide_composite.Node.angle"]], "build() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[64, "kqcircuits.elements.waveguide_composite.WaveguideComposite.build"]], "check_node_type() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[64, "kqcircuits.elements.waveguide_composite.WaveguideComposite.check_node_type"]], "coerce_parameters_impl() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[64, "kqcircuits.elements.waveguide_composite.WaveguideComposite.coerce_parameters_impl"]], "create() (kqcircuits.elements.waveguide_composite.waveguidecomposite class method)": [[64, "kqcircuits.elements.waveguide_composite.WaveguideComposite.create"]], "deserialize() (kqcircuits.elements.waveguide_composite.node class method)": [[64, "kqcircuits.elements.waveguide_composite.Node.deserialize"]], "element (kqcircuits.elements.waveguide_composite.node attribute)": [[64, "kqcircuits.elements.waveguide_composite.Node.element"]], "get_segment_cells() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[64, "kqcircuits.elements.waveguide_composite.WaveguideComposite.get_segment_cells"]], "get_segment_lengths() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[64, "kqcircuits.elements.waveguide_composite.WaveguideComposite.get_segment_lengths"]], "inst_name (kqcircuits.elements.waveguide_composite.node attribute)": [[64, "kqcircuits.elements.waveguide_composite.Node.inst_name"]], "kqcircuits.elements.waveguide_composite": [[64, "module-kqcircuits.elements.waveguide_composite"]], "length_before (kqcircuits.elements.waveguide_composite.node attribute)": [[64, "kqcircuits.elements.waveguide_composite.Node.length_before"]], "length_increment (kqcircuits.elements.waveguide_composite.node attribute)": [[64, "kqcircuits.elements.waveguide_composite.Node.length_increment"]], "meander_direction (kqcircuits.elements.waveguide_composite.node attribute)": [[64, "kqcircuits.elements.waveguide_composite.Node.meander_direction"]], "nodes_from_string() (kqcircuits.elements.waveguide_composite.node static method)": [[64, "kqcircuits.elements.waveguide_composite.Node.nodes_from_string"]], "position (kqcircuits.elements.waveguide_composite.node attribute)": [[64, "kqcircuits.elements.waveguide_composite.Node.position"]], "produce_fixed_length_bend() (in module kqcircuits.elements.waveguide_composite)": [[64, "kqcircuits.elements.waveguide_composite.produce_fixed_length_bend"]], "produce_fixed_length_waveguide() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[64, "kqcircuits.elements.waveguide_composite.WaveguideComposite.produce_fixed_length_waveguide"]], "snap_point() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[64, "kqcircuits.elements.waveguide_composite.WaveguideComposite.snap_point"]], "waveguidecoplanar (class in kqcircuits.elements.waveguide_coplanar)": [[65, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar"]], "build() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[65, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.build"]], "can_create_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[65, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.can_create_from_shape_impl"]], "get_corner_data() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[65, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.get_corner_data"]], "is_continuous() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[65, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.is_continuous"]], "kqcircuits.elements.waveguide_coplanar": [[65, "module-kqcircuits.elements.waveguide_coplanar"]], "parameters_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[65, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.parameters_from_shape_impl"]], "produce_end_termination() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[65, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.produce_end_termination"]], "produce_waveguide() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[65, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.produce_waveguide"]], "transformation_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[65, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.transformation_from_shape_impl"]], "waveguidecoplanarcurved (class in kqcircuits.elements.waveguide_coplanar_curved)": [[66, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved"]], "arc() (in module kqcircuits.elements.waveguide_coplanar_curved)": [[66, "kqcircuits.elements.waveguide_coplanar_curved.arc"]], "build() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved method)": [[66, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.build"]], "build_geometry() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved static method)": [[66, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.build_geometry"]], "coerce_parameters_impl() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved method)": [[66, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.coerce_parameters_impl"]], "create_curve_arcs() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved static method)": [[66, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.create_curve_arcs"]], "kqcircuits.elements.waveguide_coplanar_curved": [[66, "module-kqcircuits.elements.waveguide_coplanar_curved"]], "produce_curve_termination() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved static method)": [[66, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.produce_curve_termination"]], "waveguidecoplanarsplitter (class in kqcircuits.elements.waveguide_coplanar_splitter)": [[67, "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter"]], "build() (kqcircuits.elements.waveguide_coplanar_splitter.waveguidecoplanarsplitter method)": [[67, "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter.build"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[67, "module-kqcircuits.elements.waveguide_coplanar_splitter"]], "t_cross_parameters() (in module kqcircuits.elements.waveguide_coplanar_splitter)": [[67, "kqcircuits.elements.waveguide_coplanar_splitter.t_cross_parameters"]], "waveguidecoplanarstraight (class in kqcircuits.elements.waveguide_coplanar_straight)": [[68, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight"]], "add_waveguide_path() (kqcircuits.elements.waveguide_coplanar_straight.waveguidecoplanarstraight static method)": [[68, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight.add_waveguide_path"]], "build() (kqcircuits.elements.waveguide_coplanar_straight.waveguidecoplanarstraight method)": [[68, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight.build"]], "build_geometry() (kqcircuits.elements.waveguide_coplanar_straight.waveguidecoplanarstraight static method)": [[68, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight.build_geometry"]], "kqcircuits.elements.waveguide_coplanar_straight": [[68, "module-kqcircuits.elements.waveguide_coplanar_straight"]], "waveguidecoplanartaper (class in kqcircuits.elements.waveguide_coplanar_taper)": [[69, "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper"]], "build() (kqcircuits.elements.waveguide_coplanar_taper.waveguidecoplanartaper method)": [[69, "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper.build"]], "kqcircuits.elements.waveguide_coplanar_taper": [[69, "module-kqcircuits.elements.waveguide_coplanar_taper"]], "kqcircuits.junctions": [[70, "module-kqcircuits.junctions"]], "junction (class in kqcircuits.junctions.junction)": [[71, "kqcircuits.junctions.junction.Junction"]], "library_description (kqcircuits.junctions.junction.junction attribute)": [[71, "kqcircuits.junctions.junction.Junction.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.junctions.junction.junction attribute)": [[71, "kqcircuits.junctions.junction.Junction.LIBRARY_NAME"]], "library_path (kqcircuits.junctions.junction.junction attribute)": [[71, "kqcircuits.junctions.junction.Junction.LIBRARY_PATH"]], "create() (kqcircuits.junctions.junction.junction class method)": [[71, "kqcircuits.junctions.junction.Junction.create"]], "default_type (kqcircuits.junctions.junction.junction attribute)": [[71, "kqcircuits.junctions.junction.Junction.default_type"]], "kqcircuits.junctions.junction": [[71, "module-kqcircuits.junctions.junction"]], "manhattan (class in kqcircuits.junctions.manhattan)": [[72, "kqcircuits.junctions.manhattan.Manhattan"]], "build() (kqcircuits.junctions.manhattan.manhattan method)": [[72, "kqcircuits.junctions.manhattan.Manhattan.build"]], "kqcircuits.junctions.manhattan": [[72, "module-kqcircuits.junctions.manhattan"]], "produce_contact_pads() (kqcircuits.junctions.manhattan.manhattan method)": [[72, "kqcircuits.junctions.manhattan.Manhattan.produce_contact_pads"]], "produce_manhattan_squid() (kqcircuits.junctions.manhattan.manhattan method)": [[72, "kqcircuits.junctions.manhattan.Manhattan.produce_manhattan_squid"]], "produce_tp_large() (kqcircuits.junctions.manhattan.manhattan method)": [[72, "kqcircuits.junctions.manhattan.Manhattan.produce_tp_large"]], "produce_tp_small() (kqcircuits.junctions.manhattan.manhattan method)": [[72, "kqcircuits.junctions.manhattan.Manhattan.produce_tp_small"]], "manhattansinglejunction (class in kqcircuits.junctions.manhattan_single_junction)": [[73, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction"]], "build() (kqcircuits.junctions.manhattan_single_junction.manhattansinglejunction method)": [[73, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction.build"]], "kqcircuits.junctions.manhattan_single_junction": [[73, "module-kqcircuits.junctions.manhattan_single_junction"]], "produce_manhattan_junction() (kqcircuits.junctions.manhattan_single_junction.manhattansinglejunction method)": [[73, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction.produce_manhattan_junction"]], "nosquid (class in kqcircuits.junctions.no_squid)": [[74, "kqcircuits.junctions.no_squid.NoSquid"]], "build() (kqcircuits.junctions.no_squid.nosquid method)": [[74, "kqcircuits.junctions.no_squid.NoSquid.build"]], "kqcircuits.junctions.no_squid": [[74, "module-kqcircuits.junctions.no_squid"]], "sim (class in kqcircuits.junctions.sim)": [[75, "kqcircuits.junctions.sim.Sim"]], "build() (kqcircuits.junctions.sim.sim method)": [[75, "kqcircuits.junctions.sim.Sim.build"]], "kqcircuits.junctions.sim": [[75, "module-kqcircuits.junctions.sim"]], "squid (class in kqcircuits.junctions.squid)": [[76, "kqcircuits.junctions.squid.Squid"]], "kqcircuits.junctions.squid": [[76, "module-kqcircuits.junctions.squid"]], "superinductor (class in kqcircuits.junctions.super_inductor)": [[77, "kqcircuits.junctions.super_inductor.SuperInductor"]], "build() (kqcircuits.junctions.super_inductor.superinductor method)": [[77, "kqcircuits.junctions.super_inductor.SuperInductor.build"]], "kqcircuits.junctions.super_inductor": [[77, "module-kqcircuits.junctions.super_inductor"]], "produce_super_inductor() (kqcircuits.junctions.super_inductor.superinductor method)": [[77, "kqcircuits.junctions.super_inductor.SuperInductor.produce_super_inductor"]], "klayoutview (class in kqcircuits.klayout_view)": [[78, "kqcircuits.klayout_view.KLayoutView"]], "missinguilibraryexception": [[78, "kqcircuits.klayout_view.MissingUILibraryException"]], "active_cell (kqcircuits.klayout_view.klayoutview property)": [[78, "kqcircuits.klayout_view.KLayoutView.active_cell"]], "add_default_layers() (kqcircuits.klayout_view.klayoutview method)": [[78, "kqcircuits.klayout_view.KLayoutView.add_default_layers"]], "cell_view (kqcircuits.klayout_view.klayoutview property)": [[78, "kqcircuits.klayout_view.KLayoutView.cell_view"]], "clear_layers() (kqcircuits.klayout_view.klayoutview method)": [[78, "kqcircuits.klayout_view.KLayoutView.clear_layers"]], "close() (kqcircuits.klayout_view.klayoutview method)": [[78, "kqcircuits.klayout_view.KLayoutView.close"]], "create_top_cell() (kqcircuits.klayout_view.klayoutview method)": [[78, "kqcircuits.klayout_view.KLayoutView.create_top_cell"]], "export_all_layers_bitmap() (kqcircuits.klayout_view.klayoutview method)": [[78, "kqcircuits.klayout_view.KLayoutView.export_all_layers_bitmap"]], "export_layers_bitmaps() (kqcircuits.klayout_view.klayoutview method)": [[78, "kqcircuits.klayout_view.KLayoutView.export_layers_bitmaps"]], "export_pcell_png() (kqcircuits.klayout_view.klayoutview method)": [[78, "kqcircuits.klayout_view.KLayoutView.export_pcell_png"]], "focus() (kqcircuits.klayout_view.klayoutview method)": [[78, "kqcircuits.klayout_view.KLayoutView.focus"]], "get_active_cell() (kqcircuits.klayout_view.klayoutview static method)": [[78, "kqcircuits.klayout_view.KLayoutView.get_active_cell"]], "get_active_cell_view() (kqcircuits.klayout_view.klayoutview static method)": [[78, "kqcircuits.klayout_view.KLayoutView.get_active_cell_view"]], "get_active_layout() (kqcircuits.klayout_view.klayoutview static method)": [[78, "kqcircuits.klayout_view.KLayoutView.get_active_layout"]], "get_pixels() (kqcircuits.klayout_view.klayoutview method)": [[78, "kqcircuits.klayout_view.KLayoutView.get_pixels"]], "insert_cell() (kqcircuits.klayout_view.klayoutview method)": [[78, "kqcircuits.klayout_view.KLayoutView.insert_cell"]], "kqcircuits.klayout_view": [[78, "module-kqcircuits.klayout_view"]], "layout (kqcircuits.klayout_view.klayoutview property)": [[78, "kqcircuits.klayout_view.KLayoutView.layout"]], "layout_view (kqcircuits.klayout_view.klayoutview attribute)": [[78, "kqcircuits.klayout_view.KLayoutView.layout_view"]], "load_layout() (kqcircuits.klayout_view.klayoutview method)": [[78, "kqcircuits.klayout_view.KLayoutView.load_layout"]], "resolve_default_layer_info() (in module kqcircuits.klayout_view)": [[78, "kqcircuits.klayout_view.resolve_default_layer_info"]], "save_layout() (kqcircuits.klayout_view.klayoutview method)": [[78, "kqcircuits.klayout_view.KLayoutView.save_layout"]], "show() (kqcircuits.klayout_view.klayoutview method)": [[78, "kqcircuits.klayout_view.KLayoutView.show"]], "top_cell (kqcircuits.klayout_view.klayoutview property)": [[78, "kqcircuits.klayout_view.KLayoutView.top_cell"]], "layercluster (class in kqcircuits.layer_cluster)": [[79, "kqcircuits.layer_cluster.LayerCluster"]], "all_layers() (kqcircuits.layer_cluster.layercluster method)": [[79, "kqcircuits.layer_cluster.LayerCluster.all_layers"]], "extra_layers (kqcircuits.layer_cluster.layercluster attribute)": [[79, "kqcircuits.layer_cluster.LayerCluster.extra_layers"]], "face_id (kqcircuits.layer_cluster.layercluster attribute)": [[79, "kqcircuits.layer_cluster.LayerCluster.face_id"]], "kqcircuits.layer_cluster": [[79, "module-kqcircuits.layer_cluster"]], "main_layers (kqcircuits.layer_cluster.layercluster attribute)": [[79, "kqcircuits.layer_cluster.LayerCluster.main_layers"]], "kqcircuits.layer_config": [[80, "module-kqcircuits.layer_config"]], "kqcircuits.layer_config.default_layer_config": [[81, "module-kqcircuits.layer_config.default_layer_config"]], "kqcircuits.layer_config.example_layer_config": [[82, "module-kqcircuits.layer_config.example_layer_config"]], "kqcircuits.masks": [[83, "module-kqcircuits.masks"]], "export_bitmaps() (in module kqcircuits.masks.mask_export)": [[84, "kqcircuits.masks.mask_export.export_bitmaps"]], "export_chip() (in module kqcircuits.masks.mask_export)": [[84, "kqcircuits.masks.mask_export.export_chip"]], "export_designs() (in module kqcircuits.masks.mask_export)": [[84, "kqcircuits.masks.mask_export.export_designs"]], "export_docs() (in module kqcircuits.masks.mask_export)": [[84, "kqcircuits.masks.mask_export.export_docs"]], "export_junction_parameters() (in module kqcircuits.masks.mask_export)": [[84, "kqcircuits.masks.mask_export.export_junction_parameters"]], "export_mask() (in module kqcircuits.masks.mask_export)": [[84, "kqcircuits.masks.mask_export.export_mask"]], "export_mask_set() (in module kqcircuits.masks.mask_export)": [[84, "kqcircuits.masks.mask_export.export_mask_set"]], "export_masks_of_face() (in module kqcircuits.masks.mask_export)": [[84, "kqcircuits.masks.mask_export.export_masks_of_face"]], "get_mask_layout_full_name() (in module kqcircuits.masks.mask_export)": [[84, "kqcircuits.masks.mask_export.get_mask_layout_full_name"]], "kqcircuits.masks.mask_export": [[84, "module-kqcircuits.masks.mask_export"]], "masklayout (class in kqcircuits.masks.mask_layout)": [[85, "kqcircuits.masks.mask_layout.MaskLayout"]], "add_chips_map() (kqcircuits.masks.mask_layout.masklayout method)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.add_chips_map"]], "added_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.added_chips"]], "align_to (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.align_to"]], "bbox_face_ids (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.bbox_face_ids"]], "build() (kqcircuits.masks.mask_layout.masklayout method)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.build"]], "chip_box_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.chip_box_offset"]], "chip_copies (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.chip_copies"]], "chip_size (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.chip_size"]], "chip_trans (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.chip_trans"]], "chips_map (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.chips_map"]], "chips_map_legend (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.chips_map_legend"]], "chips_map_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.chips_map_offset"]], "chips_placed_by_position_label (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.chips_placed_by_position_label"]], "covered_region_excluded_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.covered_region_excluded_layers"]], "dice_width (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.dice_width"]], "edge_clearance (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.edge_clearance"]], "extra_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.extra_chips"]], "extra_id (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.extra_id"]], "face() (kqcircuits.masks.mask_layout.masklayout method)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.face"]], "face_id (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.face_id"]], "generate_and_insert_chip_copy_labels() (kqcircuits.masks.mask_layout.masklayout method)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.generate_and_insert_chip_copy_labels"]], "generate_position_label() (kqcircuits.masks.mask_layout.masklayout static method)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.generate_position_label"]], "insert_chip_copy_labels() (kqcircuits.masks.mask_layout.masklayout method)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.insert_chip_copy_labels"]], "insert_chips() (kqcircuits.masks.mask_layout.masklayout method)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.insert_chips"]], "kqcircuits.masks.mask_layout": [[85, "module-kqcircuits.masks.mask_layout"]], "layers_to_mask (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.layers_to_mask"]], "layout (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.layout"]], "mask_export_density_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.mask_export_density_layers"]], "mask_export_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.mask_export_layers"]], "mask_marker_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.mask_marker_offset"]], "mask_markers_dict (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.mask_markers_dict"]], "mask_name_box_margin (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_box_margin"]], "mask_name_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_offset"]], "mask_name_scale (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_scale"]], "mask_text_scale (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.mask_text_scale"]], "mirror_labels (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.mirror_labels"]], "name (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.name"]], "position_label_to_two_coordinates() (kqcircuits.masks.mask_layout.masklayout static method)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.position_label_to_two_coordinates"]], "remove_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.remove_chips"]], "submasks (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.submasks"]], "text_margin (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.text_margin"]], "top_cell (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.top_cell"]], "two_coordinates_to_position_label() (kqcircuits.masks.mask_layout.masklayout static method)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.two_coordinates_to_position_label"]], "version (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.version"]], "wafer_bottom_flat_length (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.wafer_bottom_flat_length"]], "wafer_center (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.wafer_center"]], "wafer_rad (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.wafer_rad"]], "wafer_top_flat_length (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.wafer_top_flat_length"]], "with_grid (kqcircuits.masks.mask_layout.masklayout attribute)": [[85, "kqcircuits.masks.mask_layout.MaskLayout.with_grid"]], "maskset (class in kqcircuits.masks.mask_set)": [[86, "kqcircuits.masks.mask_set.MaskSet"]], "add_chip() (kqcircuits.masks.mask_set.maskset method)": [[86, "kqcircuits.masks.mask_set.MaskSet.add_chip"]], "add_mask_layout() (kqcircuits.masks.mask_set.maskset method)": [[86, "kqcircuits.masks.mask_set.MaskSet.add_mask_layout"]], "add_multi_face_mask_layout() (kqcircuits.masks.mask_set.maskset method)": [[86, "kqcircuits.masks.mask_set.MaskSet.add_multi_face_mask_layout"]], "build() (kqcircuits.masks.mask_set.maskset method)": [[86, "kqcircuits.masks.mask_set.MaskSet.build"]], "chips_map_from_box_map() (kqcircuits.masks.mask_set.maskset static method)": [[86, "kqcircuits.masks.mask_set.MaskSet.chips_map_from_box_map"]], "chips_map_legend (kqcircuits.masks.mask_set.maskset attribute)": [[86, "kqcircuits.masks.mask_set.MaskSet.chips_map_legend"]], "export() (kqcircuits.masks.mask_set.maskset method)": [[86, "kqcircuits.masks.mask_set.MaskSet.export"]], "export_drc (kqcircuits.masks.mask_set.maskset attribute)": [[86, "kqcircuits.masks.mask_set.MaskSet.export_drc"]], "export_path (kqcircuits.masks.mask_set.maskset attribute)": [[86, "kqcircuits.masks.mask_set.MaskSet.export_path"]], "kqcircuits.masks.mask_set": [[86, "module-kqcircuits.masks.mask_set"]], "layout (kqcircuits.masks.mask_set.maskset attribute)": [[86, "kqcircuits.masks.mask_set.MaskSet.layout"]], "mask_export_layers (kqcircuits.masks.mask_set.maskset attribute)": [[86, "kqcircuits.masks.mask_set.MaskSet.mask_export_layers"]], "mask_layouts (kqcircuits.masks.mask_set.maskset attribute)": [[86, "kqcircuits.masks.mask_set.MaskSet.mask_layouts"]], "name (kqcircuits.masks.mask_set.maskset attribute)": [[86, "kqcircuits.masks.mask_set.MaskSet.name"]], "used_chips (kqcircuits.masks.mask_set.maskset attribute)": [[86, "kqcircuits.masks.mask_set.MaskSet.used_chips"]], "version (kqcircuits.masks.mask_set.maskset attribute)": [[86, "kqcircuits.masks.mask_set.MaskSet.version"]], "view (kqcircuits.masks.mask_set.maskset attribute)": [[86, "kqcircuits.masks.mask_set.MaskSet.view"]], "with_grid (kqcircuits.masks.mask_set.maskset attribute)": [[86, "kqcircuits.masks.mask_set.MaskSet.with_grid"]], "multifacemasklayout (class in kqcircuits.masks.multi_face_mask_layout)": [[87, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout"]], "add_chips_map() (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout method)": [[87, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.add_chips_map"]], "face_ids (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout attribute)": [[87, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.face_ids"]], "kqcircuits.masks.multi_face_mask_layout": [[87, "module-kqcircuits.masks.multi_face_mask_layout"]], "mask_layouts (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout attribute)": [[87, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.mask_layouts"]], "is_standalone_session() (in module kqcircuits.pya_resolver)": [[88, "kqcircuits.pya_resolver.is_standalone_session"]], "klayout_executable_command() (in module kqcircuits.pya_resolver)": [[88, "kqcircuits.pya_resolver.klayout_executable_command"]], "kqcircuits.pya_resolver": [[88, "module-kqcircuits.pya_resolver"]], "kqcircuits.qubits": [[89, "module-kqcircuits.qubits"]], "circulartransmonsingleisland (class in kqcircuits.qubits.circular_transmon_single_island)": [[90, "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland"]], "build() (kqcircuits.qubits.circular_transmon_single_island.circulartransmonsingleisland method)": [[90, "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland.build"]], "get_sim_ports() (kqcircuits.qubits.circular_transmon_single_island.circulartransmonsingleisland class method)": [[90, "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland.get_sim_ports"]], "kqcircuits.qubits.circular_transmon_single_island": [[90, "module-kqcircuits.qubits.circular_transmon_single_island"]], "concentrictransmon (class in kqcircuits.qubits.concentric_transmon)": [[91, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon"]], "build() (kqcircuits.qubits.concentric_transmon.concentrictransmon method)": [[91, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon.build"]], "get_sim_ports() (kqcircuits.qubits.concentric_transmon.concentrictransmon class method)": [[91, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon.get_sim_ports"]], "kqcircuits.qubits.concentric_transmon": [[91, "module-kqcircuits.qubits.concentric_transmon"]], "doublepads (class in kqcircuits.qubits.double_pads)": [[92, "kqcircuits.qubits.double_pads.DoublePads"]], "build() (kqcircuits.qubits.double_pads.doublepads method)": [[92, "kqcircuits.qubits.double_pads.DoublePads.build"]], "get_sim_ports() (kqcircuits.qubits.double_pads.doublepads class method)": [[92, "kqcircuits.qubits.double_pads.DoublePads.get_sim_ports"]], "kqcircuits.qubits.double_pads": [[92, "module-kqcircuits.qubits.double_pads"]], "doublepadssplines (class in kqcircuits.qubits.double_pads_splines)": [[93, "kqcircuits.qubits.double_pads_splines.DoublePadsSplines"]], "kqcircuits.qubits.double_pads_splines": [[93, "module-kqcircuits.qubits.double_pads_splines"]], "library_description (kqcircuits.qubits.qubit.qubit attribute)": [[94, "kqcircuits.qubits.qubit.Qubit.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.qubits.qubit.qubit attribute)": [[94, "kqcircuits.qubits.qubit.Qubit.LIBRARY_NAME"]], "library_path (kqcircuits.qubits.qubit.qubit attribute)": [[94, "kqcircuits.qubits.qubit.Qubit.LIBRARY_PATH"]], "qubit (class in kqcircuits.qubits.qubit)": [[94, "kqcircuits.qubits.qubit.Qubit"]], "kqcircuits.qubits.qubit": [[94, "module-kqcircuits.qubits.qubit"]], "produce_fluxline() (kqcircuits.qubits.qubit.qubit method)": [[94, "kqcircuits.qubits.qubit.Qubit.produce_fluxline"]], "produce_squid() (kqcircuits.qubits.qubit.qubit method)": [[94, "kqcircuits.qubits.qubit.Qubit.produce_squid"]], "swissmon (class in kqcircuits.qubits.swissmon)": [[95, "kqcircuits.qubits.swissmon.Swissmon"]], "build() (kqcircuits.qubits.swissmon.swissmon method)": [[95, "kqcircuits.qubits.swissmon.Swissmon.build"]], "get_sim_ports() (kqcircuits.qubits.swissmon.swissmon class method)": [[95, "kqcircuits.qubits.swissmon.Swissmon.get_sim_ports"]], "kqcircuits.qubits.swissmon": [[95, "module-kqcircuits.qubits.swissmon"]], "argument_parser() (in module kqcircuits.run)": [[96, "kqcircuits.run.argument_parser"]], "kqcircuits.run": [[96, "module-kqcircuits.run"]], "run() (in module kqcircuits.run)": [[96, "kqcircuits.run.run"]], "run_kqc() (in module kqcircuits.run)": [[96, "kqcircuits.run.run_kqc"]], "kqcircuits.simulations": [[97, "module-kqcircuits.simulations"]], "airbridgessim (class in kqcircuits.simulations.airbridges_sim)": [[98, "kqcircuits.simulations.airbridges_sim.AirbridgesSim"]], "build() (kqcircuits.simulations.airbridges_sim.airbridgessim method)": [[98, "kqcircuits.simulations.airbridges_sim.AirbridgesSim.build"]], "kqcircuits.simulations.airbridges_sim": [[98, "module-kqcircuits.simulations.airbridges_sim"]], "crosssectionsimulation (class in kqcircuits.simulations.cross_section_simulation)": [[99, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation"]], "library_name (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation attribute)": [[99, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.LIBRARY_NAME"]], "build() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[99, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.build"]], "check_material_dict() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[99, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.check_material_dict"]], "get_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[99, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_layers"]], "get_material_dict() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[99, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_material_dict"]], "get_parameters() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[99, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_parameters"]], "get_schema() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation class method)": [[99, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_schema"]], "get_simulation_data() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[99, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_simulation_data"]], "get_unfilled_region() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[99, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_unfilled_region"]], "insert_layer() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[99, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.insert_layer"]], "is_metal() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[99, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.is_metal"]], "kqcircuits.simulations.cross_section_simulation": [[99, "module-kqcircuits.simulations.cross_section_simulation"]], "process_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[99, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.process_layers"]], "restrict_layer_regions() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[99, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.restrict_layer_regions"]], "emptysimulation (class in kqcircuits.simulations.empty_simulation)": [[100, "kqcircuits.simulations.empty_simulation.EmptySimulation"]], "build() (kqcircuits.simulations.empty_simulation.emptysimulation method)": [[100, "kqcircuits.simulations.empty_simulation.EmptySimulation.build"]], "kqcircuits.simulations.empty_simulation": [[100, "module-kqcircuits.simulations.empty_simulation"]], "correction_cuts() (in module kqcircuits.simulations.epr.circular_capacitor)": [[102, "kqcircuits.simulations.epr.circular_capacitor.correction_cuts"]], "extract_circular_capacitor_from() (in module kqcircuits.simulations.epr.circular_capacitor)": [[102, "kqcircuits.simulations.epr.circular_capacitor.extract_circular_capacitor_from"]], "kqcircuits.simulations.epr.circular_capacitor": [[102, "module-kqcircuits.simulations.epr.circular_capacitor"]], "partition_regions() (in module kqcircuits.simulations.epr.circular_capacitor)": [[102, "kqcircuits.simulations.epr.circular_capacitor.partition_regions"]], "correction_cuts() (in module kqcircuits.simulations.epr.circular_transmon_single_island)": [[103, "kqcircuits.simulations.epr.circular_transmon_single_island.correction_cuts"]], "kqcircuits.simulations.epr.circular_transmon_single_island": [[103, "module-kqcircuits.simulations.epr.circular_transmon_single_island"]], "partition_regions() (in module kqcircuits.simulations.epr.circular_transmon_single_island)": [[103, "kqcircuits.simulations.epr.circular_transmon_single_island.partition_regions"]], "correction_cuts() (in module kqcircuits.simulations.epr.double_pads)": [[104, "kqcircuits.simulations.epr.double_pads.correction_cuts"]], "kqcircuits.simulations.epr.double_pads": [[104, "module-kqcircuits.simulations.epr.double_pads"]], "partition_regions() (in module kqcircuits.simulations.epr.double_pads)": [[104, "kqcircuits.simulations.epr.double_pads.partition_regions"]], "correction_cuts() (in module kqcircuits.simulations.epr.example)": [[105, "kqcircuits.simulations.epr.example.correction_cuts"]], "extract_from() (in module kqcircuits.simulations.epr.example)": [[105, "kqcircuits.simulations.epr.example.extract_from"]], "kqcircuits.simulations.epr.example": [[105, "module-kqcircuits.simulations.epr.example"]], "partition_regions() (in module kqcircuits.simulations.epr.example)": [[105, "kqcircuits.simulations.epr.example.partition_regions"]], "kqcircuits.simulations.epr.gui_config": [[106, "module-kqcircuits.simulations.epr.gui_config"]], "correction_cuts() (in module kqcircuits.simulations.epr.smooth_capacitor)": [[107, "kqcircuits.simulations.epr.smooth_capacitor.correction_cuts"]], "kqcircuits.simulations.epr.smooth_capacitor": [[107, "module-kqcircuits.simulations.epr.smooth_capacitor"]], "partition_regions() (in module kqcircuits.simulations.epr.smooth_capacitor)": [[107, "kqcircuits.simulations.epr.smooth_capacitor.partition_regions"]], "correction_cuts() (in module kqcircuits.simulations.epr.spiral_capacitor)": [[108, "kqcircuits.simulations.epr.spiral_capacitor.correction_cuts"]], "kqcircuits.simulations.epr.spiral_capacitor": [[108, "module-kqcircuits.simulations.epr.spiral_capacitor"]], "partition_regions() (in module kqcircuits.simulations.epr.spiral_capacitor)": [[108, "kqcircuits.simulations.epr.spiral_capacitor.partition_regions"]], "correction_cuts() (in module kqcircuits.simulations.epr.swissmon)": [[109, "kqcircuits.simulations.epr.swissmon.correction_cuts"]], "extract_swissmon_from() (in module kqcircuits.simulations.epr.swissmon)": [[109, "kqcircuits.simulations.epr.swissmon.extract_swissmon_from"]], "kqcircuits.simulations.epr.swissmon": [[109, "module-kqcircuits.simulations.epr.swissmon"]], "partition_regions() (in module kqcircuits.simulations.epr.swissmon)": [[109, "kqcircuits.simulations.epr.swissmon.partition_regions"]], "create_bulk_and_mer_partition_regions() (in module kqcircuits.simulations.epr.util)": [[110, "kqcircuits.simulations.epr.util.create_bulk_and_mer_partition_regions"]], "extract_child_simulation() (in module kqcircuits.simulations.epr.util)": [[110, "kqcircuits.simulations.epr.util.extract_child_simulation"]], "get_mer_z() (in module kqcircuits.simulations.epr.util)": [[110, "kqcircuits.simulations.epr.util.get_mer_z"]], "in_gui() (in module kqcircuits.simulations.epr.util)": [[110, "kqcircuits.simulations.epr.util.in_gui"]], "kqcircuits.simulations.epr.util": [[110, "module-kqcircuits.simulations.epr.util"]], "kqcircuits.simulations.export": [[111, "module-kqcircuits.simulations.export"]], "kqcircuits.simulations.export.ansys": [[112, "module-kqcircuits.simulations.export.ansys"]], "export_ansys() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[113, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys"]], "export_ansys_bat() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[113, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys_bat"]], "export_ansys_json() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[113, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys_json"]], "kqcircuits.simulations.export.ansys.ansys_export": [[113, "module-kqcircuits.simulations.export.ansys.ansys_export"]], "ansyscrosssectionsolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution"]], "ansyscurrentsolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution"]], "ansyseigenmodesolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution"]], "ansyshfsssolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution"]], "ansyshfssterminalsolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssTerminalSolution"]], "ansysq3dsolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution"]], "ansyssolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution"]], "ansysvoltagesolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution"]], "ansys_project_template (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.ansys_project_template"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.ansys_tool"]], "basis_order (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.basis_order"]], "basis_order (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfssterminalsolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssTerminalSolution.basis_order"]], "capacitance_export (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.capacitance_export"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.frequency"]], "frequency_units (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.frequency_units"]], "get_ansys_solution() (in module kqcircuits.simulations.export.ansys.ansys_solution)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.get_ansys_solution"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution method)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution method)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution method)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution method)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfssterminalsolution method)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssTerminalSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution method)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution method)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution method)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.get_solution_data"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfssterminalsolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssTerminalSolution.integrate_energies"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.integrate_magnetic_flux"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfssterminalsolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssTerminalSolution.integrate_magnetic_flux"]], "iterative_residual (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfssterminalsolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssTerminalSolution.iterative_residual"]], "kqcircuits.simulations.export.ansys.ansys_solution": [[114, "module-kqcircuits.simulations.export.ansys.ansys_solution"]], "max_delta_e (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.max_delta_e"]], "max_delta_e (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.max_delta_e"]], "max_delta_f (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.max_delta_f"]], "max_delta_s (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.max_delta_s"]], "maximum_passes (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.maximum_passes"]], "mesh_size (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.mesh_size"]], "min_frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.min_frequency"]], "minimum_converged_passes (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.minimum_converged_passes"]], "minimum_passes (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.minimum_passes"]], "n_modes (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.n_modes"]], "percent_error (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.percent_error"]], "percent_error (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.percent_error"]], "percent_refinement (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.percent_refinement"]], "simulation_flags (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.simulation_flags"]], "sweep_count (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_count"]], "sweep_enabled (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_enabled"]], "sweep_end (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_end"]], "sweep_start (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_start"]], "sweep_type (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_type"]], "use_iterative_solver (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfssterminalsolution attribute)": [[114, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssTerminalSolution.use_iterative_solver"]], "kqcircuits.simulations.export.cross_section": [[115, "module-kqcircuits.simulations.export.cross_section"]], "create_cross_sections_from_simulations() (in module kqcircuits.simulations.export.cross_section.cross_section_export)": [[116, "kqcircuits.simulations.export.cross_section.cross_section_export.create_cross_sections_from_simulations"]], "kqcircuits.simulations.export.cross_section.cross_section_export": [[116, "module-kqcircuits.simulations.export.cross_section.cross_section_export"]], "visualise_cross_section_cut_on_original_layout() (in module kqcircuits.simulations.export.cross_section.cross_section_export)": [[116, "kqcircuits.simulations.export.cross_section.cross_section_export.visualise_cross_section_cut_on_original_layout"]], "cutsimulation (class in kqcircuits.simulations.export.cross_section.cut_simulation)": [[117, "kqcircuits.simulations.export.cross_section.cut_simulation.CutSimulation"]], "apply_partition_regions() (kqcircuits.simulations.export.cross_section.cut_simulation.cutsimulation method)": [[117, "kqcircuits.simulations.export.cross_section.cut_simulation.CutSimulation.apply_partition_regions"]], "build() (kqcircuits.simulations.export.cross_section.cut_simulation.cutsimulation method)": [[117, "kqcircuits.simulations.export.cross_section.cut_simulation.CutSimulation.build"]], "get_material_dict() (kqcircuits.simulations.export.cross_section.cut_simulation.cutsimulation method)": [[117, "kqcircuits.simulations.export.cross_section.cut_simulation.CutSimulation.get_material_dict"]], "get_metals_vacuums_substrates() (kqcircuits.simulations.export.cross_section.cut_simulation.cutsimulation method)": [[117, "kqcircuits.simulations.export.cross_section.cut_simulation.CutSimulation.get_metals_vacuums_substrates"]], "get_parameters() (kqcircuits.simulations.export.cross_section.cut_simulation.cutsimulation method)": [[117, "kqcircuits.simulations.export.cross_section.cut_simulation.CutSimulation.get_parameters"]], "get_partition_regions() (kqcircuits.simulations.export.cross_section.cut_simulation.cutsimulation method)": [[117, "kqcircuits.simulations.export.cross_section.cut_simulation.CutSimulation.get_partition_regions"]], "insert_cross_section_layers() (kqcircuits.simulations.export.cross_section.cut_simulation.cutsimulation method)": [[117, "kqcircuits.simulations.export.cross_section.cut_simulation.CutSimulation.insert_cross_section_layers"]], "insert_sheet_metals() (kqcircuits.simulations.export.cross_section.cut_simulation.cutsimulation method)": [[117, "kqcircuits.simulations.export.cross_section.cut_simulation.CutSimulation.insert_sheet_metals"]], "insert_tls_layers() (kqcircuits.simulations.export.cross_section.cut_simulation.cutsimulation method)": [[117, "kqcircuits.simulations.export.cross_section.cut_simulation.CutSimulation.insert_tls_layers"]], "kqcircuits.simulations.export.cross_section.cut_simulation": [[117, "module-kqcircuits.simulations.export.cross_section.cut_simulation"]], "limited_region() (kqcircuits.simulations.export.cross_section.cut_simulation.cutsimulation method)": [[117, "kqcircuits.simulations.export.cross_section.cut_simulation.CutSimulation.limited_region"]], "process_geometry() (kqcircuits.simulations.export.cross_section.cut_simulation.cutsimulation method)": [[117, "kqcircuits.simulations.export.cross_section.cut_simulation.CutSimulation.process_geometry"]], "regroup_layers() (kqcircuits.simulations.export.cross_section.cut_simulation.cutsimulation method)": [[117, "kqcircuits.simulations.export.cross_section.cut_simulation.CutSimulation.regroup_layers"]], "subtract_region() (kqcircuits.simulations.export.cross_section.cut_simulation.cutsimulation method)": [[117, "kqcircuits.simulations.export.cross_section.cut_simulation.CutSimulation.subtract_region"]], "sum_region() (kqcircuits.simulations.export.cross_section.cut_simulation.cutsimulation method)": [[117, "kqcircuits.simulations.export.cross_section.cut_simulation.CutSimulation.sum_region"]], "get_epr_correction_elmer_solution() (in module kqcircuits.simulations.export.cross_section.epr_correction_export)": [[118, "kqcircuits.simulations.export.cross_section.epr_correction_export.get_epr_correction_elmer_solution"]], "get_epr_correction_simulations() (in module kqcircuits.simulations.export.cross_section.epr_correction_export)": [[118, "kqcircuits.simulations.export.cross_section.epr_correction_export.get_epr_correction_simulations"]], "kqcircuits.simulations.export.cross_section.epr_correction_export": [[118, "module-kqcircuits.simulations.export.cross_section.epr_correction_export"]], "kqcircuits.simulations.export.elmer": [[119, "module-kqcircuits.simulations.export.elmer"]], "export_elmer() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[120, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer"]], "export_elmer_json() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[120, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer_json"]], "export_elmer_script() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[120, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer_script"]], "kqcircuits.simulations.export.elmer.elmer_export": [[120, "module-kqcircuits.simulations.export.elmer.elmer_export"]], "elmercapacitancesolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution"]], "elmercrosssectionsolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution"]], "elmerepr3dsolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution"]], "elmersolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution"]], "elmervectorhelmholtzsolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution"]], "boundary_conditions (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.boundary_conditions"]], "conductivity (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.conductivity"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.convergence_tolerance"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.convergence_tolerance"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.convergence_tolerance"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.convergence_tolerance"]], "electric_infinity_bc (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.electric_infinity_bc"]], "electric_infinity_bc (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.electric_infinity_bc"]], "electric_infinity_bc (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.electric_infinity_bc"]], "frequency (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.frequency"]], "frequency_batch (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.frequency_batch"]], "get_elmer_solution() (in module kqcircuits.simulations.export.elmer.elmer_solution)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.get_elmer_solution"]], "get_solution_data() (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution method)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.get_solution_data"]], "integrate_energies (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.integrate_energies"]], "is_axisymmetric (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.is_axisymmetric"]], "kqcircuits.simulations.export.elmer.elmer_solution": [[121, "module-kqcircuits.simulations.export.elmer.elmer_solution"]], "linear_system_method (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.linear_system_method"]], "linear_system_method (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.linear_system_method"]], "linear_system_method (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.linear_system_method"]], "linear_system_preconditioning (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.linear_system_preconditioning"]], "linear_system_preconditioning (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.linear_system_preconditioning"]], "linear_system_preconditioning (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.linear_system_preconditioning"]], "london_penetration_depth (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.london_penetration_depth"]], "max_delta_s (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.max_delta_s"]], "max_error_scale (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.max_error_scale"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.max_iterations"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.max_iterations"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.max_iterations"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.max_iterations"]], "max_outlier_fraction (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.max_outlier_fraction"]], "maximum_passes (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.maximum_passes"]], "mesh_levels (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.mesh_levels"]], "mesh_optimizer (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.mesh_optimizer"]], "mesh_size (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.mesh_size"]], "minimum_passes (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.minimum_passes"]], "nested_iteration (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.nested_iteration"]], "p_element_order (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.p_element_order"]], "p_element_order (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.p_element_order"]], "p_element_order (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.p_element_order"]], "percent_error (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.percent_error"]], "quadratic_approximation (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.quadratic_approximation"]], "run_inductance_sim (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.run_inductance_sim"]], "save_elmer_data (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.save_elmer_data"]], "second_kind_basis (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.second_kind_basis"]], "sweep_type (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.sweep_type"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.tool"]], "use_av (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.use_av"]], "voltage_excitations (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.voltage_excitations"]], "voltage_excitations (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.voltage_excitations"]], "vtu_output (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[121, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.vtu_output"]], "kqcircuits.simulations.export.elmer.mesh_size_helpers": [[122, "module-kqcircuits.simulations.export.elmer.mesh_size_helpers"]], "refine_metal_edges() (in module kqcircuits.simulations.export.elmer.mesh_size_helpers)": [[122, "kqcircuits.simulations.export.elmer.mesh_size_helpers.refine_metal_edges"]], "export_and_run() (in module kqcircuits.simulations.export.export_and_run)": [[123, "kqcircuits.simulations.export.export_and_run.export_and_run"]], "kqcircuits.simulations.export.export_and_run": [[123, "module-kqcircuits.simulations.export.export_and_run"]], "run_export_script() (in module kqcircuits.simulations.export.export_and_run)": [[123, "kqcircuits.simulations.export.export_and_run.run_export_script"]], "run_simulations() (in module kqcircuits.simulations.export.export_and_run)": [[123, "kqcircuits.simulations.export.export_and_run.run_simulations"]], "export_singularity() (in module kqcircuits.simulations.export.export_singularity)": [[124, "kqcircuits.simulations.export.export_singularity.export_singularity"]], "kqcircuits.simulations.export.export_singularity": [[124, "module-kqcircuits.simulations.export.export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[125, "module-kqcircuits.simulations.export.remote_export_and_run"]], "remote_export_and_run() (in module kqcircuits.simulations.export.remote_export_and_run)": [[125, "kqcircuits.simulations.export.remote_export_and_run.remote_export_and_run"]], "remote_run_only() (in module kqcircuits.simulations.export.remote_export_and_run)": [[125, "kqcircuits.simulations.export.remote_export_and_run.remote_run_only"]], "copy_content_into_directory() (in module kqcircuits.simulations.export.simulation_export)": [[126, "kqcircuits.simulations.export.simulation_export.copy_content_into_directory"]], "cross_combine() (in module kqcircuits.simulations.export.simulation_export)": [[126, "kqcircuits.simulations.export.simulation_export.cross_combine"]], "cross_sweep_simulation() (in module kqcircuits.simulations.export.simulation_export)": [[126, "kqcircuits.simulations.export.simulation_export.cross_sweep_simulation"]], "cross_sweep_solution() (in module kqcircuits.simulations.export.simulation_export)": [[126, "kqcircuits.simulations.export.simulation_export.cross_sweep_solution"]], "export_simulation_json() (in module kqcircuits.simulations.export.simulation_export)": [[126, "kqcircuits.simulations.export.simulation_export.export_simulation_json"]], "export_simulation_oas() (in module kqcircuits.simulations.export.simulation_export)": [[126, "kqcircuits.simulations.export.simulation_export.export_simulation_oas"]], "get_combined_parameters() (in module kqcircuits.simulations.export.simulation_export)": [[126, "kqcircuits.simulations.export.simulation_export.get_combined_parameters"]], "get_post_process_command_lines() (in module kqcircuits.simulations.export.simulation_export)": [[126, "kqcircuits.simulations.export.simulation_export.get_post_process_command_lines"]], "kqcircuits.simulations.export.simulation_export": [[126, "module-kqcircuits.simulations.export.simulation_export"]], "sweep_simulation() (in module kqcircuits.simulations.export.simulation_export)": [[126, "kqcircuits.simulations.export.simulation_export.sweep_simulation"]], "sweep_solution() (in module kqcircuits.simulations.export.simulation_export)": [[126, "kqcircuits.simulations.export.simulation_export.sweep_solution"]], "validatesimerror": [[127, "kqcircuits.simulations.export.simulation_validate.ValidateSimError"]], "check_partition_region_naming() (in module kqcircuits.simulations.export.simulation_validate)": [[127, "kqcircuits.simulations.export.simulation_validate.check_partition_region_naming"]], "check_tls_sheet_generation() (in module kqcircuits.simulations.export.simulation_validate)": [[127, "kqcircuits.simulations.export.simulation_validate.check_tls_sheet_generation"]], "check_tls_sheets_by_solution() (in module kqcircuits.simulations.export.simulation_validate)": [[127, "kqcircuits.simulations.export.simulation_validate.check_tls_sheets_by_solution"]], "flux_integration_layer_exists_if_needed() (in module kqcircuits.simulations.export.simulation_validate)": [[127, "kqcircuits.simulations.export.simulation_validate.flux_integration_layer_exists_if_needed"]], "get_port_names() (in module kqcircuits.simulations.export.simulation_validate)": [[127, "kqcircuits.simulations.export.simulation_validate.get_port_names"]], "has_edgeport_when_forbidden() (in module kqcircuits.simulations.export.simulation_validate)": [[127, "kqcircuits.simulations.export.simulation_validate.has_edgeport_when_forbidden"]], "has_no_ports_when_required() (in module kqcircuits.simulations.export.simulation_validate)": [[127, "kqcircuits.simulations.export.simulation_validate.has_no_ports_when_required"]], "kqcircuits.simulations.export.simulation_validate": [[127, "module-kqcircuits.simulations.export.simulation_validate"]], "london_penetration_depth_with_ansys() (in module kqcircuits.simulations.export.simulation_validate)": [[127, "kqcircuits.simulations.export.simulation_validate.london_penetration_depth_with_ansys"]], "recursive_all() (in module kqcircuits.simulations.export.simulation_validate)": [[127, "kqcircuits.simulations.export.simulation_validate.recursive_all"]], "simulation_and_solution_types_match() (in module kqcircuits.simulations.export.simulation_validate)": [[127, "kqcircuits.simulations.export.simulation_validate.simulation_and_solution_types_match"]], "validate_simulation() (in module kqcircuits.simulations.export.simulation_validate)": [[127, "kqcircuits.simulations.export.simulation_validate.validate_simulation"]], "solution (class in kqcircuits.simulations.export.solution)": [[128, "kqcircuits.simulations.export.solution.Solution"]], "get_parameters() (kqcircuits.simulations.export.solution.solution method)": [[128, "kqcircuits.simulations.export.solution.Solution.get_parameters"]], "kqcircuits.simulations.export.solution": [[128, "module-kqcircuits.simulations.export.solution"]], "name (kqcircuits.simulations.export.solution.solution attribute)": [[128, "kqcircuits.simulations.export.solution.Solution.name"]], "kqcircuits.simulations.export.sonnet": [[129, "module-kqcircuits.simulations.export.sonnet"]], "apply_template() (in module kqcircuits.simulations.export.sonnet.parser)": [[130, "kqcircuits.simulations.export.sonnet.parser.apply_template"]], "box() (in module kqcircuits.simulations.export.sonnet.parser)": [[130, "kqcircuits.simulations.export.sonnet.parser.box"]], "control() (in module kqcircuits.simulations.export.sonnet.parser)": [[130, "kqcircuits.simulations.export.sonnet.parser.control"]], "kqcircuits.simulations.export.sonnet.parser": [[130, "module-kqcircuits.simulations.export.sonnet.parser"]], "polygon_head() (in module kqcircuits.simulations.export.sonnet.parser)": [[130, "kqcircuits.simulations.export.sonnet.parser.polygon_head"]], "polygons() (in module kqcircuits.simulations.export.sonnet.parser)": [[130, "kqcircuits.simulations.export.sonnet.parser.polygons"]], "port() (in module kqcircuits.simulations.export.sonnet.parser)": [[130, "kqcircuits.simulations.export.sonnet.parser.port"]], "refplane() (in module kqcircuits.simulations.export.sonnet.parser)": [[130, "kqcircuits.simulations.export.sonnet.parser.refplane"]], "refplanes() (in module kqcircuits.simulations.export.sonnet.parser)": [[130, "kqcircuits.simulations.export.sonnet.parser.refplanes"]], "symmetry() (in module kqcircuits.simulations.export.sonnet.parser)": [[130, "kqcircuits.simulations.export.sonnet.parser.symmetry"]], "via() (in module kqcircuits.simulations.export.sonnet.parser)": [[130, "kqcircuits.simulations.export.sonnet.parser.via"]], "export_sonnet() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[131, "kqcircuits.simulations.export.sonnet.sonnet_export.export_sonnet"]], "export_sonnet_son() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[131, "kqcircuits.simulations.export.sonnet.sonnet_export.export_sonnet_son"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[131, "module-kqcircuits.simulations.export.sonnet.sonnet_export"]], "poly_and_edge_indices() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[131, "kqcircuits.simulations.export.sonnet.sonnet_export.poly_and_edge_indices"]], "find_edge_from_point_in_polygons() (in module kqcircuits.simulations.export.util)": [[132, "kqcircuits.simulations.export.util.find_edge_from_point_in_polygons"]], "get_enclosing_polygon() (in module kqcircuits.simulations.export.util)": [[132, "kqcircuits.simulations.export.util.get_enclosing_polygon"]], "kqcircuits.simulations.export.util": [[132, "module-kqcircuits.simulations.export.util"]], "partitionregion (class in kqcircuits.simulations.partition_region)": [[133, "kqcircuits.simulations.partition_region.PartitionRegion"]], "get_list_of_two() (in module kqcircuits.simulations.partition_region)": [[133, "kqcircuits.simulations.partition_region.get_list_of_two"]], "kqcircuits.simulations.partition_region": [[133, "module-kqcircuits.simulations.partition_region"]], "limit_box() (kqcircuits.simulations.partition_region.partitionregion method)": [[133, "kqcircuits.simulations.partition_region.PartitionRegion.limit_box"]], "limit_face() (kqcircuits.simulations.partition_region.partitionregion method)": [[133, "kqcircuits.simulations.partition_region.PartitionRegion.limit_face"]], "edgeport (class in kqcircuits.simulations.port)": [[134, "kqcircuits.simulations.port.EdgePort"]], "internalport (class in kqcircuits.simulations.port)": [[134, "kqcircuits.simulations.port.InternalPort"]], "port (class in kqcircuits.simulations.port)": [[134, "kqcircuits.simulations.port.Port"]], "as_dict() (kqcircuits.simulations.port.port method)": [[134, "kqcircuits.simulations.port.Port.as_dict"]], "get_etch_polygon() (kqcircuits.simulations.port.internalport method)": [[134, "kqcircuits.simulations.port.InternalPort.get_etch_polygon"]], "kqcircuits.simulations.port": [[134, "module-kqcircuits.simulations.port"]], "postprocess (class in kqcircuits.simulations.post_process)": [[135, "kqcircuits.simulations.post_process.PostProcess"]], "get_command_line() (kqcircuits.simulations.post_process.postprocess method)": [[135, "kqcircuits.simulations.post_process.PostProcess.get_command_line"]], "kqcircuits.simulations.post_process": [[135, "module-kqcircuits.simulations.post_process"]], "library_name (kqcircuits.simulations.simulation.simulation attribute)": [[136, "kqcircuits.simulations.simulation.Simulation.LIBRARY_NAME"]], "simulation (class in kqcircuits.simulations.simulation)": [[136, "kqcircuits.simulations.simulation.Simulation"]], "add_element() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.add_element"]], "build() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.build"]], "check_material_dict() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.check_material_dict"]], "create_simulation_layers() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.create_simulation_layers"]], "delete_instances() (kqcircuits.simulations.simulation.simulation static method)": [[136, "kqcircuits.simulations.simulation.Simulation.delete_instances"]], "etched_line() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.etched_line"]], "face() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.face"]], "face_stack_list_of_lists() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.face_stack_list_of_lists"]], "face_z_levels() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.face_z_levels"]], "from_cell() (kqcircuits.simulations.simulation.simulation class method)": [[136, "kqcircuits.simulations.simulation.Simulation.from_cell"]], "get_layer() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.get_layer"]], "get_layers() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.get_layers"]], "get_material_dict() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.get_material_dict"]], "get_parameters() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.get_parameters"]], "get_partition_regions() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.get_partition_regions"]], "get_port_data() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.get_port_data"]], "get_refpoints() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.get_refpoints"]], "get_schema() (kqcircuits.simulations.simulation.simulation class method)": [[136, "kqcircuits.simulations.simulation.Simulation.get_schema"]], "get_simulation_data() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.get_simulation_data"]], "get_simulation_layer_by_name() (in module kqcircuits.simulations.simulation)": [[136, "kqcircuits.simulations.simulation.get_simulation_layer_by_name"]], "ground_grid_region() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.ground_grid_region"]], "insert_cell() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.insert_cell"]], "insert_layer() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.insert_layer"]], "insert_layers_between_faces() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.insert_layers_between_faces"]], "insert_stacked_up_layers() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.insert_stacked_up_layers"]], "is_metal() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.is_metal"]], "ith_value() (kqcircuits.simulations.simulation.simulation static method)": [[136, "kqcircuits.simulations.simulation.Simulation.ith_value"]], "kqcircuits.simulations.simulation": [[136, "module-kqcircuits.simulations.simulation"]], "pcell_params_by_name() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.pcell_params_by_name"]], "ports (kqcircuits.simulations.simulation.simulation attribute)": [[136, "kqcircuits.simulations.simulation.Simulation.ports"]], "produce_layers() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.produce_layers"]], "produce_waveguide_to_port() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.produce_waveguide_to_port"]], "region_from_layer() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.region_from_layer"]], "simplified_region() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.simplified_region"]], "split_metal_layers_by_excitation() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.split_metal_layers_by_excitation"]], "to_1d_list() (in module kqcircuits.simulations.simulation)": [[136, "kqcircuits.simulations.simulation.to_1d_list"]], "visualise_region() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.visualise_region"]], "warn_of_small_shapes() (kqcircuits.simulations.simulation.simulation method)": [[136, "kqcircuits.simulations.simulation.Simulation.warn_of_small_shapes"]], "get_single_element_sim_class() (in module kqcircuits.simulations.single_element_simulation)": [[137, "kqcircuits.simulations.single_element_simulation.get_single_element_sim_class"]], "kqcircuits.simulations.single_element_simulation": [[137, "module-kqcircuits.simulations.single_element_simulation"]], "singlexmonsfullchipsim (class in kqcircuits.simulations.single_xmons_full_chip_sim)": [[138, "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim"]], "build() (kqcircuits.simulations.single_xmons_full_chip_sim.singlexmonsfullchipsim method)": [[138, "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim.build"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[138, "module-kqcircuits.simulations.single_xmons_full_chip_sim"]], "waveguidessim (class in kqcircuits.simulations.waveguides_sim)": [[139, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim"]], "build() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[139, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.build"]], "kqcircuits.simulations.waveguides_sim": [[139, "module-kqcircuits.simulations.waveguides_sim"]], "produce_ground_bumps() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[139, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.produce_ground_bumps"]], "produce_guides() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[139, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.produce_guides"]], "xmonsdirectcouplingfullchipsim (class in kqcircuits.simulations.xmons_direct_coupling_full_chip_sim)": [[140, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim"]], "build() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[140, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.build"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[140, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"]], "produce_launcher() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[140, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_launcher"]], "produce_launchers_sma8() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[140, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_launchers_SMA8"]], "produce_qubit() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[140, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_qubit"]], "produce_readout_resonator() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[140, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_readout_resonator"]], "produce_waveguide() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[140, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_waveguide"]], "xmonsdirectcouplingsim (class in kqcircuits.simulations.xmons_direct_coupling_sim)": [[141, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim"]], "build() (kqcircuits.simulations.xmons_direct_coupling_sim.xmonsdirectcouplingsim method)": [[141, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim.build"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[141, "module-kqcircuits.simulations.xmons_direct_coupling_sim"]], "produce_qubits() (kqcircuits.simulations.xmons_direct_coupling_sim.xmonsdirectcouplingsim method)": [[141, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim.produce_qubits"]], "kqcircuits.test_structures": [[142, "module-kqcircuits.test_structures"]], "airbridgedc (class in kqcircuits.test_structures.airbridge_dc)": [[143, "kqcircuits.test_structures.airbridge_dc.AirbridgeDC"]], "build() (kqcircuits.test_structures.airbridge_dc.airbridgedc method)": [[143, "kqcircuits.test_structures.airbridge_dc.AirbridgeDC.build"]], "kqcircuits.test_structures.airbridge_dc": [[143, "module-kqcircuits.test_structures.airbridge_dc"]], "crosstest (class in kqcircuits.test_structures.cross_test)": [[144, "kqcircuits.test_structures.cross_test.CrossTest"]], "build() (kqcircuits.test_structures.cross_test.crosstest method)": [[144, "kqcircuits.test_structures.cross_test.CrossTest.build"]], "kqcircuits.test_structures.cross_test": [[144, "module-kqcircuits.test_structures.cross_test"]], "kqcircuits.test_structures.junction_test_pads": [[145, "module-kqcircuits.test_structures.junction_test_pads"]], "junctiontestpads (class in kqcircuits.test_structures.junction_test_pads.junction_test_pads)": [[146, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads"]], "create() (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads class method)": [[146, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.create"]], "default_type (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads attribute)": [[146, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.default_type"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[146, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"]], "produce_squid() (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads method)": [[146, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.produce_squid"]], "junctiontestpadssimple (class in kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple)": [[147, "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple"]], "build() (kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.junctiontestpadssimple method)": [[147, "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple.build"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[147, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"]], "stripestest (class in kqcircuits.test_structures.stripes_test)": [[148, "kqcircuits.test_structures.stripes_test.StripesTest"]], "build() (kqcircuits.test_structures.stripes_test.stripestest method)": [[148, "kqcircuits.test_structures.stripes_test.StripesTest.build"]], "kqcircuits.test_structures.stripes_test": [[148, "module-kqcircuits.test_structures.stripes_test"]], "stripestestincreasingwidth (class in kqcircuits.test_structures.stripes_test_increasing_width)": [[149, "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth"]], "build() (kqcircuits.test_structures.stripes_test_increasing_width.stripestestincreasingwidth method)": [[149, "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth.build"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[149, "module-kqcircuits.test_structures.stripes_test_increasing_width"]], "library_description (kqcircuits.test_structures.test_structure.teststructure attribute)": [[150, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.test_structures.test_structure.teststructure attribute)": [[150, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_NAME"]], "library_path (kqcircuits.test_structures.test_structure.teststructure attribute)": [[150, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_PATH"]], "teststructure (class in kqcircuits.test_structures.test_structure)": [[150, "kqcircuits.test_structures.test_structure.TestStructure"]], "kqcircuits.test_structures.test_structure": [[150, "module-kqcircuits.test_structures.test_structure"]], "produce_etched_region() (kqcircuits.test_structures.test_structure.teststructure method)": [[150, "kqcircuits.test_structures.test_structure.TestStructure.produce_etched_region"]], "produce_four_point_pads() (kqcircuits.test_structures.test_structure.teststructure method)": [[150, "kqcircuits.test_structures.test_structure.TestStructure.produce_four_point_pads"]], "produce_pad() (kqcircuits.test_structures.test_structure.teststructure method)": [[150, "kqcircuits.test_structures.test_structure.TestStructure.produce_pad"]], "tsvtestpattern (class in kqcircuits.test_structures.tsv_test_pattern)": [[151, "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern"]], "build() (kqcircuits.test_structures.tsv_test_pattern.tsvtestpattern method)": [[151, "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern.build"]], "kqcircuits.test_structures.tsv_test_pattern": [[151, "module-kqcircuits.test_structures.tsv_test_pattern"]], "kqcircuits.util": [[152, "module-kqcircuits.util"]], "areareceiver (class in kqcircuits.util.area)": [[153, "kqcircuits.util.area.AreaReceiver"]], "get_area_and_density() (in module kqcircuits.util.area)": [[153, "kqcircuits.util.area.get_area_and_density"]], "kqcircuits.util.area": [[153, "module-kqcircuits.util.area"]], "put() (kqcircuits.util.area.areareceiver method)": [[153, "kqcircuits.util.area.AreaReceiver.put"]], "count_instances_in_cell() (in module kqcircuits.util.count_instances)": [[154, "kqcircuits.util.count_instances.count_instances_in_cell"]], "kqcircuits.util.count_instances": [[154, "module-kqcircuits.util.count_instances"]], "cap_params() (in module kqcircuits.util.coupler_lib)": [[155, "kqcircuits.util.coupler_lib.cap_params"]], "kqcircuits.util.coupler_lib": [[155, "module-kqcircuits.util.coupler_lib"]], "deep_delete_all() (in module kqcircuits.util.deep_delete)": [[156, "kqcircuits.util.deep_delete.deep_delete_all"]], "deep_delete_pcells() (in module kqcircuits.util.deep_delete)": [[156, "kqcircuits.util.deep_delete.deep_delete_pcells"]], "kqcircuits.util.deep_delete": [[156, "module-kqcircuits.util.deep_delete"]], "find_ansys_executable() (in module kqcircuits.util.defaults_helper)": [[157, "kqcircuits.util.defaults_helper.find_ansys_executable"]], "kqcircuits.util.defaults_helper": [[157, "module-kqcircuits.util.defaults_helper"]], "install_kqc_gui_dependencies() (in module kqcircuits.util.dependencies)": [[158, "kqcircuits.util.dependencies.install_kqc_gui_dependencies"]], "kqcircuits.util.dependencies": [[158, "module-kqcircuits.util.dependencies"]], "editnodeplugin (class in kqcircuits.util.edit_node_plugin)": [[159, "kqcircuits.util.edit_node_plugin.EditNodePlugin"]], "editnodepluginfactory (class in kqcircuits.util.edit_node_plugin)": [[159, "kqcircuits.util.edit_node_plugin.EditNodePluginFactory"]], "activated() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[159, "kqcircuits.util.edit_node_plugin.EditNodePlugin.activated"]], "create_dialog() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[159, "kqcircuits.util.edit_node_plugin.EditNodePlugin.create_dialog"]], "create_plugin() (kqcircuits.util.edit_node_plugin.editnodepluginfactory method)": [[159, "kqcircuits.util.edit_node_plugin.EditNodePluginFactory.create_plugin"]], "deactivated() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[159, "kqcircuits.util.edit_node_plugin.EditNodePlugin.deactivated"]], "deselect() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[159, "kqcircuits.util.edit_node_plugin.EditNodePlugin.deselect"]], "has_tracking_position() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[159, "kqcircuits.util.edit_node_plugin.EditNodePlugin.has_tracking_position"]], "kqcircuits.util.edit_node_plugin": [[159, "module-kqcircuits.util.edit_node_plugin"]], "mouse_click_event() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[159, "kqcircuits.util.edit_node_plugin.EditNodePlugin.mouse_click_event"]], "mouse_moved_event() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[159, "kqcircuits.util.edit_node_plugin.EditNodePlugin.mouse_moved_event"]], "select() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[159, "kqcircuits.util.edit_node_plugin.EditNodePlugin.select"]], "tracking_position() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[159, "kqcircuits.util.edit_node_plugin.EditNodePlugin.tracking_position"]], "update() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[159, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update"]], "update_form_from_node() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[159, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update_form_from_node"]], "update_node_from_form() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[159, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update_node_from_form"]], "find_cells_with_error() (in module kqcircuits.util.error_on_cell)": [[160, "kqcircuits.util.error_on_cell.find_cells_with_error"]], "formatted_errors_on_cells() (in module kqcircuits.util.error_on_cell)": [[160, "kqcircuits.util.error_on_cell.formatted_errors_on_cells"]], "kqcircuits.util.error_on_cell": [[160, "module-kqcircuits.util.error_on_cell"]], "create_or_empty_tmp_directory() (in module kqcircuits.util.export_helper)": [[161, "kqcircuits.util.export_helper.create_or_empty_tmp_directory"]], "export_drc_report() (in module kqcircuits.util.export_helper)": [[161, "kqcircuits.util.export_helper.export_drc_report"]], "generate_probepoints_from_file() (in module kqcircuits.util.export_helper)": [[161, "kqcircuits.util.export_helper.generate_probepoints_from_file"]], "generate_probepoints_json() (in module kqcircuits.util.export_helper)": [[161, "kqcircuits.util.export_helper.generate_probepoints_json"]], "get_active_or_new_layout() (in module kqcircuits.util.export_helper)": [[161, "kqcircuits.util.export_helper.get_active_or_new_layout"]], "get_klayout_version() (in module kqcircuits.util.export_helper)": [[161, "kqcircuits.util.export_helper.get_klayout_version"]], "get_simulation_directory() (in module kqcircuits.util.export_helper)": [[161, "kqcircuits.util.export_helper.get_simulation_directory"]], "kqcircuits.util.export_helper": [[161, "module-kqcircuits.util.export_helper"]], "open_with_klayout_or_default_application() (in module kqcircuits.util.export_helper)": [[161, "kqcircuits.util.export_helper.open_with_klayout_or_default_application"]], "write_commit_reference_file() (in module kqcircuits.util.export_helper)": [[161, "kqcircuits.util.export_helper.write_commit_reference_file"]], "write_export_machine_versions_file() (in module kqcircuits.util.export_helper)": [[161, "kqcircuits.util.export_helper.write_export_machine_versions_file"]], "arc_points() (in module kqcircuits.util.geometry_helper)": [[162, "kqcircuits.util.geometry_helper.arc_points"]], "bezier_points() (in module kqcircuits.util.geometry_helper)": [[162, "kqcircuits.util.geometry_helper.bezier_points"]], "bspline_points() (in module kqcircuits.util.geometry_helper)": [[162, "kqcircuits.util.geometry_helper.bspline_points"]], "circle_polygon() (in module kqcircuits.util.geometry_helper)": [[162, "kqcircuits.util.geometry_helper.circle_polygon"]], "force_rounded_corners() (in module kqcircuits.util.geometry_helper)": [[162, "kqcircuits.util.geometry_helper.force_rounded_corners"]], "get_angle() (in module kqcircuits.util.geometry_helper)": [[162, "kqcircuits.util.geometry_helper.get_angle"]], "get_cell_path_length() (in module kqcircuits.util.geometry_helper)": [[162, "kqcircuits.util.geometry_helper.get_cell_path_length"]], "get_direction() (in module kqcircuits.util.geometry_helper)": [[162, "kqcircuits.util.geometry_helper.get_direction"]], "get_object_path_length() (in module kqcircuits.util.geometry_helper)": [[162, "kqcircuits.util.geometry_helper.get_object_path_length"]], "is_clockwise() (in module kqcircuits.util.geometry_helper)": [[162, "kqcircuits.util.geometry_helper.is_clockwise"]], "kqcircuits.util.geometry_helper": [[162, "module-kqcircuits.util.geometry_helper"]], "merge_points_and_match_on_edges() (in module kqcircuits.util.geometry_helper)": [[162, "kqcircuits.util.geometry_helper.merge_points_and_match_on_edges"]], "point_shift_along_vector() (in module kqcircuits.util.geometry_helper)": [[162, "kqcircuits.util.geometry_helper.point_shift_along_vector"]], "region_with_merged_points() (in module kqcircuits.util.geometry_helper)": [[162, "kqcircuits.util.geometry_helper.region_with_merged_points"]], "region_with_merged_polygons() (in module kqcircuits.util.geometry_helper)": [[162, "kqcircuits.util.geometry_helper.region_with_merged_polygons"]], "simple_region() (in module kqcircuits.util.geometry_helper)": [[162, "kqcircuits.util.geometry_helper.simple_region"]], "vector_length_and_direction() (in module kqcircuits.util.geometry_helper)": [[162, "kqcircuits.util.geometry_helper.vector_length_and_direction"]], "geometryjsondecoder (class in kqcircuits.util.geometry_json_encoder)": [[163, "kqcircuits.util.geometry_json_encoder.GeometryJsonDecoder"]], "geometryjsonencoder (class in kqcircuits.util.geometry_json_encoder)": [[163, "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder"]], "decode_dict_as_python_obj() (in module kqcircuits.util.geometry_json_encoder)": [[163, "kqcircuits.util.geometry_json_encoder.decode_dict_as_python_obj"]], "default() (kqcircuits.util.geometry_json_encoder.geometryjsonencoder method)": [[163, "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder.default"]], "encode_python_obj_as_dict() (in module kqcircuits.util.geometry_json_encoder)": [[163, "kqcircuits.util.geometry_json_encoder.encode_python_obj_as_dict"]], "kqcircuits.util.geometry_json_encoder": [[163, "module-kqcircuits.util.geometry_json_encoder"]], "kqcircuits.util.groundgrid": [[164, "module-kqcircuits.util.groundgrid"]], "make_grid() (in module kqcircuits.util.groundgrid)": [[164, "kqcircuits.util.groundgrid.make_grid"]], "get_all_node_elements() (in module kqcircuits.util.gui_helper)": [[165, "kqcircuits.util.gui_helper.get_all_node_elements"]], "get_nodes_near_position() (in module kqcircuits.util.gui_helper)": [[165, "kqcircuits.util.gui_helper.get_nodes_near_position"]], "get_valid_node_elements() (in module kqcircuits.util.gui_helper)": [[165, "kqcircuits.util.gui_helper.get_valid_node_elements"]], "kqcircuits.util.gui_helper": [[165, "module-kqcircuits.util.gui_helper"]], "node_from_text() (in module kqcircuits.util.gui_helper)": [[165, "kqcircuits.util.gui_helper.node_from_text"]], "node_to_text() (in module kqcircuits.util.gui_helper)": [[165, "kqcircuits.util.gui_helper.node_to_text"]], "replace_node() (in module kqcircuits.util.gui_helper)": [[165, "kqcircuits.util.gui_helper.replace_node"]], "kqcircuits.util.import_helper": [[166, "module-kqcircuits.util.import_helper"]], "module_from_file() (in module kqcircuits.util.import_helper)": [[166, "kqcircuits.util.import_helper.module_from_file"]], "instancehierarchy (class in kqcircuits.util.instance_hierarchy_helpers)": [[167, "kqcircuits.util.instance_hierarchy_helpers.InstanceHierarchy"]], "formatted_cell_instance_hierarchy() (in module kqcircuits.util.instance_hierarchy_helpers)": [[167, "kqcircuits.util.instance_hierarchy_helpers.formatted_cell_instance_hierarchy"]], "get_cell_instance_hierarchy() (in module kqcircuits.util.instance_hierarchy_helpers)": [[167, "kqcircuits.util.instance_hierarchy_helpers.get_cell_instance_hierarchy"]], "instance (kqcircuits.util.instance_hierarchy_helpers.instancehierarchy attribute)": [[167, "kqcircuits.util.instance_hierarchy_helpers.InstanceHierarchy.instance"]], "kqcircuits.util.instance_hierarchy_helpers": [[167, "module-kqcircuits.util.instance_hierarchy_helpers"]], "parent_instances (kqcircuits.util.instance_hierarchy_helpers.instancehierarchy attribute)": [[167, "kqcircuits.util.instance_hierarchy_helpers.InstanceHierarchy.parent_instances"]], "top_cell (kqcircuits.util.instance_hierarchy_helpers.instancehierarchy attribute)": [[167, "kqcircuits.util.instance_hierarchy_helpers.InstanceHierarchy.top_cell"]], "trans (kqcircuits.util.instance_hierarchy_helpers.instancehierarchy attribute)": [[167, "kqcircuits.util.instance_hierarchy_helpers.InstanceHierarchy.trans"]], "bottomleft (kqcircuits.util.label.labelorigin attribute)": [[168, "kqcircuits.util.label.LabelOrigin.BOTTOMLEFT"]], "bottomright (kqcircuits.util.label.labelorigin attribute)": [[168, "kqcircuits.util.label.LabelOrigin.BOTTOMRIGHT"]], "labelorigin (class in kqcircuits.util.label)": [[168, "kqcircuits.util.label.LabelOrigin"]], "topleft (kqcircuits.util.label.labelorigin attribute)": [[168, "kqcircuits.util.label.LabelOrigin.TOPLEFT"]], "topright (kqcircuits.util.label.labelorigin attribute)": [[168, "kqcircuits.util.label.LabelOrigin.TOPRIGHT"]], "kqcircuits.util.label": [[168, "module-kqcircuits.util.label"]], "produce_label() (in module kqcircuits.util.label)": [[168, "kqcircuits.util.label.produce_label"]], "get_text_polygon() (in module kqcircuits.util.label_polygons)": [[169, "kqcircuits.util.label_polygons.get_text_polygon"]], "kqcircuits.util.label_polygons": [[169, "module-kqcircuits.util.label_polygons"]], "load_font_polygons() (in module kqcircuits.util.label_polygons)": [[169, "kqcircuits.util.label_polygons.load_font_polygons"]], "convert_cells_to_code() (in module kqcircuits.util.layout_to_code)": [[170, "kqcircuits.util.layout_to_code.convert_cells_to_code"]], "extract_pcell_data_from_views() (in module kqcircuits.util.layout_to_code)": [[170, "kqcircuits.util.layout_to_code.extract_pcell_data_from_views"]], "get_node_params() (in module kqcircuits.util.layout_to_code)": [[170, "kqcircuits.util.layout_to_code.get_node_params"]], "kqcircuits.util.layout_to_code": [[170, "module-kqcircuits.util.layout_to_code"]], "restore_pcells_to_views() (in module kqcircuits.util.layout_to_code)": [[170, "kqcircuits.util.layout_to_code.restore_pcells_to_views"]], "delete_all_libraries() (in module kqcircuits.util.library_helper)": [[171, "kqcircuits.util.library_helper.delete_all_libraries"]], "delete_library() (in module kqcircuits.util.library_helper)": [[171, "kqcircuits.util.library_helper.delete_library"]], "element_by_class_name() (in module kqcircuits.util.library_helper)": [[171, "kqcircuits.util.library_helper.element_by_class_name"]], "get_library_paths() (in module kqcircuits.util.library_helper)": [[171, "kqcircuits.util.library_helper.get_library_paths"]], "kqcircuits.util.library_helper": [[171, "module-kqcircuits.util.library_helper"]], "load_libraries() (in module kqcircuits.util.library_helper)": [[171, "kqcircuits.util.library_helper.load_libraries"]], "to_library_name() (in module kqcircuits.util.library_helper)": [[171, "kqcircuits.util.library_helper.to_library_name"]], "to_module_name() (in module kqcircuits.util.library_helper)": [[171, "kqcircuits.util.library_helper.to_module_name"]], "kqcircuits.util.load_save_layout": [[172, "module-kqcircuits.util.load_save_layout"]], "load_layout() (in module kqcircuits.util.load_save_layout)": [[172, "kqcircuits.util.load_save_layout.load_layout"]], "save_layout() (in module kqcircuits.util.load_save_layout)": [[172, "kqcircuits.util.load_save_layout.save_layout"]], "kqcircuits.util.log_router": [[173, "module-kqcircuits.util.log_router"]], "route_log() (in module kqcircuits.util.log_router)": [[173, "kqcircuits.util.log_router.route_log"]], "convert_child_instances_to_static() (in module kqcircuits.util.merge)": [[174, "kqcircuits.util.merge.convert_child_instances_to_static"]], "kqcircuits.util.merge": [[174, "module-kqcircuits.util.merge"]], "merge_layers() (in module kqcircuits.util.merge)": [[174, "kqcircuits.util.merge.merge_layers"]], "merge_layout_layers_on_face() (in module kqcircuits.util.merge)": [[174, "kqcircuits.util.merge.merge_layout_layers_on_face"]], "export_cell_netlist() (in module kqcircuits.util.netlist_extraction)": [[175, "kqcircuits.util.netlist_extraction.export_cell_netlist"]], "extract_circuits() (in module kqcircuits.util.netlist_extraction)": [[175, "kqcircuits.util.netlist_extraction.extract_circuits"]], "extract_nets() (in module kqcircuits.util.netlist_extraction)": [[175, "kqcircuits.util.netlist_extraction.extract_nets"]], "kqcircuits.util.netlist_extraction": [[175, "module-kqcircuits.util.netlist_extraction"]], "draw_graph() (in module kqcircuits.util.netlist_graph)": [[176, "kqcircuits.util.netlist_graph.draw_graph"]], "kqcircuits.util.netlist_graph": [[176, "module-kqcircuits.util.netlist_graph"]], "network_as_graph() (in module kqcircuits.util.netlist_graph)": [[176, "kqcircuits.util.netlist_graph.network_as_graph"]], "param (class in kqcircuits.util.parameters)": [[177, "kqcircuits.util.parameters.Param"]], "typeboolean (kqcircuits.util.parameters.pdt attribute)": [[177, "kqcircuits.util.parameters.pdt.TypeBoolean"]], "typedouble (kqcircuits.util.parameters.pdt attribute)": [[177, "kqcircuits.util.parameters.pdt.TypeDouble"]], "typeint (kqcircuits.util.parameters.pdt attribute)": [[177, "kqcircuits.util.parameters.pdt.TypeInt"]], "typelayer (kqcircuits.util.parameters.pdt attribute)": [[177, "kqcircuits.util.parameters.pdt.TypeLayer"]], "typelist (kqcircuits.util.parameters.pdt attribute)": [[177, "kqcircuits.util.parameters.pdt.TypeList"]], "typenone (kqcircuits.util.parameters.pdt attribute)": [[177, "kqcircuits.util.parameters.pdt.TypeNone"]], "typeshape (kqcircuits.util.parameters.pdt attribute)": [[177, "kqcircuits.util.parameters.pdt.TypeShape"]], "typestring (kqcircuits.util.parameters.pdt attribute)": [[177, "kqcircuits.util.parameters.pdt.TypeString"]], "add_parameter() (in module kqcircuits.util.parameters)": [[177, "kqcircuits.util.parameters.add_parameter"]], "add_parameters_from() (in module kqcircuits.util.parameters)": [[177, "kqcircuits.util.parameters.add_parameters_from"]], "get_all() (kqcircuits.util.parameters.param class method)": [[177, "kqcircuits.util.parameters.Param.get_all"]], "kqcircuits.util.parameters": [[177, "module-kqcircuits.util.parameters"]], "pdt (class in kqcircuits.util.parameters)": [[177, "kqcircuits.util.parameters.pdt"]], "kqcircuits.util.plugin_startup": [[178, "module-kqcircuits.util.plugin_startup"]], "register_plugins() (in module kqcircuits.util.plugin_startup)": [[178, "kqcircuits.util.plugin_startup.register_plugins"]], "junctionsimport (class in kqcircuits.util.refpoints)": [[179, "kqcircuits.util.refpoints.JunctionSimPort"]], "refpointtoedgeport (class in kqcircuits.util.refpoints)": [[179, "kqcircuits.util.refpoints.RefpointToEdgePort"]], "refpointtointernalport (class in kqcircuits.util.refpoints)": [[179, "kqcircuits.util.refpoints.RefpointToInternalPort"]], "refpointtosimport (class in kqcircuits.util.refpoints)": [[179, "kqcircuits.util.refpoints.RefpointToSimPort"]], "refpoints (class in kqcircuits.util.refpoints)": [[179, "kqcircuits.util.refpoints.Refpoints"]], "waveguidetosimport (class in kqcircuits.util.refpoints)": [[179, "kqcircuits.util.refpoints.WaveguideToSimPort"]], "a (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[179, "kqcircuits.util.refpoints.WaveguideToSimPort.a"]], "airbridge (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[179, "kqcircuits.util.refpoints.WaveguideToSimPort.airbridge"]], "b (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[179, "kqcircuits.util.refpoints.WaveguideToSimPort.b"]], "cell (kqcircuits.util.refpoints.refpoints attribute)": [[179, "kqcircuits.util.refpoints.Refpoints.cell"]], "deembed_cross_section (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[179, "kqcircuits.util.refpoints.WaveguideToSimPort.deembed_cross_section"]], "dict() (kqcircuits.util.refpoints.refpoints method)": [[179, "kqcircuits.util.refpoints.Refpoints.dict"]], "face (kqcircuits.util.refpoints.junctionsimport attribute)": [[179, "kqcircuits.util.refpoints.JunctionSimPort.face"]], "face (kqcircuits.util.refpoints.refpointtosimport attribute)": [[179, "kqcircuits.util.refpoints.RefpointToSimPort.face"]], "face (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[179, "kqcircuits.util.refpoints.WaveguideToSimPort.face"]], "floating (kqcircuits.util.refpoints.junctionsimport attribute)": [[179, "kqcircuits.util.refpoints.JunctionSimPort.floating"]], "items() (kqcircuits.util.refpoints.refpoints method)": [[179, "kqcircuits.util.refpoints.Refpoints.items"]], "keys() (kqcircuits.util.refpoints.refpoints method)": [[179, "kqcircuits.util.refpoints.Refpoints.keys"]], "kqcircuits.util.refpoints": [[179, "module-kqcircuits.util.refpoints"]], "layer (kqcircuits.util.refpoints.refpoints attribute)": [[179, "kqcircuits.util.refpoints.Refpoints.layer"]], "other_refpoint (kqcircuits.util.refpoints.junctionsimport attribute)": [[179, "kqcircuits.util.refpoints.JunctionSimPort.other_refpoint"]], "over_etching (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[179, "kqcircuits.util.refpoints.WaveguideToSimPort.over_etching"]], "rec_levels (kqcircuits.util.refpoints.refpoints attribute)": [[179, "kqcircuits.util.refpoints.Refpoints.rec_levels"]], "refpoint (kqcircuits.util.refpoints.junctionsimport attribute)": [[179, "kqcircuits.util.refpoints.JunctionSimPort.refpoint"]], "refpoint (kqcircuits.util.refpoints.refpointtosimport attribute)": [[179, "kqcircuits.util.refpoints.RefpointToSimPort.refpoint"]], "refpoint (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[179, "kqcircuits.util.refpoints.WaveguideToSimPort.refpoint"]], "side (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[179, "kqcircuits.util.refpoints.WaveguideToSimPort.side"]], "term1 (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[179, "kqcircuits.util.refpoints.WaveguideToSimPort.term1"]], "towards (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[179, "kqcircuits.util.refpoints.WaveguideToSimPort.towards"]], "trans (kqcircuits.util.refpoints.refpoints attribute)": [[179, "kqcircuits.util.refpoints.Refpoints.trans"]], "turn_radius (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[179, "kqcircuits.util.refpoints.WaveguideToSimPort.turn_radius"]], "use_internal_ports (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[179, "kqcircuits.util.refpoints.WaveguideToSimPort.use_internal_ports"]], "values() (kqcircuits.util.refpoints.refpoints method)": [[179, "kqcircuits.util.refpoints.Refpoints.values"]], "waveguide_length (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[179, "kqcircuits.util.refpoints.WaveguideToSimPort.waveguide_length"]], "junctionentry (class in kqcircuits.util.replace_junctions)": [[180, "kqcircuits.util.replace_junctions.JunctionEntry"]], "check_static_cell_has_junctions() (in module kqcircuits.util.replace_junctions)": [[180, "kqcircuits.util.replace_junctions.check_static_cell_has_junctions"]], "convert_cells_to_static() (in module kqcircuits.util.replace_junctions)": [[180, "kqcircuits.util.replace_junctions.convert_cells_to_static"]], "copy_one_layer_of_cell() (in module kqcircuits.util.replace_junctions)": [[180, "kqcircuits.util.replace_junctions.copy_one_layer_of_cell"]], "extract_junctions() (in module kqcircuits.util.replace_junctions)": [[180, "kqcircuits.util.replace_junctions.extract_junctions"]], "get_tuned_junction_json() (in module kqcircuits.util.replace_junctions)": [[180, "kqcircuits.util.replace_junctions.get_tuned_junction_json"]], "kqcircuits.util.replace_junctions": [[180, "module-kqcircuits.util.replace_junctions"]], "place_junctions() (in module kqcircuits.util.replace_junctions)": [[180, "kqcircuits.util.replace_junctions.place_junctions"]], "replace_squid() (in module kqcircuits.util.replace_junctions)": [[180, "kqcircuits.util.replace_junctions.replace_squid"]], "replace_squids() (in module kqcircuits.util.replace_junctions)": [[180, "kqcircuits.util.replace_junctions.replace_squids"]], "kqcircuits.util.symmetric_polygons": [[181, "module-kqcircuits.util.symmetric_polygons"]], "polygon_with_hsym() (in module kqcircuits.util.symmetric_polygons)": [[181, "kqcircuits.util.symmetric_polygons.polygon_with_hsym"]], "polygon_with_sym() (in module kqcircuits.util.symmetric_polygons)": [[181, "kqcircuits.util.symmetric_polygons.polygon_with_sym"]], "polygon_with_vsym() (in module kqcircuits.util.symmetric_polygons)": [[181, "kqcircuits.util.symmetric_polygons.polygon_with_vsym"]]}})
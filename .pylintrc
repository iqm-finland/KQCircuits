[BASIC]
# allow short names, but require snake_case
argument-rgx=[a-z_][a-z0-9_]{0,30}
attr-rgx=[a-z_][a-z0-9_]{0,30}
# reserve ``sim_class`` as valid class name for simulation scripts.
# see if this rule can be localised to klayout_package/python/scripts/simulations
class-rgx=([A-Z_][a-zA-Z0-9]{0,30}|sim_class)
const-rgx=[a-zA-Z_][a-zA-Z0-9_]{0,30}
variable-rgx=[a-z_][a-z0-9_]{0,30}

[FORMAT]
max-line-length=120
max-public-methods=30

[TYPECHECK]
# otherwise all usages of pya and klayout.db cause warnings
ignored-modules=pya,klayout.db

[VARIABLES]
# Define built-in variables for Ansys
additional-builtins=_version, oDesktop, ScriptArgument

[MESSAGES CONTROL]
disable=
    arguments-differ,
    attribute-defined-outside-init,  # PCell attributes are not in __init__()
                                     # but defined with the Param descriptor class
    disallowed-name,
    duplicate-code,
    fixme,
    import-error,  # false positives for simulation scripts
    logging-fstring-interpolation,
    missing-class-docstring,
    missing-function-docstring,
    missing-module-docstring,
    no-else-return,
    no-member,  # false positives for example in simulations and __log calls
    protected-access,  # problems with _log
    redefined-outer-name,
    too-few-public-methods,
    too-many-arguments,
    too-many-boolean-expressions,
    too-many-branches,
    too-many-format-args,
    too-many-instance-attributes,
    too-many-locals,
    too-many-nested-blocks,
    too-many-positional-arguments,  # could consider refactoring all offending functions to use kw args
    too-many-return-statements,
    too-many-statements,
    too-many-lines,
    unnecessary-lambda-assignment,  # effectively disables lambdas entirely? We want to use lambdas
